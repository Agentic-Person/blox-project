{
  "timestamp": "2025-09-01T19:38:39.748Z",
  "totalVideos": 52,
  "successful": 21,
  "failed": 31,
  "successRate": "40.4%",
  "results": [
    {
      "videoId": "p005iduooyw",
      "title": "The ULTIMATE Beginner Guide to Roblox Studio.. (Start BUILDING Now!)",
      "success": true,
      "transcriptLength": 37644,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "P2ECl-mLmvY",
      "title": "The EASIEST Beginner Guide to Scripting (Roblox)",
      "success": true,
      "transcriptLength": 50387,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "OAW81QZpvRY",
      "title": "FULL Guide to Blenderâ€¦ For COMPLETE Noobs!",
      "success": true,
      "transcriptLength": 20090,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "D2LrlxWk8kc",
      "title": "The Secrets to MOTIVATION As A Roblox DEV...",
      "success": true,
      "transcriptLength": 16559,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "-xQBxTYq2m8",
      "title": "The BEST Way to Learn Building! (Roblox Studio)",
      "success": true,
      "transcriptLength": 4156,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "b_31P1MEOlc",
      "title": "The EASIEST Guide to Making a Low Poly Asset Pack.. (Roblox + Blender)",
      "success": true,
      "transcriptLength": 9405,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "CippiATeZ54",
      "title": "The EASIEST Guide to Making Amazing Terrain (Roblox Studio)",
      "success": true,
      "transcriptLength": 7868,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "mk6iVm95D0U",
      "title": "How to OPTIMIZE Your Roblox Game... Easiest Guide!",
      "success": true,
      "transcriptLength": 5322,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "fz-0n9ed9xU",
      "title": "The Complete Guide to Roblox Development Success (Free Course)",
      "success": true,
      "transcriptLength": 25390,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "99C5K1cdql8",
      "title": "The Complete Guide to Lighting in Roblox Studio",
      "success": true,
      "transcriptLength": 24118,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "W337AL7n3dc",
      "title": "The ULTIMATE Blender Modeling Guide for Noobs! (Make Assets For Games!)",
      "success": true,
      "transcriptLength": 33711,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "qZIOA7mFaRg",
      "title": "Introduction to Blender and CG Cookie - BLENDER 4.5 BASICS (part 0)",
      "success": true,
      "transcriptLength": 8766,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "i8wO5PEDO1c",
      "title": "Intro to 3D Navigation in Blender - BLENDER 4.5 BASICS (part 1)",
      "success": true,
      "transcriptLength": 6633,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "zkupB5S3sUQ",
      "title": "Selecting Objects in Blender - BLENDER 4.5 BASICS (part 2)",
      "success": true,
      "transcriptLength": 6073,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "lYr25_YeuL8",
      "title": "Transforming Objects in Blender - BLENDER 4.5 BASICS (part 3)",
      "success": true,
      "transcriptLength": 11188,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "ACdtFVSbDZo",
      "title": "Adding, Deleting, and the 3D Cursor in Blender - BLENDER 4.5 BASICS (part 4)",
      "success": true,
      "transcriptLength": 8090,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "vlR6qAbIlR0",
      "title": "Orientations and Parenting in Blender - BLENDER 4.5 BASICS (part 5)",
      "success": true,
      "transcriptLength": 8868,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "eJH0hxlhd5M",
      "title": "Mesh Components and Object Origins in Blender -BLENDER 4.5 BASICS (part 6)",
      "success": true,
      "transcriptLength": 8280,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "HFstA5lM4BM",
      "title": "Object Data and Duplication in Blender - BLENDER 4.5 BASICS (part 7)",
      "success": true,
      "transcriptLength": 5727,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "PfBO0Gfla_Y",
      "title": "Pivots, Snapping, and Proportional Editing in Blender - BLENDER 4.5 BASICS (part 8)",
      "success": true,
      "transcriptLength": 10387,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "fPXT6-6Z7pU",
      "title": "Visibility and Collections in Blender - BLENDER 4.5 BASICS (part 9)",
      "success": true,
      "transcriptLength": 10412,
      "method": "yt-dlp-subtitles",
      "error": null
    },
    {
      "videoId": "2cQROA13T04",
      "title": "Mesh Normals and Smoothing in Blender - BLENDER 4.5 BASICS (part 10)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "g5WCcHsgWf4",
      "title": "Extrude, Inset, and Knife in Blender - BLENDER 4.5 BASICS (part 11)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "Iyk1rBNFMDg",
      "title": "Bevel and Loop Cut in Blender - BLENDER 4.5 BASICS (part 12)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "IjsugFxhB1w",
      "title": "Subdivide, Fill, and Merge in Blender - BLENDER 4.5 BASICS (part 13)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "JiQuGealRrs",
      "title": "Modifiers in Blender - BLENDER 4.5 BASICS (part 14)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "eVRiJYhE0Wk",
      "title": "Editors and Windows in Blender - BLENDER 4.5 BASICS (part 15)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "5dRvcq0rLzU",
      "title": "Working with Blender Files - BLENDER 4.5 BASICS (part 16)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "iiXElj1DLBo",
      "title": "Cameras and Rendering in Blender - BLENDER 4.5 BASICS (part 17)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "4LySeRWSNiA",
      "title": "Materials and Textures in Blender - BLENDER 4.5 BASICS (part 18)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "E3d7R7BNr_4",
      "title": "Lighting in Blender - BLENDER 4.5 BASICS (part 19)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "xKv0mARhsMg",
      "title": "3D Animation with Keyframes in Blender - BLENDER 4.5 BASICS (part 20)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "66OK9hebBmE",
      "title": "Stop Doing Head Math in Blender: Turn Any Input Field Into a Calculator (+ Auto Unit Conversion)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "lLqep5Q4MiI",
      "title": "Blender 4 for Absolute Beginners : A Comprehensive Guide from Scratch",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "QdMrWxOnqnE",
      "title": "Blender 4 for Absolute Beginners - A Comprehensive Guide from Scratch  - Part 2 of 2",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "p005iduooyw",
      "title": "The ULTIMATE Beginner Guide to Roblox Studio.. (Start BUILDING Now!)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "P2ECl-mLmvY",
      "title": "The EASIEST Beginner Guide to Scripting (Roblox)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "OAW81QZpvRY",
      "title": "FULL Guide to Blenderâ€¦ For COMPLETE Noobs!",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "-xQBxTYq2m8",
      "title": "The BEST Way to Learn Building! (Roblox Studio)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "99C5K1cdql8",
      "title": "The Complete Guide to Lighting in Roblox Studio",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "b_31P1MEOlc",
      "title": "The EASIEST Guide to Making a Low Poly Asset Pack.. (Roblox + Blender)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "CippiATeZ54",
      "title": "The EASIEST Guide to Making Amazing Terrain (Roblox Studio)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "D2LrlxWk8kc",
      "title": "The Secrets to MOTIVATION As A Roblox DEV...",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "mk6iVm95D0U",
      "title": "How to OPTIMIZE Your Roblox Game... Easiest Guide!",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "W337AL7n3dc",
      "title": "The ULTIMATE Blender Modeling Guide for Noobs! (Make Assets For Games!)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "fz-0n9ed9xU",
      "title": "The Complete Guide to Roblox Development Success (Free Course)",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "QPh8h0hWkg0",
      "title": "Beginner Blender 4.2 Tutorial: Modelling a Low-Poly Well - Part1",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "gyr59jaWT0U",
      "title": "Beginner Blender 4.2 Tutorial: Modelling a Low-Poly Well - Part2",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "yBwV3CLG2uM",
      "title": "Beginner Blender 4.2 Tutorial: Modelling a Low-Poly Well - Part3",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "P_OKJ-CreLU",
      "title": "Beginner Blender 4.2 Tutorial: Modelling a Low-Poly Well - Part4",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "CTNPJoB6MC8",
      "title": "Beginner Blender 4.2 Tutorial: Modelling a Low-Poly Well - Part5",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    },
    {
      "videoId": "7QiewPqkG80",
      "title": "Detailed Low Poly Characters: My Workflow & Essential Tips: Blender",
      "success": false,
      "transcriptLength": 0,
      "method": "failed",
      "error": "Subtitle extraction failed: Failed to parse subtitles: HTTP Error 429: Too Many Requests"
    }
  ],
  "transcripts": [
    {
      "videoId": "p005iduooyw",
      "title": "The ULTIMATE Beginner Guide to Roblox Studio.. (Start BUILDING Now!)",
      "transcript": "so Timmy wants to be a Roblox developer and instead of opening Roblox Studio he searches how to become a Roblox Dev and he just searches for hours just to find an easy way to become a Roblox developer he tries and tries and tries but it's just not enough for him why can't I get this he says any rage quits he just decides to give up on his dream of becoming a Roblox Dev and going back to playing pet simulator wait Timmy what are you doing the light at the end of the tunnel arrives Lord regulus the pro developer who climbed to the top of the front page in blazing speed with 15 games that hit the front page and hundreds of millions of visits and Robux made he can teach Timmy right Jimmy just open up studio and start messing around you'll start to get it with enough work okay so Underlord regulus's guidance Timmy goes ahead and tries it he opens up studio and starts messing around placing parts and trying to make the games of his Wireless streams and with enough time and dedication he begins to move Parts at the speed of light he makes the game of his dreams and starts to see it all come to you hold up hold up hold up this is not gonna happen that easy but at least it's somewhat relatable this guide right here is going to show you exactly how to use Roblox Studio from start to finish exactly down to the Last Detail this is the best guide you're going to see on it I started just like you with zero experience and now you are lucky to get this very video I wish I had when I got started it would have been way easier and I would have learned way faster saving me days or weeks maybe even months of time so let's get started first we need to download Roblox Studio of course now this is pretty easy obviously if you've downloaded Roblox on your computer you should already have studio and all we need to do is search for it so if you're on Mac you can click the search button on the top right of your menu bar at the top of your screen or if you're on Windows like me go ahead and click the search button down here and you can go ahead and click and you can type in Roblox Studio it should show up and if doesn't you can go ahead to roblox. com create and there will be a download link there I'll also link it in the description for you to go ahead and head over there one of the first links in the description cool now let's let Roblox Studio load up and let's get into it so we want to make our first game Roblox Studio has a few different sections where you can make a game and edit all the games you've made in the past and these sections of Roblox Studio are on the left hand side you can go ahead and see there is a new project button there's a my games button there's a recent button and there's an archive button now the most important one when we get started is new because this has all of our templates where we can choose different templates to get us started with and really you only need to worry about these first three the other ones are not that great to be honest and you can go ahead and see your games here and all your group games and then recent we'll show you recent projects you've opened on the computer that you're using so let's just start with a base plate a basic new base plate right here not classic base plate let's just use the normal one and there we go you've made your first Roblox game congrats you can close this video now wait wait no never mind uh keep watching and your first quote-unquote game but there's a lot more to understand to get started in Roblox studio so let's go the UI of Roblox studio so the first thing we're going to look at is the UI or user interface of Roblox Studio which includes all of the buttons panels and menus in Roblox studio now I'm not trying to overwhelm you with a bunch of stuff so I'm gonna go ahead and show you the main panels and we'll get into everything else later first is the top bar of Roblox Studio this is where we're gonna get started so first one in the in the top left is file and this has what you'd expect from your average program so as you can see we can see our recent games we've edited you can see new you can see open from file open from Roblox close Place Etc now you can save to a file which will save as a Roblox Place file which will allow you to access your place on the computer or send that place to somebody else as a file so they can edit that instance of the place but don't worry about that the main one you need to worry about is publish to Roblox publish to Roblox allows you to put it on the website public so that it can be played by everyone of course if you set it to public and save to Roblox saves it but it does not make the changes public so I can go ahead and publish and that's going to be seen by everyone below this menu bar below this top menu bar up here we have a selection of items which are very important to the use of Roblox studio and especially to building so to go ahead and move around in Roblox Studio we can right click to go ahead and look around in Roblox Studio we can look around in what we call the viewport which is in the middle of the screen lets us see everything inside the game and we can use the a wsd Keys just like a game to go ahead and move back and forth but there's an additional two keys which you can use to move around which is the Q and the E Keys Q will move down and E will move up now you can right click look around but there's one last thing you can scroll to go ahead and go really fast and move around faster Zoom if you will so yeah the first button that we should take a look at is the part button part button will go ahead and place a part in our game if we click it and as you can see it has a drop down here which allows us to see block sphere wedge Corner wedge cylinder so we can choose different shape parts to use in our game now of course the main one you're going to be using is a normal block so now that we've placed this we can actually drag this around and we can choose where we want to place it now you might notice that mine is moving really smoothly and one really important thing is the increment so you can actually change the increment that this moves at and this brings us to these different tabs here which include home model Avatar test View and plugins view has all of the different things in Roblox studio and we can show them and hide them Tess has the play button start button and several other options for you to test Avatar has Avatar options for animating and designing avatars and model has most of the features that we need for building it has a little bit more than home but home has all the main ones but if we go to model it actually has this thing called Snap to grid now snap to grid is actually going to allow us to go ahead and change the increment that we move and scale Parts at so if we change this to be checked off I'm not sure most the time most the time yours should already be checked and it should say one stud by default and 45 degrees as your rotate now this is horrible by the way 45 degrees is bad for rotation as you can see it rotates really really really stiffly we don't want this and so I usually have mine at 15 and then I leave my move at either 0.1 0.25 or 0.5 and then sometimes I turn it off when I'm moving around bushes and stuff but a really good one to start with is probably 0.5 or even one stud because one stud is good and one method you could do is you can start building with one stud and then later you can go ahead and switch to smaller ones as you get more into the deep details of your build now you'll notice that on both the Home tab and the model tab there is a select move scale and rotate tool and these are very self-explanatory select is very useful when you just want to drag stuff and you know move things around without worrying about moving it with any other type of dragger and having these in the way you can just drag it select it deselect it now move is for more exact movements so you can of course always move your part by just dragging it but you're going to notice pretty quickly that building things well using that dragging feature is going to be horrible so I highly recommend that you go ahead and use the move tools for more exact movements so we can go ahead and drag and we can move it up and down left to right and that type of thing and by the way this moves on the y axis this moves on the x axis and this moves on the Z axis and these represent different positions inside of the game world now we'll get into that more later but it's good to know X Y and Z especially if you're going to go into scripting later and especially if you want to be an advanced Builder now back to the UI around the rest of the screen we have several different panels and by default you have the toolbox or you should have the toolbox the properties window which is right here and usually I believe that it is right here actually and we also have the output window and this will spit out different things from your code but we don't really have to worry about this right now so let's close that now if you do not see any one of these menus you can go ahead up here to view and we can select Explorer and you'll will see it disappears and appears and there is a chance that it might be stacking up with other windows and glitching out in that case you can click it a ton of times until you see it on your screen or you can close out windows until you see it so I can go ahead and close out tool grip editor and all this stuff and then I'll be able to cycle through these easier so let's go ahead and look at each individual one of these main panels so toolbox you can get your models that you've made in the past in the inventory section or in this one that lets you see the models you've made and this one shows you recent models you've used this one it's your models these are very similar tags except this one allows you to see group models too now this one is the interesting one you've heard about free models right and if you're really new to development you probably don't necessarily even know how to get them but you can go ahead and get free models from this you can get all kinds of different models that people have made now most of these are not the best quality and a lot of them if you use all three models as you've probably seen all free model games nothing matches up it's horrible to use all free models unless you're very careful with it which it does take some time and practice honing your own building skills to know how to match together different free models but with that in mind they're okay to look at and learn from but I would not recommend making entire games with them you can practice with it you can practice dragging stuff in practice handling models with these it's very good but we don't want you sitting around throwing free models in studio that's not going to do anybody any good and that's how I started but look that's not how we want to start if we're trying to learn this quickly and trying to skip all the randomness so next up Explorer now the Explorer the Explorer window is very crucial so pay attention it is very much so one of the most important windows in Roblox studio so you need to see this so each one of these inside of the Explorer window is called a service a service is a different piece of the Roblox engine that does a different function and it allows us to go ahead and do different things inside our game and contain different aspects of our game so the most important one and the main one that we'll be using is called workspace everything that exists visibly in your game that is an object not the lighting we'll get into that later but that's also visible everything that is in workspace is all that you can see in the game aside from light don't worry about that yet but everything you can see in the game is in workspace so this right here this is in workspace as you can see if we select it we'll see it right here this is a spawn location now face split this is our base plate it's in workspace if we hit the delete key it's gone and it's also gone from the Explorer so I'm going to go ahead and click control Z or command Z on Mac to undo that and by the way to redo it is control shift Z or command shift Z on Mac now lighting is the other one you can see and you can change different aspects of how the game's lighting looks so for example we can raise our brightness do a bunch of cool stuff there's a bunch of different properties in lighting which allow you to change how the game looks and can go ahead and see how to use all of these in the video in the right hand corner you can go ahead and pop that open in a new tab and watch that after this so you can learn lighting if you would like because it is a very interesting and fun thing to do so you can actually make quite a bit of Robux easily by making lighting because in my opinion lighting if you have an eye for it is really easy to go ahead and start making Robux from because it's like one of the easiest things to make in Roblox studio so just a note there for any of you who want to learn a skill that can make you Robux fast lighting do it next up the basics of building so in this section of the video we are going to look at the basics of building and I'm going to show you how to build now that we're out of the way of the boring UI we're into building so if we go ahead and choose select by clicking on it if it's not already chosen so if it's dark gray like mine that means that it's selected if it's not dark gray then it's not selected then we can hover our cursor over a part and drag it wherever we want so for anyone over this but yeah but now let's look at the scale tool so the scale tool very similar in how it works to the move tool except you grab one of these draggers and you can go ahead and move it and see it stretch into the sky alright so now we're going to turn this part into a wall we're gonna build a wall so you can scale your part up and you can say you know I want to make this a huge wall and I want to stretch it over the whole base plate alright so we've built our wall so now what we need to do we need to look at the different ways you can scale parts so we've scaled this wall outright I've scaled out really long on both sides but there are a few different ways that you can scale Parts which are going to be really useful in building one way is by holding control and dragging one of these and you can go ahead and stretch it out on both sides and you can hold shift to stretch it out on all sides in One Direction if we hit Ctrl Z we can go ahead and undo that and if you go ahead and click control shift click you can go ahead and stretch it out evenly from the middle or the origin Point here and you can stretch it out in all directions that way now more keybinds you can go ahead and click control R and you can go ahead and turn it 90 degrees now you can click Ctrl T and this will turn it vertically 90 degrees interesting right control T though is a little bit is a little bit weird though alright now let's go ahead and delete this now we're going to look at some more keybinds of building and let's start actually building a basic building so I'm going to go ahead and add a new part in the model tab I'm going to click the part button and now we're going to hold Ctrl scale that down then I'm going to stretch this out let's make it a good length go ahead and make this taller we'll go ahead and click control D to duplicate this part we're going to stretch it all the way down here stretch it out to the length of wall we want move this move this out one stud and you don't want anything overlapping while you while you're building this is really important because if you have stuff over lapping let me show you so let's go ahead and select the part go to our properties panel and change the brick color to teal now if I stretch this over this you'll see that it starts flickering this is called Z fighting and Z fighting is a horrible looking glitch so you know this is normal and it's gonna happen on accident but we want to avoid this as much as possible so that's partly why I'm doing that to make sure we don't have any Z fighting I know that we aren't recoloring this we're going to leave it as medium Stone gray but it's good to keep in mind also while we're on colors there is a custom color property which I recommend using as much as possible because these are not really enough especially as you get more advanced in your builds now let's go ahead and click on this and hold shift and we can go ahead and have both of these selected at once then I'm going to click Ctrl D to duplicate then I'm going to click control r twice and now we have this on both sides now let's go ahead and add a roof but with the roof let's use a different kind of bar so let's click this let's add a wedge and then we're going to click Ctrl R drag this up here and then we're going to go ahead and stretch this out now one thing I want to do is I want to select this wall and check the size so it's 36 if your wall is uneven sized you might want to change it to something that's even but 36 divided by 2 is 18. so if we go ahead and make this 18 studs wide we can go ahead and make that good and then if we click control D Ctrl R twice we can go ahead and drag this back here and there we go so now we have our basic shape of a house or a building so if we go ahead and flick this and hold shift and click on this let's go ahead and recolor this let's make it let's make this white so I'm going to go ahead and choose a nice kind of quilt I think quill gray looks good and then I'm going to go ahead and I'm going to add a block all right then I'm going to drag this up here and stretch it out to the same size as the top of our roof maybe change this down to 0.25 see if that now we're having a little bit of an alignment issue here not exactly sure why this is happening let's see the size this might be fixed by changing the height of this if we had to add more of an even angle I believe it would be better but it doesn't really matter for now so I'm going to change the brick color to a nice Brown so we have our roof go ahead and click Ctrl D and then hit Ctrl r twice and then now we run into a predicament right so this is very important in building and I feel like a lot of people don't even know this but if you go ahead and see these draggers they're very they're lined up with the part right this is called local space and local space is the basically the position of the part the move tool is being based on the position of the part the rotation of the part it's using its own space to go ahead and calculate how it's going to move but obviously this isn't really going to work too well if we're trying to move it over there unless we did a this but it's gonna be hard to line up so what we can do is we can go ahead and right click and click use World space and we can change that to World space so now it's based off the whole world it's based off the world rather than the part so it's going to say the same direction as what we'd expect and now we can go ahead and move this in place with no problem and there we go another issue it's not lining up what okay this is weird now we could do the simple fix which is just to drag this but I do recommend the plug-in which is called resize a line I'll go ahead and Link it below for you it's really useful and it allows you to resize stuff and align edges so you can go ahead and go to your plugins tab after you download it and you can usually just get it in plugins actually on the toolbox so if you go to plugins search up resize align we can go ahead and get that stravent resize align and use that so geom tools we'll open that up if you have multiple by this guy I recommend all of these by the way but resize the line now we can go ahead and click on this click on that and align those two edges up and now it's good no problems there anymore now I'm gonna go ahead and I'm going to select this actually let's not do that yet I'm going to select I'm going to box select click from this corner drag select all of these I'm going to make the walls a nice red but then I'm going to go in here change this to be a darker red and we'll call that good right there and now I kind of want to extend these walls out just give it some depth you know let's just do that on one side let's just do that on this side just a little bit there we go not the greatest not the greatest but very good for starters now let's go ahead and look at how we can make windows and doors and that kind of thing inside of your building so one way you can do this is by simply hitting Ctrl D on this part holding control and then now we have a center right we have a center part and we can say that's our Center and then we can just go ahead and resize this down and I'm gonna go back to 0.5 I'm going to use resize one real quick and yeah so okay go back down to 0.5 and now that we have a center we can go ahead and go off of this I'm gonna align these with resize the line and now one two three four five I'm gonna I'm gonna do one stud okay so that was two and a half studs all right drag that now I'm gonna hit Ctrl D to duplicate that and I'm gonna go ahead and move that over here and there we go so that is how you can get a centered up hole or window now we can just go ahead and duplicate this boom and grab resize the line resize those Ctrl D that scale it down and there you go you pretty much get the gist and go ahead and duplicate this we can go ahead and make some window sills and let's go ahead and go back down to 20.25 man so this is one issue with building studio and why I recommend learning blender because it can be really annoying to be doing all of these scaling and measurement Etc so yeah I'm gonna go ahead and duplicate that why is this not looking Center all right so I went ahead and added some stuff to my window now we can go ahead and duplicate a part in here hit Ctrl D we can go ahead and hold Ctrl scale that up let's uncheck the move make that thinner turn it to blue and then we can go in properties and we can go ahead and increase the transparency and also the reflectance to get a nice look for a window we can change the material to smooth plastic and we can go ahead and have a pretty nice looking window so pretty good not the greatest but we're going to improve with time as you build and get better at it now I could do a much better window than this but I'm not going to worry about it for now because we're just looking at the basics now another way is with what we call unions so unions in studio is another feature involved with building and this lets you cut Parts out of other parts and glue Parts together and all that kind of stuff personally I'm not the biggest fan of unions but for simple things I believe they're very useful sometimes and even necessary so you might run into problems and builds and you need to to You Know cover up a gap or fill something or do something really quick that is when I personally think unions are the best and otherwise you should probably use blender for it but unions can also be used for things like Windows so you can hit Ctrl D hold Ctrl hold Ctrl and we can go ahead and just scale this down uh we can right click and we can click negate to go ahead and turn this in to a negated part which will let us cut it out of another part but we can also hit control shift n or command shift n on Mac to go ahead and make this negated now you'll see it's like red transparent now if you hold shift and click on another part we can right click and hit Union or as you can see the keybind is Ctrl shift G so if you hit Ctrl shift G we go ahead and Union that together so now we have a union now one issue with unions is as you make more complex ones Roblox gets really bad at rendering these and they kind of are bad for your game's performance so you want to avoid using unions too much one other issue we won't be able to go through this usually because now we this is basically a mesh and a mesh is one object rather than a bunch of parts so it's it doesn't know exactly how to calculate this so that you can go through this hole but there is a fix to keep in mind so if we select this we can go ahead and go down in our properties and change the Collision Fidelity to precise convex deposition and we'll be able to go ahead and jump through this of course if the space allows example but yeah that gives you an idea of the basics of building now we're going to go ahead and look at some more stuff in studio such as how to publish and save our game we're going to go ahead and look at how to publish your game so if we go ahead and click publish to Roblox we can publish this game but I'm going to click publish to Roblox as just so that I can make a copy for an example for you guys so I'm gonna hit publish Roblox ads and we're gonna make a new game and now you'll see here that we can name it and we can name it whatever we want so we can name our game blah blah blah blah test I don't know and then we can do whatever we can create we can choose the Creator we can choose the group we want it to be in or you can have it created by yourself you can create the genre which helps Roblox catalog categorize your game a little bit and you can choose which devices it can be played on or recommend checking off console and team create team create lets you have people work with you in studio on your your project just like it was a game on Roblox like you're playing together except you're all in studio building at the same time which is a really great insanely useful feature that I use all the time with friends and development Partners so yeah really useful now once you're done setting this up you can hit create and it'll publish it on Roblox so some more about the studio UI now we can go ahead and look at file and we can see that we have several things and the first one I want to show you is Advanced now Advanced actually has something which is called customized shortcuts now you might have been wondering earlier how was I possibly opening up resize aligned so fast well I have a custom shortcut for resize a line so you can set shortcuts you can change the default ones to whatever you want so that you can go ahead and use stuff in studio way faster so let's go ahead and click customize shortcuts and we can go ahead and find resize align for example people and we can go ahead and click on the shortcut Box by double clicking it then we can click r or whatever you want I use R for mine and you'll go ahead and have a shortcut for resize a line or whatever you're setting a shortcut for so it's really useful and I really recommend doing this but be careful when you're doing this don't accidentally reset something like really useful you're going to mess some stuff up so I'm going to hit OK and then another thing is beta features so beta features allows you to see some of the new features in studio that they're adding and it allows you to get these new things in studio early so one thing I want you to make sure you have enabled is material generator now material generator is a new thing made by Roblox which lets you make AI materials really like they're really awesome so let's click make sure that's checked off and we'll go ahead and hit save now in the Home tab you should see it here I'm not seeing it for some reason so I'm going to go ahead and reopen my place alright now see it right here material generator and you might have to reopen Roblox Studio like I did to see it because it's a new feature but with this you can go ahead and generate materials for your game so rather than using the default ones like oh leafy grass mud all this stuff now instead of having to import your own or make some you can just have ai make it so go ahead and set this back to smooth plastic and now if we go ahead to the material generator we can go ahead and type in let's say what is it called exciting yeah it's called siding there we go then you can go ahead and hit enter or click generate and boom it's going to spit out some textures for us and these will be instantly able to be applied so wow actually these are really good so let's go ahead and try this one here and you can go ahead and scale it down change the studs per tile you can make it organic to make it kind of randomized looks pretty cool I'm gonna go ahead and see some other one this one I like this one it looks more cartoony but it always does have the PBR you can always take that off though hard choices huh I think I'm gonna choose this one I think this one's the best so and we'll go ahead and choose the base material I'm gonna make that wood planks and I'm going to click save and apply variant you can change the subs per tile to change the size and now we can go ahead and select all our parts and close this out and we can go ahead and go into we can hold shift to select those by the way we can go into material variant and change that to red house siding material and there we go so you might see we're gonna have some Z fighting so things aren't going to line up fully but that's an easy fix as we mentioned earlier although tedious it's pretty easy we can move these scale them to change how that looks you might need to do this you know pretty easy stuff I'm going to use resize line now that we have a key bind we can click R and go ahead and do that go ahead and scale that good enough for now now I'm gonna make a roof material just for fun Roofing horizontal black let's see what it spits out for us I kind of like that but I'm gonna ask for a more cartoony one so let's see what it does interesting huh interesting wow okay ah okay so I'm gonna use this one and let's try organic all right cool okay now there is another plug-in by the same person who made this it's called material flip and this will allow us to flip the materials you can get this in toolbox by searching it up and there we go so now it is the right way and I think I'm gonna extend the roof out one pretty nice with those materials so those are a lifesaver especially for new Builders really really insane so you're gonna be able to make some really unique stuff with that but if you right click this and you click insert object there are a ton of different objects you can mess with and I recommend trying out textures which allow you to make a tiling image of your own and decals which allow you to add an image so we can go ahead and insert a texture in here and do whatever we want with that but for now you've mastered most the basics of building in Roblox studio and you're ready to take your skills to the next level so now let's look at some more advanced building techniques so first up grouping and ungrouping so we've looked at unions and unions to let us combine Parts but this is a lot different this just lets you make different groups so if we go ahead and click up here and drag and box select our house and hit Ctrl G we can make a group now this is one combined group you'll see it's a model in workspace we can right click this and rename it of course and name it house one and by the way when you're naming I recommend not doing any spaces so it's easier for when a scripter goes ahead and works with it now we can go ahead and drag this around as one thing thing and this might happen that happens with models but that is fine if we go ahead and click this and change the primary part to Something in here it'll fix that issue for us so yeah grouping is pretty awesome we can also group as a folder a folder does not let you do this but it's much better for organization purposes so you can right click and click group as a folder or you click Ctrl alt G to go ahead and make it a folder next up the terrain editor the terrain editor is a very useful tool and it allows you to make some very awesome things in studio if we go to view we can go ahead and find the terrain editor and it should be up in here somewhere yeah right here so this is the terrain editor you can just click that so you see it on your screen and we can go ahead and click the edit button to go ahead and see our main terrain tools so terrain now we can go ahead and add terrain right we can add it adding terrain's all right but it's not the greatest tool aside from when you're just getting started my favorite way to get the Baseline layer of terrain is to go ahead and get a plug-in called part 2 terrain and what this does is it goes ahead and lets us make any part into terrain so I'm going to go ahead and choose grass and click on the base plate now again you can find this plugin by going to toolbox and going to plugins and searching for part two Terrain go ahead and get that plug-in now you might notice that this goes ahead and makes everything a little bit sunken in that's fine we can just drag it and do that or you can go ahead and move your base plate down before you change it into terrain but yeah now the tools so we did we did look at app now add as I said I don't really like the add tool I believe the grow tools better in most cases but you can go ahead and change the different properties of this like the size the pivot position lets us change like where it goes based on your mouse cursor the plane lock and you can change the material of course and you can go ahead and change what material each one of these is with material servers so you can see in material service we can go ahead and choose one of our material variants that we already made for cracked lava so we can scroll down to crack lava and okay wait wait we need we need a material variant for collect cracked lava so you let's let's make a replacement one so I'm going to add a part and we can go ahead and go to the material generator and let's make make something new to replace cracked lava because there's not many times when you need cracked lava so let's see what do we make let's add a nice Rocky texture and we'll see what this makes oh that's actually pretty fire all right I like that kind of it's a little bit weird though let's just run with this one and let's go ahead and let the base material be cracked lava make the pattern to organic oh yeah that's better save and apply that and boom now we have that material variant in here which you can go ahead and go back to material servers change cracklava's default variant to big rock material and we got ourselves that now it's red how do we fix that well you can go to terrain go to material colors and change that back to Gray and there we go so we're good now now let's go back to the tools I went on tangent there but we're gonna go ahead and subtract this so we can choose the subtract tool size that up and we can go ahead and start subtracting some of our terrain I'll just you know make sure we have plane lock on and just delete that so next up grow tools so you'll see we have this messy look here actually we're gonna fix it so I'm gonna change the base size to bigger and we're just going to scale all this terrain up we're gonna make some hills heels are nice make some nice area in here now let's make some really big hills and on the sides of these big Hills is where we're going to use our material that we made because on the sides of Hills we start getting this brown material and it doesn't look that good in my opinion so we can fix that now I'm going to go ahead and paint so the paint tool is very useful you can click the paint tool size that down then we'll go ahead and grab the cracked lava and ooh yeah I'm liking that a lot although I want this texture to be bigger so I'm going to turn off by the way I'm going to turn off plane lock because paint tool is horrible with playing plane look but I'm going to go back to our material service I'm going to click on our big rock material and I'm going to change the studs per tile to be a lot bigger and try out regular is regular look better I'm not really sure oh we can't type in a number for this 100 that looks weird this is an interesting texture to work with but I think we're just gonna run with it we can paint some more on here I'm going to change it to mud on here paint some mud you know mix it up mix it up choose some leafy grass now leafy grass solves this issue see this it's all poking through a little easy fix for leafy grass size That Base size up and it'll help fix that and then we can add like some pavement or something pretty cool stuff this is all great but what about scripting I know that a lot of you guys might want to be able to script on Roblox and maybe you don't even want to be a builder well it's good that you went ahead and learned this so congratulate yourself for that you did a great job today learning this if you followed along I do have a special thing for you this is called the scripting Secrets course and it's a full course for scripting and it includes everything that every other course does not include there's no better place to learn scripting on the entire internet it has everything from the basics of Lua down to the advanced game mechanics and also exactly how to make your game of success I've worked with the Roblox coach to bring you this new course I'm going to link that below for you but you can go ahead and click the video on screen to watch the beginner guide Roblox scripting it's going to get you started very good great place to start but I do recommend clicking the link in the description for the scripting Secrets course for the best possible place to learn thank you you for watching see you at the scripting guide and make sure to subscribe and have notifications on so you don't miss a new video",
      "duration": 2372,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "P2ECl-mLmvY",
      "title": "The EASIEST Beginner Guide to Scripting (Roblox)",
      "transcript": "so you're opening up studio with a great game idea ready to make it quickly and hit the front page just to start building a map and realize you really don't know anything about how to get the game to actually work then maybe you searched up how to script on roblox tree now vacuum tree is you were extremely confused by all the bubbly jumbly mumbly jargon in all the videos and just ended up spamming your keyboard on your script before picking up a hammer smashing your computer and kicking your monitor in and slowly throwing your computer out a window and driving your car it's safe to say that might have been the last day for some of our computers but don't worry about it because i am here to help because i was in that tragic situation just a year ago but i managed to learn scripting eventually after starting as a builder and having barely any idea what i was doing just like you this guide is going to explain you how i learned a script in the simplest way possible and i can guarantee you'll be able to script by the end of this video you're going to need to open up roblox studio of course and we're going to make a base plate just a normal base plate and we're actually not going to make a script first we're actually going to build something for well we're just going to place one part down but it kind of counts so i'm just gonna delete the spawn location there let's close that tool box we aren't gonna be needing that for now so just click the part button up here and we're gonna scale this part up just a little bit and i'm gonna color it here so it's just a pink part and we're gonna name this part pink bark with a capital p on both of those word now so make sure to pause and bounce around this video by the way parts that you might have forgotten when you need them this is going to have a ton of chapters so you can bounce around the timeline it'll all be cut up to all the different definitions and everything so it's really helpful and useful for you now we're going to right click this part click insert object and we're going to add a script into this which is at the very top usually or you can just type in script you don't see it there now we're going to open up the script and now we're just going to delete everything that's here and we're going to type in local part equals script dot parent now the first thing we're looking at is variables and what we have just written out is a variable a variable just stores a value so the variable kink part stores the value script apparent which is well the parent is just whatever the script is inside of so that would be the pink part so that's what this variable equals this variable equals pink part by the way make sure that you write this exactly as i did a lot of things in scripting are very case sensitive so it's very important that you write this in how i wrote it with the uh uppercase and lowercase it all makes sense eventually but a value in a variable could be anything it could be an instance which is just a object in roblox studio like a part or gui you could also make it a line of text which is called a string in scripting or you could even make this equal to a number so now let's make a new part but wait do not close this script we're gonna make this part using scripting so what we've done is we've already made a part normally and we defined it through our script with a variable but now we want to create a part with our script so what we're going to write is local part equals instant. new which makes a new instance and then we're gonna type parentheses and we're gonna type in a quotation mark and then we're gonna start typing part and click enter now i'm gonna use my arrow key go out of that click enter all right remember case sensitive now this variable is telling the script to make a new part and we can basically make any kind of object in roblox studio with this too but this part doesn't know where to go right now aka what object it's going to be parented to and again the parent is just whatever it's inside of so right now we're going gonna parent this object this part to a different object in studio now right now the parent of the part is nothing and in scripting we write nothing as nil so part dot parent equals nil that's already what it's at so if we change it from nil or nothing to let's say game which is just the whole game that we're editing dot workspace so everything inside of the explorer here is in the game and inside the game is workspace at the very top which is where we see all our hearts so this part is going to go in a workspace and it's going to be visible in the game when we run the game it's not going to be visible until we start playing the game parent is actually just a property of an object in studio and a property is just one of these details on a different object in studio so it's like color shadow cast shadow color material material variant reflectance transparent these are all properties of a part so what we're going to do is we're going to change another property of this part so we're going to make a new line just by going to the end of this and clicking enter a few times and we're just going to write part dot transparency equals 0.5 remember to use that auto fill you can start typing something and just click enter and right like that it will build the rest of it in it's really useful make scripting a lot easier now let's go to the top of roblox studio and click the play button and let's test it out and there we go so we had a new part fall right here um this is a 0.5 transparency part and yeah it's a pretty cool example of how you can use scripting to make a part in studio all right so now we're going to stop the game we're going to go back congratulation on your first script now you can feel free to pause the video and mess around with any other properties you want with your script but right now we are going to be moving on to looking at boolean and booleans are basically any checkbox in studio is actually a boolean so as we can see here cache shadow which chooses whether or not this part has a shadow on it as you can see when we turn this off and on switches whether or not this has a shadow now actually what this means is hash shadow equals true so when it's checked cast shadow is true if cast shadow is unchecked i mean cast shadow is false that's just how we write it in the script so cast shadow true cast shadow falls so if we go ahead and make a new line and write heart dot cast shadow equals false then this part will not have a shadow if we change this to true it's going to have a shadow so we'll leave that at false and we can mess around with a few other properties so part dot anchor equals true if we do that then it means that this part is just it's not going to move or anything we're going to be able to push it around with our character probably already know what anchored means it's going to be stuck now one other thing we can do in studio is we can make the script wait so we could actually go up in the script a little bit and we can make the script wait to make an anchor so if we type in weight and then we type in a number and by the way numbers in studio do not have quotation marks but strings do strings are the lines of text numbers do not have quotation marks so just remember that whenever writing a number down you do not put quotation marks now this is going to wait five seconds before it makes the part anchor so all the other code before it is gonna run and then it's gonna start waiting for five seconds and it's gonna anchor the part now this is a little bit more advanced but to make this a little bit better for your performance on your game there's actually a new feature in studio that's called task. wait and you'll usually want to use task. wait if you aren't doing something that needs to be very exact weight makes it exact and it forces the game to wait that long but task. weight basically will let the game work at its own pace it just might be like 0.001 seconds off i usually tend to do test out weight when i can because it's just a little bit faster alright so now most tutorials would have actually shown you this first but let's take a little bit more of a look at strings so something that you can do with strings is print a line of words in the output which is a window that spits out warnings errors and prints from your scripts and roblox studio itself so if we go ahead and type in print and then we add parentheses and then we can type in a quotation mark and this is going to make a string for us so we can go ahead and write hi and then when we run the game by going to test and click on this drop down on play and go to run now in the output of studio after five seconds the weight in our script it's gonna say hi down here now that's pretty cool and we can also print numbers so we go ahead and print five the same thing will happen this will work just fine and by the way you can put numbers in strings so if we said high five this is still going to work when you're writing a number by itself you don't put quotation now this is mostly useful for when you're trying to debug your code and you want to mark where certain things happen so like after the part is anchored we could put a print and we can say part anchored now every time that happens we'll know the part was anchored and if we do not see this in there we'll know that for some reason maybe there is an error in our code the part did not get anchored and that's what you're going to be using print for most of the time now in scripts we can also do math and we can print numbers and strings in the output and we can also print math in the output so we can actually print three plus three let's see what happens when we press run on so after five seconds again after our weight is over that's going to do this see it prints out six three plus three equals six so it's going to print that out now make sure you do not put quotations around this just like i said because we are writing a normal number here and this is not a string and it's really important that you don't do that when you're doing math we can do a lot of other things uh we can also do multiplication and to do that we can just do a asterisk or a star little star it should be on the 8 on your keyboard you just hold shift and press eight and you'll get that star and if you do three times three well it's gonna print out nine and we can do this with the division as well so if we change the star to a slash it'll divide three by three and we'll get one and there's a lot of other cool things that you can do in math in roblox studio but we're gonna get back to this later because now it is time to move up to the next level this is where things start to get intense well not really just focus and follow along this is where you're gonna be able to start making things really work in your game and it's going to be incredible so make sure you do not click off if you want to become a scripter i see that mouse of yours inching closer and closer to the youtube homepage don't do it don't give up on your dream being able to script your own game because this is well worth it and it could end up being a real money maker for you later now we're on to function functions are exactly what they're called so i'm going to go ahead and just click control a and delete everything so we can start with a fresh slate basically functions are just a piece of code that performs a function now and this is just an action in your code and it's when you call upon it so basically we don't want to be sitting there just typing the same code over and over and over and over and over again so that's where functions come in and they have a few other cool things you can use them for too functions can be called upon with just a single word and it will run your entire function your entire chunk of code that's in that function without having to rewrite it or anything all you need to do is call the function by writing its name and parentheses after it but there's also another neat feature let's say you put something into a function well you can actually put a value into a function and it can spit something back so you can have a function that adds two to whatever the first parameter or input in the function is and it will go ahead and print that so it'll add two to whatever you put into it and it'll print it a parameter is basically just a variable when you're using it in your function and trust me this is going to be a lot more useful later and it's also going to make a lot more sense when we actually write this out so don't worry we're going to make a function right now so let's go ahead and write function add 10 x so x is going to be our first parameter so that's what you're going to do when you call the function you're going to input x which will be whatever number that you want to add 10 to we're going to go ahead and add parentheses to that and type x again and we're going to click enter and we're going to write local y equals x plus 10. so what this does is this makes a variable y which equals our input x plus 10. that's what it's doing so it's making a variable y and it just adds 10 to that and that's what y equals y is just x plus 10. now what we're going to do is we're going to print y so this is going to print x plus 10. so if x equals 2 and we add 10 to it that's going to be 12. so what y is going to be is 12 and it's going to go ahead and print that and then what we're going to do is we're going to return y and what this will do is it's going to basically wherever we call the function we're going to be able to use y later in the script also what i did right here is i wrote a comment you just put two dashes and you can write whatever you want and the script is going to ignore this you can write notes and it's pretty good practice to just write these wherever you can so you remember what things do in your script and also it helps if someone else is going to be looking at your script later down the line so functions are one of the most powerful things in scripting and one of the most important pieces of functions is called scope and you might have noticed so far that i write local before basically all variables well you can also write local before functions and if you don't write local that means it's naturally a global function so a global function can be used throughout the whole script no matter where it's written a local function can only be used after it's been written or if it's ins if it's inside of a function you can only use it inside that function so we can only use y here inside this function unless we return it and also if we write a local function at the end of the script for example we can't use it anywhere at all same for functions if you wrote a local function at the end of a script you could not use that function anywhere unless you change it to a global function so this is going to be a lot easier to understand after we practice a little bit more so if we want to go ahead and use this function that we've written here we can actually type in add 10 and we can type in right here in our x value so let's write 2 so what it's going to do is it's going to print 10 plus 2 which is 12 and it's going to return that for us so we can actually write local number equals add 10 to and what this is going to do since we returned y this is going to equal y this variable will equal 12 and we can go ahead and use that throughout the rest of our script which is why this is so useful especially when you get into the more advanced sides of scripting so hopefully you understand functions but if you don't don't worry we're going to get a lot more practice in after this this is just a brief explanation and again feel free to rewind re-watch any parts of this video that you need and remember do not give up you are well on your way to becoming a grit scripter and don't worry if you don't understand everything yet this video will clear up all your questions by the end so next thing we're going to do is we're going to look at if statement if statements basically check if something is true and if it is it does it so okay so we need a variable for this part so local part equals script dot parent which is our pink part so local part equals script. parent and what we're gonna do is we're gonna do if part dot anchored equals equals equals equals basically just means that it's checking if something is true you need to do that whenever you're checking if something is true if part. anchored equals equals true then part. color equals color three dot from rgb 255 zero zero so what this is gonna do this is just uh color three is just a three number value that that makes a color and if it's from rgb it's gonna be making it in red green and blue and the highest number being 255 lowest being zero so if we write 255 on the red it's going to be a fully red color if we were to add a hundred of this it'll make it a little bit pink since we're adding a lot of blue if we added a lot more like 220 it'll make it more purple since red and blue usually makes purple all right so what this is doing is it's checking if the part is anchored and if it is it's changing the color of the part to red now we can also add to this and we can make it check for something else so if this is not true it's just going to skip the changing of the color of the part altogether but we can make this move on and say else so if that isn't true it's going to move on and it's going to say print heart is on anchor so it's going to print that the part is unanchored so if it's anchored it's going to make the part red otherwise it's going to print part is on anchor and honestly this is one of the most useful things i use all the time in scripting because there's a lot of times we need to check things are true check if things aren't true check if things exist at all in your game and we don't have to just check if something is true we can actually check if part dot color if part. brickcolor equals brickcolor. new and then oh yeah we got to do the double equal signs i'm forgetting too it's easy to forget if part. brickcolor equals medium stone gray then we can print this is a gray part and this is going to write in the output that this is a gray part as you can see this doesn't even have to be a whether or not this is true because obviously we can't have it if heart. brick color equals equals true but if the parked up brick color equals brickcolor. new medium stone gray then it's going to print that this is a gray part and otherwise it's just going to skip over that code just like all if statements now there's also elsif statement so what we've looked at so far is if statements with check if something's true and if it is it does it we looked at else statement which it's just moves on so basically if that isn't true it'll move on it'll do whatever else is in the script but what else if does it's like else but then you're also checking for something else so if part dot anchored equals equals false then it's going to print part is unanchored so this already it does the same thing but it's checking for something specific so if we did this on something a little bit better of an example is doing it on the brick color so else if part dot brick color equals equals brick color dot new re really red it's going to check if this is medium stone gray and if it's not it's also going to go and check if the parts color is really red and it's going to print in the output this is a really red part so as you can see this can be very useful so if part. brickcolor equals equals recolor. new medium sewn gray then it'll print this is a gray part otherwise it's going to check if this is a really red part and if it is it's going to print this is a really red part otherwise it's going to skip both of these things all together and that is why else if statements else statements and if statements are all just as useful there's just different scenarios when you're going to need to use them when you need specific things done in your script so now we are just going to completely ditch this script for now i'm going to close it out and i don't want the script doing anything for now i don't want to delete it though so right right now i'm just going to actually uh right click rename this script to not not using this lol and i'm just going to click disable in property so the script is not going to do anything and we're going to make a new script by right clicking this part clicking insert object and clicking script and it's going to go ahead and make a new script so let's clear out the script by clicking control a and just clicking backspace and we're going to write if script dot parent dot name equals equals taco then print taco elsif script dot parent dot name equals equals hamburger then we're gonna print hamburger so what this is gonna do is this is another if and else if statement and this is going to check if the parts name is taco and if so it is going to print taco if it is not taco it is then going to check if this is a part named hamburger otherwise if it is not named hamburger it's going to do nothing if it is it's going to print hamburger else will always do something if the first if statement is not true else is always going to do something so if we do else it's going to print hamburger no matter what no matter what the name of the part is if it isn't taco it's always going to print hammer but if we add on that elsif it's going to be checking for something specific and it's going to print hamburger only if the parts name is hamburger so hopefully that clears up the difference between else and elsif i know it's kind of hard to get at first but it's very important that you know the difference because you're going to be using both of these a lot in script all right we're done with that enough with the else and elsif so next are events and events are really cool events are really interesting because we can finally start to check and like listen for when things are happening in our game and we get to have script that run when something happens in your game so let's say a player touches a part we can have an event of when a player touches a part we can run a chunk of code when that part is touched so what we're gonna do is we're gonna go ahead and make a new new part we're going to make a kill brick over here so i'm going to go ahead and add a part anchor that thing scale it and let's i'm going to make this you know a nice little red and we're going to add a neon to that nice little kilbray cool looking i want to turn off cast shadow on that too just for the heck of it and i'm going to click the plus on the part and i'm just going to add a script into this by clicking on it and i'm going to clear the script out by clicking ctrl a clicking backspace as usual and i'm also going to name this script i want to name this kill part script so first we're going to define our variables and we're going to write localkillbrick equals script. parent so what we're going to do is we're going to add an event that basically it's gonna check when some other part touches this part and then we're gonna check if that part is inside of a player's character we're basically gonna check and listen for when a player touches this part and then we're gonna go ahead and kill that player's character so we're gonna go ahead and do that so we're gonna listen for the touch event and we are going to make a function that passes on the touch part which is the part that touched the part and we're going to write that as a parameter the touch part parameter is going to pass on to the function and it's going to tell our script the exact part that touches so we're going to go ahead and make this function so kill brick dot touch which is the touched event and we're going to write a colon connect click enter and we're going to type in function and then add parentheses touch part and going to go to the end of this we're going to go to the right in between these two parentheses and we're just going to click enter there i'm going to click enter three times just so i have some space and so what this is going to do is as i said it's going to listen for the touch event pass on the touch part parameter to this function so we know what part touched this part and it's gonna tell our script the exact part that touched it and now we're gonna do the killing of the humanoid so we're gonna do local humanoid equals hutch part dot parent so whatever the touch part is inside of and we're going to do colon find first child and find for style is a built-in function in roblox studio which we can run on any object inside of the game and it will basically just loop through and check each child of an object in studio and it will check whether or not an object with a specific name is inside of that part so it's going to find a child with a specific name so we're going to find the child called humanoid and a humanoid is what controls all the aspects of a character like its health how high it can jump how fast it can walk everything like that and what it's gonna do is it's gonna see if we have a humanoid and if it does it is going to say okay here's the humanoid and this variable is going to equal humanoid if there is not a humanoid this is going to equal nil so what we're going to do now is we're going to check if there's a humanoid so we don't get an error if we don't check if there's a humanoid and there doesn't end up being a humanoid for whatever reason like if let's say a part that wasn't a character touch this part that part isn't gonna have a humanoid if it touches it it's gonna error out if we don't have this if so that's why we're doing fine first child it checks if there's a humanoid and now we're gonna do an if if humanoid it's all it is if there's a humanoid and basically by the way nil and false are the same thing writing nil if nil that's just like writing false so it falls basically so if this is nil it is going to not run this code but if there is a humanoid it's going to run it so hope that makes sense so if humanoid then humanoid. health equals zero and that's it so we're going to go ahead and play the game and let's hope this works so i'm going to go back to my baseplate click i have play here pinned up here um and we click play here so i play right on it and when i touch this part it is going to kill my character there we go so we have a perfect aubie kill brick all made for our game here that we're making and by the way by the end of this video you're gonna know how to make an obby did i mention that we're gonna be making a hobby yup you're gonna be making a game in this first video you're gonna be scripting your first game it's amazing i don't want to get too cocky but i'm gonna say this might be one of the best scripting videos out there because i'm gonna condense all the information into one video and hopefully you will be a scripting pro by the end of this video that is my goal so that was pretty easy right now a lot of things in studio built-in event so i'm gonna open my script back up and these built-in events we can actually see them with the object browser in a nice list so if we go to view object browser this will open up a new window and we can flip around these and this will basically show all the objects in roblox studio and everything that exists so if we choose if we can find part in here now i wish there was a search on this that's the only thing there's part okay if we find part in here we can actually see so in here the lightning bolts are the all the events on the part so we can listen for all of these events not just touch we can listen for touch ended so when something stops touching it or when the part is getting destroyed when a child's added when a property is changed there's all kinds of events on different objects in studio and every object in studio has tons of different events that are unique to it so there's a lot of cool things we can do with events and it doesn't just have to be touched we could listen to any event we want so we could say touch ended and when something stops touching it's gonna check if that part has a humanoid and it's gonna kill it too now i'm not sure if this always works i don't think this is that reliable but again there are there are ways that you can do that that's just an example there are a lot of events and we can we can use these for a lot of things by the way quick reminder you are doing great you are getting really close to becoming a full-on scripter and you got to keep going do not give up so we're getting on to the next detail which is random numbers random numbers i mean they're self-explanatory but they're really useful for a lot of things and especially for waiting a random amount of time so for example if we want to wait a certain amount of time after the player touches this part to kill them we can do of course task dot wait just so we have that good performance benefit of using task. weight versus weight and then we can just do math dot random and then add parentheses then what you do is you write the minimum number here so let's do task. weightmath. random one second and then comma 10 seconds so what this will do is it'll pick a random number between 1 and 10 seconds all right so after this i want to take a look at loops loops basically just let you repeat things forever or for a certain amount of time or until something is true there's a lot of ways that you can write loops so one way is a for loop so for let's go ahead and make a new script i'm going to make a new part anchor that and then i'm going to hit the plus add a new script so the for loop as i said so the for loop is it will loop through a number or a table so it will count up from one to that number if we do four number equals ten so it's going to count up to ten repeat basically i'll just repeat this ten times for number equals ten comma one do for number equals ten comma one comma one do script dot parent dot size dot x equals script dot parent dot size dot x plus one so what this is gonna do is it's gonna add one stud to the x size on the part ten times and i'm just gonna add a short weight between that so weight zero point uh let's do weight zero point five oh test. wait don't forget that and we can go ahead and test this out oh actually you have to do number equals 1 comma 10. i was wrong um it's the other way around and we don't need that third one but if we go ahead and test this it should work now oh another mistake i keep making mistakes i know the problem script. parent. size we need to make this a vector3 so vector3 as i said earlier a vector3 is just a three number value used to show usually positions with parts or sizes vector3 dot new and then just add parentheses around that and then the first values x then we're just going to do y uh we'll just copy this script. parent. size. x and change that to y same thing except we're putting z on the last one and now it should work finally worked out all the bugs and as we can see it's working now it looks like uh i made my weight a little bit too short but as you can see it added a lot of studs to each side and it definitely grew by ten studs so that's how four loops work in the most basic way with numbers for loops can also loop through a table and um so for example we can do four game get service players get players for i comma v in pairs so what this will do if we write this for i comma v in pairs parentheses game get service players get players what it will do is it will get the players from the player's service on roblox and it will loop through each player and we can do whatever we want to this so what v does is it will that will equal the current player that we're on and i is the table the table is just the list of all the players we've gotten from the player's service so if we say vita character destroy now this probably isn't going to work since we do have to wait for the uh for the character so if we do v wait for child character or if we do v dot character added v character added connect function so what this will do is it'll destroy the character every time it spawns now obviously we don't want this but as you can see this can be very useful to be able to loop through a list of things especially players like when you're making a mini game system you might need this or a lobby system it comes in handy a lot so we definitely recommend practicing this so that you can use it when you need it because trust me this is definitely something i use constantly i make hundreds of these every time i every time i script it seems like so you're definitely going to want to know these now next we have well loops and with well loops we can just do well something is true do something so we could say well script dot parent dot anchor equals equals true do as long as this part is anchored it uh it'll repeat this and it'll stop when the part is unanchored now a lot of people will just use well loops for uh looping forever so well true do so basically this will just make it repeat forever because true is well it's always going to be true and it's checking if whatever this is is true it's a little bit hard to explain but basically it just means it's checking if true is true and yeah true is true it's always going to be looping so you can have this loop forever now whenever you do one of these i do recommend always having a weight of at least uh nothing so if you do that it'll do the shortest possible amount of time that it can wait and you need this otherwise roblox studio can crash so or your roblox game might crash too if you have a loop and you want to keep these down and you definitely want to be careful with these because they can cause a lot of lag especially if you don't have that weight in there if we ever want a well true do loop to stop we can actually add break and what break will do is it'll just stop it and it'll continue on with all the code in front of it now we probably do want to practice this um welter do loop if you don't want to practice this uh you can always skip ahead to the next chapter on the video timeline but this will be really quick so we're just gonna make hearts rain out of the sky so local part equals instance dot new parentheses part part dot parent equals game dot workspace local random x equals math dot random negative 200 comma 200 and then local random z equals math dot random negative 200 200 and then we'll do throw all those positions together into part dot position equals vector three dot new random x comma let's say 50 studs in the sky and random z pass dot wait dude let's just do the shortest one let's see how laggy this is gonna be like a lag test on my computer here um let's go ahead and play this and as we can see parts are raining out of the sky so that was a mission successful and that is one cool example of how you can make welter do loops and use them effectively in your game um yeah now i promise we are almost done with the math almost but i need to give you guys an example for how to use a break so we probably want this to stop running parts at some point otherwise our computer is going to absolutely crash um well first we probably want to add debris basically what this does it'll automatically make the part delete itself after a certain amount of time so let's look at debris service up here so debris is a service local debris equals game get service debris and what we'll do is we'll get debris and then add item part lifetime so what this is is we'll just make this last um let's say 20 seconds for each part and now what we want to do is we want to make this break if there's 400 total parts in workspace so so what we want to do is we can actually just add a part count we want to do that outside the loop local part count equals zero and then we'll do part count equals part count plus one and if part count is greater than or equal to 400 then break we probably want to put this at the top here all right so next are tables which you might have seen that you've probably seen these before visually or in a school document but these actually can be made in scripting too but they're quite a bit different but it's actually pretty similar to a table on a document if you want to look at it that way you'll see it has rows and columns and this is very similar to how tables work on roblox scripting we use them to store large amounts of data and then loop through them very quickly with for loops which i just showed you and they're extremely useful they come in pairs so if we look at a visual table we can see that there's a row and then we could have a number right next to it and there could be a value in the next column over this is called a key value pair a key being the row number or the row name and the value is just whatever piece of data that could be a string a number a picture whatever whatever piece of data is associated with the key also the key doesn't have to be a number neither does the value as i said so let's go ahead and delete this you don't have to you can just make a new script but i'm going to delete mine and let's make a new table with a variable so local we'll make a fruit table so local fruit equals and then what we do is we hold shift and then right above the normal brackets like these right above that if we hold shift we'll get these this gives you a table bracket so just go ahead and click enter a couple times okay so the first uh key will be bananas equals one and then you add a comma or you can do a semicolon after that so what we've written here is that there are there's one banana so if we go ahead and reference this table later we see oh hey table how many bananas are there it's gonna save one it's gonna return one so next we'll do apples equals five oranges equals two and that's it so the keys in this table are the names of the fruit and it equals that number of fruit there are so there's one banana five apples two oranges and to access one of the values in the table we just write fruit at these kinds of brackets and then we can write whatever name whatever name of fruit we want which would be our key bananas equals fruit bananas and then we add we can add five to that so what this does oh we do need to add quotations around this i almost forgot because it is searching the table for that so this is just like find first child which loops through a parts children but this rather than looping through a part it can loop through a data set like a table this is really just dipping our toes in tables and there's a lot more we can do we can loop through a table with an in pairs loop and check for a certain value like i showed earlier and find first child is a built-in function a roblox studio that actually loops through every child or part inside of another part and it searches for one with the same name that you input into it everything in studio is made up of tables literally everything like the children of every part which are just the items inside a part even the properties of parts are pretty much in tables this is why tables are extremely important in scripting on roblox or not so with that in mind we can actually look through the children of a part with the get children function which returns all the children of the part in a table for us so let's first find some stuff we want to remove let's first add some stuff that we can remove so let's add a bunch of particles to this uh part here let's pour a part we're going to add a particle emitter i'm just gonna duplic duplicate that a million times and i'm gonna go ahead and delete everything we did here and let's do a four iv in pairs loop looping through all the children of this part and we're gonna see we're gonna check if each object is a particle and if it is we're going to destroy it it's going to be gone so for i comma v in pairs script dot parent get children do if v is a particle emitter then v destroy the reason why we want to check if it's a particle emitter with is a is because we don't want to accidentally delete the script that would screw some stuff up so we want to make sure that we're checking if each thing is a particle emitter if you want to check if something is apart for example which you're going to need you can actually just check if it is a base part and that will check if it is a part of any kind it could be a mesh part wedge doesn't matter it could be a normal part it will make sure that it is a part of some sort and it helps because you don't have to check for each kind of part you just check for base part just need to throw that in so i'm going to leave it as particle emitter and let's go ahead and play oh that's a lot of particles we definitely need to get rid of those so if we play the game and if they're all gone we'll know it works and as we can see it's perfect no more particles it worked perfectly so this is definitely one of the things i'm used the most in scripting constantly i can't emphasize enough this is one of the most important things you're going to want to practice this a lot you're almost there you are almost a scripter do not quit now if you click up the video you're probably going to forget everything really really quickly so we got to practice right now let's practice by making a quick obby so an ob is a good practice because we can just make a bunch of obstacles do whatever we want with that and we already made the billbricks so why not use that as our first obstacle so we have this component so i'm going to go ahead and start building an obby so we can just add this in there scale it up um and let's anchor this make it a little bit darker and let's raise this up and uh i'm gonna turn on my increment to one stud and then i'm just gonna duplicate it a couple times and there we go so i want to go ahead and make sure we're organized by oh this is way uneven there we go so let's go ahead and make sure this is organized by adding a folder in the workspace and i'm going to rename this to kill part and just drag them all in there and there we go so oh this isn't the kill part put that back in the workspace so now we do have a problem we have all these kill part scripts inside of each one of these parts this is a kind of redundant so what we're going to do is let's delete all of these by selecting them all clicking select ultron and then just hitting backspace and deleting them all except for one and i'm going to move this into server script service and in this i'm just going to change a couple things so let's change kill brick to kill bricks folder let's change the variable to reference the folder so what i'm getting at here is that we're going to use a for loop to loop through each part and make it so whenever that part is touched it will kill the character so game. workspace. killpark and then we're gonna do our for loop so for underscore comma v in pairs kill bricks folder get children and then arrow key out of that do and then let's just uh select all this hit control x and paste that in there and let's just change v we can just change v to kill bricks underscore will just mean that it isn't counting like how how many kill bricks we've already looped through it just won't save that table it it's just a little bit better on performance to do that if you don't need that number like sometimes you might want to check which kill brick you're on for example and if it's on the fifth kill brick maybe you want it to stop or something well we don't need that right now so that's why i did that better for performance so we changed v to kill brick and v v is just the item we're on currently in the table so right now it'll be the current kill brick and replacing that in this script should work perfectly and we should delete our little practice weight there if we have that still and there we go so now our kill parts will work and now maybe we should make some checkpoints so let's go ahead and make a new checkpoints folder and rename that to checkpoints and let's go ahead and add a part oh yeah before we do anything else let's make sure they're all anchored and i'm going to go ahead and scale this down as you guys can see i'm probably not the best at building hobbies but there we go um let's honestly make this neon and then i'm going to make this like white yeah there we go i don't want too much glow on it so i think smokey grey looks like a great color and next we'll start scripting this so uh let's add a new script into server script service and let's rename it to checkpoint script checkpoints script and we're gonna do the same thing as we did before so local check checkpoints folder equals game. workspace. checkpoint and for underscore comma v in pairs checkpoints folder get children do if v is a base part well it checks if it's a part of any kind then v dot touch connect function and now we need this to do something so let's define that player real quick so we're gonna do connect function part okay we'll do part and then if part dot aaron here let's go ahead and add the player servers because we do need to check if this is a player so local players equals game get service players and we'll do it if players get player from character part dot parent so i'll check if the model that the part is in is a player oh actually i keep changing things but we're gonna cut this select it hit control x and let's do local player equals just a little bit better so we don't have to do it again so if player then what we're going to do is we're going to add a stage to that player and we're going to check if they haven't already touched that checkpoint or we're going to set it to that number of checkpoint so what we want to do is drag our checkpoint in here and we're going to rename this to one so we'll just have the checkpoint number be uh the name of the part now we do need to set up a leaderboard real quick so this will be really easy so we're gonna do is we're gonna make a leader stats it's gonna save what stage they're on while they're in game it'll reset when they leave but this will make it so that when you join the game it's going to make you a stage number so local leader stats oh wait no gate players dot player so players dot player added connect function player local leader stats equals instance dot new folder uh leader stats dot parent equals player local stage equals instance dot new int value so let's make a new integer value which is just a number no decimal and it will save what stage it's on and we're going to put that in leader stats so it'll show on the leaderboard as a stage and then the number so stage dot parent equals leader stats and that's all that's needed so if player if player and let's make a variable for their stage so local stage value equals player. leaderstash. stage if player and stage value is less than two number so two number will make this to a number v dot name so that'll check so the the name of the checkpoint and that'll get the number the name of the checkpoint will turn into a number and it will check if the player is not on a stage that is greater than that so we don't want them going back stages that's basically all this does and it'll set the stage value oh yeah we do need to do stage value dot value because stage value is a object it's the uh in value we have to do the dot value because it's a property so stage value dot value equals v name okay that was a lot if you did not catch it feel free to rewind and feel free to copy down pause and copy down what i have um if you missed it this should set up our checkpoint in our game so if we go ahead and play right here oh we didn't name the folders here we have a little problem we did not name the folders leaderstats. name equals leader stats and stage dot name equals stage there we go another error i didn't capitalize that oops this is the hardest part about scripting most annoying part there's a lot of bug fixing and little annoying things like that like one one capitalization can screw up your whole script it gets annoying but there we go finally it works so we touch this and now we have we're at stage one we die when we touch a kill brick and that is good we do want to make sure that we move the character to the checkpoint when they respawn so if we do player. character added connect function character or just you char local checkpoint equals checkpoints folder find first child do stage. value so if it finds the stage value in the checkmates folder it's basically checking if their current stage even exists then we're going to do player dot primary part and what this does is it'll get the human android right the humanoid root part stumbling over my words humanoid root parts or the torso if using r6 and it will move to where we want it so player player. primarypart. c frame equals so c frame is just the way we do positions and rotations all in one nice value in roblox studio it's kind of weird and complex i mean i don't even completely understand it's a very complex subject um c frame but with the c frame we're just going to go ahead and write c frame dot new check point dot c frame dot rotation equals dot c frame dot okay okay check point dot primary part dot c frame dot position dot y plus five so we're adding five studs so they spawn above it i'm making this way too complicated aren't i checkpoints dots okay let's hope this works a few moments later and of course it didn't work oh okay part. c frame no that needs to be player. character dot c frame i screwed a lot of things up here i'll be honest with you guys i don't know how how to make this respawn right but i think you guys get the point of the obby i don't like making hobbies when in doubt go to the dev hub on roadblocks it's a great time for me to do it but you can go to the dev hub so you search for roblox dev hub developer. roblox. com when you go to this you can find info on everything and when you can you want to go from here or sometimes when you google a question uh you can find a question answered on dev forum or scripting helpers but usually you're going to end up back here so you want to try and read this when you can learn some stuff about scripting and if you want more advice on how to get commissions on roblox and how you can earn tons of robux from scripting or whatever you'd like to do make sure to check out the video on screen do you guys there",
      "duration": 2918,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "OAW81QZpvRY",
      "title": "FULL Guide to Blenderâ€¦ For COMPLETE Noobs!",
      "transcript": "welcome to the only beginner guide you're gonna need for blender this is the second video in my series of how to use blender the first one just shows you how to download it if you don't know how to do that uh there will be a card in the top right hand corner you can go ahead and watch that video and then come back to this and we will be getting started right now on the basics of blender so go ahead and just click anywhere so that menu closes out we don't need it right now let's get started so first we're going to look at navigation of blender so blender might look a little bit overwhelming when you first open it but do not worry because you don't really have to use most of these buttons all the time and it'll all make sense in a little bit so it all starts with the viewport here which lets us see all of the objects that are currently in our project and we can select any one of these by clicking on it and if you've used a game engine like roblox studio before you'll understand that this is very similar in to selecting objects in a game engine one there's a little different but if you've used a game engine before this will be very easy so to look around in blender we all we do is click the middle mouse button and drag it around and this will let us you know look around the viewport and look at our different objects if we hold shift and do the same exact thing middle mouse click and just move your mouse around now we can actually move side to side up and down all of that and this is how we get around in blender there's also a couple other ways to get around but this is the main one you're not really going to use the other ones unless you're doing renders which you can change uh you can like walk around your camera up here we can go to view and then go to navigation and choose walk navigation so we can actually use awsd but this you can't really stay in this mode so if you click it'll go back to the normal one but i wouldn't really recommend using that unless you're trying to render something all right next let's get into transforming objects so transforming objects in object mode which is what we're in right now object mode is where we see all our items here like our cube our light our camera blender has the basic options that you'll need for moving around on objects like move rotate duplicate and we can also change the visibility of objects by clicking h or clicking the eyeball right here we can click it and hide it or show it in the viewport and we also have rendering modes which i'll get into a little bit later so yeah so to move objects in blender we have we do have these options right here which they have like handles for movement which are very similar to game engines now i really wouldn't recommend using these because they're just not as quick as the keybinds most people when in blender they use the keybind g which is it stands for grab in blender we can do g and we can move it based on our camera if we press g and then click x y or z we can move it on an axis and as you'll notice the red line any red line generally means the x-axis if we click y that's usually the green line and that'll move it on the y-axis and then we have finally z you press z it'll move it on the z axis which usually is a blue line in blender so yeah if we click control z as in most programs we can undo stuff by the way now yeah moving is pretty easy pretty straightforward and if you guys want to move in like steps so you see this grid here on in blender you can actually click g you can hold control and you can actually move it in steps control see and then if we want to move it a lot slower and a lot more careful you can actually just hold shift and it'll move it a lot slower so you can do very precise movements of things and yeah so that's that and next is rotation rotation and blender just like the movement we have a gizmo we can use which is uh the rotate gizmo um this really i would as as with moving i would not recommend using this unless like you're doing something very specific where this is helpful but generally you want to use the keybind r for rotate and we can rotate it based on our camera's axis this is usually not that useful but if we want to rotate it in a little bit better way we can as usual use the keybinds x y and z to change the axis that we are rotating on and by the way if you want to cancel something you want to right click it and it will exit that movement operation so r and we can start moving it if we don't want to do anything right click if we want to confirm it you left click so if we click r z we can rotate it on the z axis we click r x we can rotate on the x axis and same for y if we click r y we can rotate it on the y-axis now if we want to delete an object we can just select it and click x and click delete and now movement in blender generally is based on these axises now each object can have its own rotation right so if we rotate this on the x-axis a little bit then click r and then y and rotate this on the y-axis now if we move this on the z-axis g and then z this is going to be moving on the the axis that blender has for it so if we want to move something locally on its own axis so right now it's going to move in its own direction if we do this if we click g and then zz it'll move in its own z axis its own z axis and if we want to just do this by default we can also i mean we could also do this on other things like x if we did that g x x we can uh move it on its own x-axis if we do the same thing for y of course g y y it'll move on its own y-axis you get the point but we can also do this normally we can we can leave it like that if we click comma and we go ahead and choose local it will always move on its local axis which is more helpful in edit mode which is what we're going to get into next which is where we actually get into modeling objects and actually editing them so i'm going to switch this back by clicking a comma and going back to global and i'm going to go ahead and undo all of this so we have a basic cube and i'm going to go ahead and box select and select these and click x and delete oh yeah i forgot there's one last thing we need to do shift a shift a that lets us add different meshes so we're going to go to mesh you can choose cylinder and in the bottom left here there's going to be a panel that lets you change the options on it so as you can see right now this is kind of hidden so if we want to go ahead and see through this cube we can click shift z and we'll be able to see through it uh there's also other modes so if we go up here to the top right we can actually change the rendering mode and this is um x-ray mode so we can actually see through it without it having that wireframe look that's a lot of information all at once but basically all we're doing is just changing the view so we can see through it and now we can edit the options on our cylinder which we just added in to our game so we can change the vertices and vertices are points in a blender in 3d space it is just a point in 3d space and each one of each mesh is made up of vertices so um the number of vertices that make up this top circle here can be changed so that it's more simple and it makes the whole cylinder more simple so we can just reduce the number of faces this has by using this so three vertices as you can see one two three if we increase this to 12 for example that is a much more low poly mesh and if we do this and we are making this for a game there are a lot of tricks we can do to actually hide that this is such a low quality i mean low poly mesh once we actually edit it and work on it a little so if you're working on a game engine you want to make things as low poly as possible in general you might want to be a little bit higher than 12 on in some cases so like 14 but yeah so i'm going to go ahead and delete that cylinder because we aren't going to be needing it but if you do shift a again we can actually add a lot of things like an ico sphere which lets us you know add one of these spheres which has a triangulated surface if we add the uv sphere it'll be a surface covered in square the actual like uh quad so yeah if we go ahead and x and delete this let's get into edit mode finally so if we go ahead oh yeah let's turn off x-ray and if we go ahead and click have we can enter edit mode and if we press that again it'll go right back out of edit mode so that we can view the mesh in object mode again so the difference between edit mode and object mode is the edit mode let's you edit the mesh it lets you edit an object and we can edit all its vertices we can move them around with g same keybinds we can rotate although you can't really rotate a vertice if we select multiple by box selecting and dragging we can click r z and we can rotate this and yeah so we right click we can reset it all the keybinds on the same but there are a couple there are a lot more that we need to look at um if we go ahead and click one two or three on our keyboard you'll see up here this will change so if we click one two three one two three this up here lets us change to selecting vertices edges and faces and one two three on our keyboard lets us select a specific one and we can choose to select faces vertices or edges and you can also you can use this menu up here by just clicking on it so if we choose face select by clicking three or clicking this button we can click on a face and we can move it with g we can do g z and we can move it up and then here's where another keybind comes in we can scale so we can click s to scale something and you can just move your mouse in and out and we can kind of scale it and change the size and you can also do that in object mode for an entire object if you want so if you click s you can scale it so yeah and if we move this down with g z and then we scale it oh yeah you can also scale you can scale on the x-axis y-axis and on the z-axis next is extrude so if we want to go ahead and extrude which basically just i'll show you what extrude does so if you click e on your keyboard you can extrude and that lets us create this extrusion so right now we got a little bit of a pillar going and if we click e again click and if we click s scale that if we click e and do that and we can select this bottom face click e and do that so yeah as you can see it's not too hard once you get into it and there's a lot of cool keybind if you uh go into two if you click two so we can go to edge select and if we hold alt and click on an edge we can actually select a line of edges which is a pretty cool feature and let's do that so let's do shift alt shift alt and click on that edge and then on the final one shift alt and click and yeah there we go so if you click control b this is where the next thing comes in control b is bevel and bevel will bevel the edges so ctrl b and we can move that as much as we want and we can bevel it as much as we want on the edges and yeah click to confirm right click to cancel as usual beveling is one of the most amazing features in blender really useful so yeah next is subdivide so you know each face in blender is generally cut up into different triangles squares but if we right click and click subdivide that'll cut it into the next divisible amount of faces so if we click one face it'll cut it up into four if we were to click more if we were to click four faces and subdivide them well now we'd have 16. it uh squares the amount of faces so next we can do loop cuts which lets us make a cut and it adds a bunch of edges so if we do control r on our keyboard ctrl r we can do a loop cut and this will let us cut anywhere on our mesh so we can click anywhere and we can loop cut it if you click s you can scale that click control r g z you know we can do that and yeah we got a little bit of like a pillar going or maybe a stand for like a ancient uh scroll or something so that's looking pretty cool if we go ahead and go back into edit mode i exited it click three on your keyboard to go back to face select and select this top face we can click i and that'll inset it now if we go too far this will start looking weird so don't go too far and make sure you have those edges on the end and we can inset this face and if we go ahead and click e stir that in we can actually extrude into it and that makes a little cutout here and yeah so as you can see there's a lot of really cool features in blender the next one that i want to look at is the knife tool so you can go to the knife tool by clicking k and you can click on any old edge and you can cut it off it's really useful when you're trying to adjust how a face is made up because you can end up with n-gons like this so uh an n-gon is any face that has more than four vertices so if we have five vertices um this has a lot more than four vertices so uh generally people like to do this and click enter to confirm it click k uh you know do that okay enter okay click click enter there we go now this is no longer an n gone and it's pretty well set up all right so now first i'm not really liking what uh this model here so let's go ahead and exit this click x and delete whatever our demonstration model is looking like for you let's go ahead and make something cool let's make a mug so click shift a let's add a cylinder let's set the vertices to something like 10 for what i'm about to demonstrate it's very important this is low and let's go ahead and go into edit mode by pressing tab and we'll click three on our keyboard and let's click on a face click e to extrude s to scale e to extrude less s to scale e to extrude s to scale so i'm going to move that up just a little bit and if we go to the top here let's click e to extrude s to scale e to extrude s to scale e to extrude s to sail and then let's move this down and then scale that a little bit up and then let's extrude this down and move that down a little bit and there we go and let's move that up actually a little bit g z and then let's click ctrl b and then if you scroll while beveling you can actually uh change the amount of uh cuts it has so if we could scroll up one we'll actually have more as you can see we'll have two bevels if you were to do that even more um you have a lot which will lag your computer probably if you get that too high but yeah so we have a little bit of a basic shape of a mug if we go back into object mode by pressing tab and if we right click this and click shade smooth we can actually make this smooth now that's actually looking pretty ugly so go to the green button down on the right and go to normals and choose auto smooth and then just change that a little bit now we have a little bit of a sharp edge on the mug uh yeah there that looks like a good good amount so let's go back into edit mode we're pressing tab this is looking a lot better now in edit mode we can actually add objects in edit mode so if we click shift a add a cube scale that down by pressing s and move that over by pressing g and then x if we move it up g z and then s z scale that down and then let's just ex uh go to the uh click this little button up here and we can look at it from this view g x and then let's just move that down extrude g z r and then y let's do shift z and then click and drag and we can actually select through this so r y here we go and then if we select through this click e r y and then move that over by clicking g x and then g z and then complete click e and then r y g z x i'm gonna move this on the x axis just a little bit and i'm gonna extrude that out um r y okay this is getting tedious but uh let's move that in and then for good practice let's just delete this face xbase x delete that face and there we go oh yeah we're going to need to smooth this again when we go back into edit object mode and uh s y and then let's make this a little bit so a little bit bigger so click s and let's move that out and then uh let's just bevel this a little bit so click two so go to edge select we'll hold alt and then hold shift alt and we'll select those and then click control b and then hold alt click shift alt ctrl b and then i'm going to turn that down just a little bit and yeah so this isn't looking the best but there is something we can do i'm actually going to move the handle up real really quick but there is something that i need to show you so scale that out scale that down on the z-axis and there we go so now this isn't looking our best it looks okay for a game asset but if we want this to look a little more detailed without putting in any extra work we can actually click right here on modifiers which is our next thing i want to look at so modifiers are really cool because they are they help you do things a lot faster and they automatically add things to your mesh so we click add modifier and then choose subdivision surface this will actually make it a lot more subdivided for it it'll subdivide it cut it up and it will make it look a lot nicer so we can go ahead and select it scale it down and now that's looking like a nice mug and now we can actually go in here add some loop cut scale that outward you know this is where things get fun because then we can actually see a lot happening all at once it's just a lot faster to work when you use modifiers although this will make it quite a bit higher poly there are fixes for that so if we hover over this modifier and click ctrl a it'll apply it now we no longer have that but have that um editing of those editing options but now you can see the full look at what this has done to our object so it's added a lot more faces which is not going to be the best for a game so if we want to go ahead and turn this down we can add another modifier and let's change this to  decimate and if we turn down the ratio this will automatically remove a lot of the faces for us and it will mess it up a little bit but it will remove a lot of the faces now these little mistakes in the rendering are gonna happen so uh you won't really notice these on a small mug like this in a video game but that's what this is for and there are some tricks you can do to improve how this looks but it's gonna look a little bit bumpy but you can go ahead and edit that after you apply this modifier so i'm going to delete it by clicking i'm going to click x on it hover over it and click x and then uh yeah so uh with meshes in blender you can actually join them together and combine them so it looks like shift a add a cube scale that down move it over we can actually this is a bad example but if we select these both we can right click it and click join or we can click ctrl j on our keyboard and this will actually make it combine now obviously we probably don't want this this looks weird but it comes in very handy when you're trying to make stuff and export it to your game or whatever i'm just going to show you guys how to save and export this so save a blender file you click control s just like any old file and or you can also go up to file save and we can save this wherever we want and name it down here now that saves that as a blender file if we want to export this we can click file export obj or fbx is generally what you want to do for game files fbx will export it as separate meshes and it's a lot better for like textured assets and when you have a lot of objects in here you usually don't want them combining if you up export as an obj it'll combine all your objects into one mesh and export it generally you want to use fbx for most things so yeah file export fbx and then it also gives us a bunch of options on the right hand side here uh we can limit it to the selected objects so we can click that and then we can choose this object and it'll only export that if we had multiple objects in our scene and yeah we can click export fbx and it'll save it so yeah see you guys in the next one on how to texture your meshes in blender and uv edits and all that stuff that's going to be in the next one which shows you all of that on how to texture and color your meshes it'll be on screen if it's already out see you guys there",
      "duration": 1169,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "D2LrlxWk8kc",
      "title": "The Secrets to MOTIVATION As A Roblox DEV...",
      "transcript": "how to stay motivated as a Roblox developer first you gotta make sure to have fun with the process if you aren't having fun with making your game you're going to have a really hard time finishing it because making games is really a lot of the time about having fun I mean there are some hard parts that you need to push through but in general you should have uh you should make sure that you're enjoying it and if you're enjoying it maybe find someone else to work with who can do the parts of making the game that you don't like uh you can hire people you can find a friend on on Roblox who will help you and I do have a video that's going to be in the top right hand corner that'll help you you should watch that after this one if you want help finding people to work with on Roblox this will be insanely helpful for you but hey let's move on the next tip which is to plan things out and write your goals and intentions down like why are you doing development why are you making this game you need to ask yourself these questions so that you can make sure that you know why you're making games and why why you're a developer like it just seems so simple but when you know exactly why you're doing something it's going to help you understand uh more and it's going to help you be more motivated because you're going to understand your goals more you're going to be wanting to strive towards it more you'll you'll be really thinking about what you're doing and why and maybe you'll find something that you didn't realize that'll motivate you even more to uh pursue it and like you know because a lot of the time you might think oh yeah I just want Robux but sometimes you actually really enjoy just making stuff and creating worlds or maybe you enjoy like making code and seeing it work there's a lot of different aspects of development that you might enjoy that it isn't always necessarily just making money or whatever like you can find a lot of enjoyment and just the process and making stuff on Roblox it's just really awesome and uh you know it's important to ask yourself why you're doing this it's very important all right next find other developers to talk to and work with on the dev forum and Discord servers like mine um you can find a lot of people to work with on those types of places and it will help you a lot as I said that video that was in the top right hand corner show you exactly how to find people to work with on your game but yeah next up take frequent break taking frequently I'm stuttering but taking frequent breaks is extremely important you need us you need to figure out a way to take breaks and only work in like really you should only work in like a 90 minute intervals like you work for 90 minutes and take a break and don't just take a break by scrolling on your phone go outside preferably um it'll it's it's just uh I've heard that you know that's the best way that you can take a break just like and best way to work because you'll be a lot more focused and you know also when you work make sure to have like notifications off and just make sure to be distraction free because you know when you are working you need to be as focused as possible and if you have a bunch of distractions it's going to be really hard to get a lot done uh and your phone is definitely a big culprit of a lot of distractions that can be caused and yeah next up listen to music not sad or slow music I mean unless you're really into that but I think it's really important to note to list music that inspires you or at least upbeat stuff or stuff that isn't like depressing music like sad it just makes you like slow and sad you know so don't so listen listen to something that'll help motivate you you know music that you like not necessarily I listen to a lot of music that has like words in it um but a lot of the time that music can be distracting I know most people like music that has words in it but maybe try listening to like Lo-Fi hip-hop or listen to ambient music or listen to classical music I mean those are a lot better for Focus but I know it's it's kind of hard to get used to doing listening that type of music when you like it but it can be a lot better for Focus I also like EDM music a lot of the time it can be good for focusing and motivation and whatnot next poster work on Twitter and talk to other developers there too I actually have a video on this as well how to post your work on Twitter how to set up a Twitter and this shows you exactly how Twitter is really one of the best tools you can use as a Roblox developer to get more attention on your work and find more people to work with and everything and just gain more advice and learn about what's happening on Roblox right now it is extremely important that if you're a developer that you are on Twitter of course if you're at the right age or you can be on Twitter very importantly because it's the place where a lot of developers talk and if you aren't talking on there at least you'll know a lot of Roblox news and you'll know the updates that are coming quite frequently don't try to work too many hours a day you will burn out it's important that you work as many hours that that you can be focused on your work you need to have maximum Focus over Maximum time if you are working 10 hours a day but you're extremely distracted because you're so tired from working that many hours something needs to change you need to work Less hours in your day you need to work uh maybe maybe a couple hours a day mess around with that figure out your balance and just you know work from there try to have as much Focus as you can take breaks as I said earlier next don't take on a project too big when you start out because as I think Alvin block says this you you're you can only make your 50th game if you can make your first game and you're never gonna really make your first game in you're making like the next jailbreak or something as your first game it's just not gonna happen so you need to make small projects when you start out practice the skills you know learn more stuff and try to make at least one percent improvement with each project you make and you'll find that pretty quickly you'll get pretty good at development and then you'll finally find yourself able to take on these better projects over time just take it slow enjoy the process and it will be really helpful next if you have the money hire others to help you on your project I kind of mentioned this earlier but um you don't necessarily have to have money to do this you can find friends in the development community and you can talk to them and eventually maybe make a game with them this will really help you because when you don't have to do all the work and you can focus on one specific thing you can be a lot more efficient when you're working with people and you'll make a much more creative game because you'll have a lot more creative thinking going into the game by multiple people and it's just gonna be way better because you're just gonna have such a better game if you work with other people people it doesn't even have to be for for everything or things that are they look that big just work with people on even if it's like one small like map or a scripting system just work with people on stuff and you'll find that it'll help you all right next tip let go of commissions that are taking way too long I mean you don't want to like let people down too much but like I've taken commissions where they drag it out with like fixes and just things that weren't brought up when you were hired at first and if it's draining you it's generally not worth like keeping going you want to hold your agreements like if you made an agreement with this person that's like set in stone you want to follow you through with your agreements you don't want to be scamming but if you're not really on like a fixed agreement you have stuff that's like coming up that just wasn't really talked about in the beginning and it's just not becoming clear to anyone what's gone what's going on and where their Project's gonna end up really just drop the commission it's it's yeah I know you might have put in a lot of work before and you might have done a lot of stuff but honestly hand them hand it to them as it is get some of your payment and move on because you just can't be draining yourself with these projects that aren't going anywhere and are just being dragged on by these people who are uh probably using you at this point for when maybe even the pay isn't getting extended so you really need to make sure that you cap off your commissions at a certain time frame and just realize when something is too much find someone better to work with or make your own project at that point next up realize that everyone who is successful started at zero and you gotta work your way up and actually find a way to have fun with it along the way I keep saying that but it's because it's really important that you you know find the balance between fun and actually like working hard on something um it's very important that you do this because you know you got to realize that everyone started at a zero and if you are just comparing I mean it's good to compare yourself it's good to be competitive but if you're just constantly like looking at everyone else's work and just thinking oh my gosh my work sucks just not going to be good because your brain is not going to realize that all these people started out at zero it's just not how your brain is going to work when you're looking at all these people's work was just so much better than you or you believe they're so much better than you your brain is just going to be like oh my gosh you suck oh my gosh all this stuff and you're gonna have all these negative thoughts you need to get a lot of the time you need to get off social media and Twitter and Discord and whatever it is where you're seeing all this and you just need to work on your own projects and realize that you're gonna you're gonna get there someday or even exceed them like I know that I started off looking at all these people's work and thought it was amazing I could never do that and then soon enough I make stuff for a while focus on my craft and I'm looking back at the exact images I was looking at when I started and admiring their work and it's still decent but I feel like I could do better or maybe I have work that I've done better than them so I feel like yeah I've surpassed people and it's not it's not like oh yeah they suck no I bet they've improved too over time but I I'm just saying the original stuff I looked at and was like wow that's really good now I look at it and I see things that could be improved almost so it just shows how much that I've been able to approve my skills and it just shows how a little bit of work can go a long way to improve your skills and it's just it's such a good thing to just step back from a lot of this stuff and just focus on your own stuff even though it's good to look at other people's work and you know take some things from it and not not steal but like you know uh look at details that they've used and try to implement it in your own way put things together to be in your own unique way it's just that there is a limit to this where you might be too critical or stressed out over how good other people are at this and you know it's good to like motivate yourself get competitive but like if you're just beating yourself up for not being as good as people when you're just starting out it's not good or even if you've been in it for a while like realize your work really doesn't have to look the best or work the best to be successful on Roblox you can make a successful game if it's just fun and it's really engaging to the players that's really all there is to it all the nicest builds all the best scripting all the best UI all the best gfx won't even necessarily make your game successful so just realize all these people making all this amazing work yes they're extremely talented but at the same time it is not necessary to be that good to make a successful game and no not every game on the front page is that high quality of work all comes down to the game design and how well set up the game is to be fun and engaging for the players for a long time and to keep them coming back that is really important but for the next tip if you are hugely inspired to become a large developer or have a large game staying motivated is a lot easier as you follow this advice but don't assume you can't burn out either I did on my own project and I was just trying to do too much at once I mean it's great to have good huge goals and aspirations when you're setting small goals you're going to be a lot less motivated to actually go towards it so you gotta set Higher Goals whatever your goal is right now like oh I want 10 000 players double it 10x it I want a hundred thousand players then you're gonna be like wow that is a goal I really want to achieve like think about the amount of money you'd be making with ten thousand or a hundred thousand players forget whatever your goal is just double it and that even if you don't reach it like you're gonna be way more motivated you're gonna go way farther if you've got that goal in mind and just believe you can do it like because with enough work can really do whatever you want especially with development like I think anyone can be successful in development uh it all comes down to like working hard there's really not that much competition when it comes down to it there are not that many Roblox developers out there and can figure out how to make a really good game I mean I'm not I'm not trying to talk down on anyone I'm just saying that there are not a lot relatively that are making successful games and it's only now that a lot of companies are starting to come on Roblox that are trying to do this but a lot of them are failing so really the people who know the platform the best have been playing it for years you are the people who have the best shot at making a successful Roblox game because you know what goes into it you know what makes it fun it's not all this fancy building and effects necessarily unless like it's an anime game I've seen a lot of anime games that seem to be successful just because of their effects a lot of the time that's an outlier but most of the time you know all this fancy graphics and everything you really don't need it to make the most successful game you really need to just focus on making something on engaging that keeps players coming back and you know have good monetization and all that in your game and set those big goals next tip is to not get discouraged when progress is slow or when Roadblocks come up no pun intended roadblocks roadblocks best thing you can do is take a break and come back to try and solve the problem by researching and this break can be as long as you need it could be a day it could be a couple hours just you know take a good break take a good step back from your problem and your brain is going to naturally try and process what the roadblock you ran into and if you're just angry at the time when you reach it like you're just raging at your computer why won't the script work you know you gotta just take a step back and realize that it's not too big of a deal take a break and just like think it over because you're gonna be a lot more clear-headed when you're taking a break you can realize yeah this script really can be self-simply I don't know why I was so mad that's what I've known before I'm being honest I've been really mad at a script and I walked away took a break and I had the idea to fix it and also talk to other developers with you about your issue make a post on the dev Forum when you run into a big issue like don't be scared to do that I feel like a lot of people might be worried or scared to like post but no one's gonna really judge you and if they do who cares I mean who's who's gonna judge a small developer for making a small mistake or something they're gonna probably be helping you and trying to get you to the right path to being successful finishing your project if you are making money off your development project yet it can be discouraging but that's why I made the video on screen to help you start getting commissions on Roblox and start earning Robux now without a full game out yes this is how to get commission you'll be able to get some Robux funding and I'd hope that you would not spend this on like limited uh I wouldn't get headless or Limited",
      "duration": 888,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "-xQBxTYq2m8",
      "title": "The BEST Way to Learn Building! (Roblox Studio)",
      "transcript": "so a lot of you guys have probably tried to start building on roblox but you had no idea where to start maybe you opened up studio threw in a bunch of free models and then closed it you know we've all we've all been there but seriously building does take up a lot of time and dedication to get good at it but in this video i'm going to help you get started with some simple steps i'm just going to be brushing over each topic in this video and i'll make videos going into more detail on each of these things in the future first of all once you you know open up studio make a base plate you just want to ignore everything so all the buttons just ignore it all they're gone so all you need to worry about is the tools right here select move scale rotate and then the snap to grid options which let you change the increment of how many degrees or how many suds you move apart the properties window and the explorer window you also want to know the key binds control d  this is about all you need to get the basics down of building oh oh yeah you're also going to need to anchor your parts don't forget that one and now you should have all you need to get started so after you've practiced the basics for a while it's now time to start messing around with the other features in studio so um you want to get comfortable find your way around google things when you don't understand them this is just exploring all the parts of roblox studio clicking every menu seeing what each thing does that is uh somewhat related to building if you find something too hard for you right now you can just write it down and come back to it later when you need it after you've done this for a while you should be getting pretty comfortable around studio this isn't this definitely isn't the fastest way to learn but it's definitely the easiest way and it'll be the most fun for you to just mess around and have fun with this but if you follow all these tips you'll be going fast enough and you can work at your own pace so now after you've gotten the basics down you're pretty comfortable building you're ready to start using plugins basically what plugins are are these things made by other developers which let you add more features to studio they'll make your life a whole lot easier by solving some problems that you might have found before and it'll add a lot more functionality to studio that you didn't have before like making 3d text objects um and instead of going over each of the plugins i use which i have like 20 by the way i don't know probably more than that actually it's gonna give you my top three in the description and i'll save the rest for other videos so subs you don't miss that now you're gonna be getting pretty comfortable building in studio and it's probably about time to learn the terrain editor which this is probably one of the coolest features in my opinion on roblox you can make huge detailed maps in a short amount of time using the terrain editor because of the amazing powerful tools that that you can use by just growing eroding adding subtracting etc to make the terrain that you want and it's just really easy to use and it's really fun to build maps this way because you can really see it coming together as you work i'll have a full tutorial showing you how to use terrain pretty soon but i do have another video that i already made in the past about some tips that'll be in the top right hand corner for you guys if you want to check that out now blender blender is a program that a lot of developers use to make more detailed objects for their games trees all that kinds of stuff sometimes people like to build only in blender and there's a lot of reasons why you might want to do that but for now just worry about studio and once you have that down you will have a lot easier of a time learning blender and you will be able to improve your maps a lot so make sure that you stick around on my channel to keep learning i'll be making a blenders basics tutorial anyways make sure to join my discord server to chat with other developers link will be in the description to join that so yeah see you guys next time enjoy learning to build",
      "duration": 237,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "b_31P1MEOlc",
      "title": "The EASIEST Guide to Making a Low Poly Asset Pack.. (Roblox + Blender)",
      "transcript": "ever wanted to make some amazing low poly assets just like this well today I'm going to show you exactly how to do that even if you've never used blender before you are going to learn exactly how to make some amazing low poly assets to make your game look great and just level up your skills so let's go if you don't have blender you can go to blender. org and download it it'll be linked in the description but yeah we're going to go ahead and open up blender and we're going to make some cool asset so we're going to make a bush a tree as well as a fence post so this is going to be great when you open up blender it might look a little bit overwhelming but don't worry because this is going to be easy so we don't have to do that much with all these panels buttons you see you can middle Mouse click to look around and you can scroll the zoom in and out and what we're going to do is we're going to select our default Cube by clicking on it and we're going to go to the modifiers panel right here the wrench we're going to add a modifier and we're going to add a subdivision surface modifier so now we get a little bit of a basic you know Bush obviously we're going to do more to it than this but we're going to right click it shade smooth and we're going to go down to this green triangle and it will go ahead and open up this panel and here we're going to do normals open that up choose Auto smooth and then just turn it up to something around this where we just kind of see some edges and it gives it kind of a nice look that I like I kind of like this style so now what we're going to do is we're going to select this hit Tab and now we're just going to mess around with this scale it up do some cool stuff and I can hit B here and I can select these um vertices hit control B get a little bit more detail in here do the same thing down here you hit s to scale right click to cancel left click to confirm now I'm going to also turn down my auto smooth just a little bit all right I think that's a pretty good Bush now let's make our tree so I'm going to hit shift a shift plus a on my keyboard at the same time and this gives us a panel that lets us add in different meshes so we'll go to this mesh option up here hover over here and click on cylinder and now open up this panel down here in the bottom left and we'll just turn down the vertices to about 10 and then we're going to hit g y and that'll move our cylinder out here so we can mess with it now I'm going to hit Tab and enter edit mode and I'm going to hit three on my keyboard so that we can select faces and I'm just going to click on this top face I'm going to hit s and then you know we'll just start scaling this up by pressing e to extrude click to confirm we'll hit s to scale and then we can kind of modify this slightly hit R to rotate it slightly and then we'll just repeat e to extrude S to scale and you can hit GG to kind of slide it along this axis here so now hit I hit uh gz to move that down I'm going to hit e scale this down now I'm just going to make us some nice little branches up here and rotate those those now I'm going to hit M and then hit at Center and merge that into one we're just going to make some branches then we'll put these on top of it so I'm going to hit shift Z so that I can see through my mesh here wireframe mode and then I'm going to hit two on my keyboard or you can click up here to get Edge select and I'm just going to select these screw them out auto rotate move them out here a bit more all right there we go so we got like a basic Branch going on I know it looks weird right now we didn't put anything on here but yeah now what we're going to do since we did do some weird extrusions right here we're going to hit tab make sure you're in edit mode and we're going to hit a to select everything then we're going to click altn on our keyboard and like recalculate outside to make sure that our normals are correct and nothing is inverted the wrong way and now just make sure let's make this shade Smooth by right clicking hitting shade smooth and then we'll mess with our Auto smooth inside the yellow the green triangle here and we'll just get a nice look to that wonderful so now I'm going to click on this bush I'm going to hit shift d on my keyboard to duplicate it then I'm going to hit G to move it g x and we're just going to make some cool leaves up here hit s to scale G to move using that middle Mouse button to look around and I'm just hitting shift d over and over rotating these how I want them shift d r z but now I'm going to select all of these I'm going to hit contrl J on my keyboard or command J on Mac and now we'll join these into one mesh then I'll mess with the auto smooth a bit see how different looks are all right pretty good pretty good right um and also the interesting thing about this bush by the way is it can be reused as a rock so we could uh duplicate this hit shift d g y and then just kind of shake it up a bit um so we'll we'll just select a bunch of these we can actually just hit a and we can choose our randomize tool which is right here you have to click drag to random Rize this tool here and then we can go ahead and kind of pull on this and we can kind of randomize this so it looks more rock like now let's go ahead and make our fence post now let's hit shift a add a Q and then we're going to go ahead and go over to this s to scale scale that down now we're going to hit three grab the top face and move that up then we'll just scale that down a bit and yeah so now we're going to click a hit shift d and then right click to cancel that and now we'll hit rotate hit r on your keyboard hit X and then we'll just rotate that sideways scale it down and then we'll hit s x and scale that down so that we have a bit of a board between our fences looks nice we'll kind of scale that up on the z-axis too I might change this face here a bit and yeah so now we'll just duplicate this fence post part here shift Z to look through and then select it all hit shift d and move it down and there we go rotate that scale it into position just adjust those a little and then let's hit shift Z again grab this end post here and then we'll hit shift d to duplicate it or and we'll deselect these two faces here by holding shift and clicking on them now we'll hit G and Y and we'll move it all the way over here and now we have our second fence post so I'll just move that back into place and there we go so now we'll hit controlr add some little details on this and that'll look good hit scroll up a little on that uh to give it a second second Loop cut there we go so do that again on the bottom one we'll call that good so we'll also do it on the sides here that'll look nice and you know just kind of messing around just kind of making this look how you want you don't have to do all this if you don't want to you can keep it really simple I just like doing some complic at things here sometimes so now I'm just going to shade smooth on that and I'm going to do auto smooth as we've been doing and there we go uh one last thing we should actually do shift Z and we should select these these inner move those outward by hitting g y and that'll look much better real quick let's optimize these a little bit um so we can remove some faces so we'll hit three on our keyboard after opening that up in edit mode delete that face by hitting X select these two by holding shift then delete those faces and there we go so that's just you know it makes a difference when you have a lot of Assets in your game not really when it's small but for mobile devices you got to have everything optimized everything you can get so now let's go ahead and Export these so to export go ahead and click file at the top left go down to export and click fbx and now you can just name your file whatever you want and we'll be good to go well now we'll go back to Roblox Studio make sure your game is published if not so I'm going to go ahead and publish mine all right there we go now we'll go up to view and make sure we have asset manager should be dark gray right here click it make sure and we'll go ahead and go down to asset manager click the bulk import button right here bulk import click that and find your file now we'll just go ahead and click apply all and once these are done they're going to go ahead and show up in your asset manager right here and we'll just go ahead and click on the top one hold shift and click on the bottom one in this list then we'll right click and we'll click insert and then we'll go ahead and put our object in the game and there we go so yeah congrats on making your first asset pack let's go ahead and color these so we'll make our bushes and our tree nice green so yeah I hope that this helped you especially if you're new to blender hope you have some awesome assets you can go ahead and build some amazing maps with this and if you want to dive deeper and you're not fully under standing blender you can click the video on screen for my full blender guide I made a while ago it's really good it'll teach you the ins and outs of blender maybe some stuff I missed in this video and clear it all up for you so yeah see you there if you want a free asset pack of mine some cool models I made in the past you can click the link in the description for my free Essentials pack you'll get that on my website so yeah see you in the next video",
      "duration": 560,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "CippiATeZ54",
      "title": "The EASIEST Guide to Making Amazing Terrain (Roblox Studio)",
      "transcript": "in this video we're going to look at exactly how to use the terrain Editor to its maximum potential and exactly how to make amazing worlds really fast with it so let's get started you need terrain to make amazing realistic maps and you can go ahead and add terrain grow it expand it really fast without meshes or any of that stuff so the way that you can actually access the terrain editor is by going to view and then going to terrain editor right here and making sure you have it dark gray and you have you'll see it on your screen somewhere so yeah here is the terrain editor so I'm going to close out the toolbox so we can see this full screen there's a few different sections but the main one that we want to look at is edit edit allows us to go ahead and start adding our terrain so let's start add let's go ahead and add a bunch of terrain so you can click add and you can change the size here and you can drag around and click and you'll go ahead and add some terrain now I'm gonna admit I don't really like the add tool I don't like it that much and the add tool is just really not that good you'll see it's just like kind of not it's not that good that's why I highly recommend using the plugin called part 2 terrain which is going to let you turn an entire part into terrain so I'm going to click on the base plate turn that into terrain and boom there we go you can get this plugin by clicking the link in the description or just searching it up inside of toolbox and typing in part two terrain so next up let's take a look at flatten well we have all this lumps of terrain so we might as well flatten it back out so the flatten tool you can click that I mean go ahead and increase the size and we can flatten this oh I'm just gonna flatten it out a little bit and there we go so next up paint paint is incredibly useful so let's go ahead and grab the material called leafy grass so as you can see by default you should have terrain decoration on which is these grass blades if you don't have this on you can click the terrain in workspace and go ahead and check off decoration and make sure that's enabled but what leafy grass is for is mainly for painting areas that don't have this 3D grass and it's really useful to make a variation and really cool stuff so I highly recommend using that when you need it especially if you have a part you don't want these blades sticking through so that's what this is really useful for now let's look at the grow tools so the subtract tool we're not going to look at that because it's basically the same as ADD but subtracting now a road allows us to go ahead and push away terrain and push it in see so we can sculpt it out can I add some bumps Etc we can just form it how we want there's also the grow tool which is the opposite it allows us to grow it out so I recommend making you know some cool like Hills like this and you'll go ahead and see the sides of the Hill they're very not nice so what I recommend doing is painting these with Basalt or something like that and go ahead and making that a nicer material now we can always change our grand materials I'll admit this is a little dark so we can click on the terrain and click on this color and we can go ahead and set this to a little bit brighter and there we go so looks pretty nice so we can just paint the sides of these Hills with Basalt now we have a very nice looking Hill very natural looking very good now one other thing we can grab like ground we can go ahead and paint some of that around add some Trails maybe but yeah so using all these tools together you can go ahead and make some amazing environments so I recommend you know growing some terrain making some really big areas even using the add tool by sizing it up maybe making like a cylinder and then just adding some of these around go ahead and get some cool shapes here going now this looks like complete crap but if we size this up we can go ahead if we grab our road tool size it up we can go ahead and pull away from this and make it into an actual Hill or Mountain so yeah as you can see we're getting some really nice stuff I actually want to see how this looks with Sandstone do they have Sandstone anymore yeah there we go actually kind of cool we could add some sand around it make a whole new Biome Minecraft you know so you know paint a bunch of sand there and there we go so yeah I love terrain and I know certain people don't like terrain but I love terrains I like I like making maps with Turin so much so now something really cool to keep in mind is that the terrain editor is now made even more useful with material service where you can create custom materials and material override and you can also recolor all the terrain in here again and it's really nice so I can go ahead and make the grass a little bit brighter you know get a cooler color you'll want to copy that and paste that into leafy grass too but now with the AI material generator it's insane so I can go ahead and add a part or I can go to home click material generator and if you don't have this you can go to file beta features and in here you can enable material generator which is right here and you'll have to reopen Roblox Studio restart it to go ahead and get that but yeah so with this we can select our part we can type in simple smooth heart cartoon grass shaded we'll go ahead and get a bunch of material instantly generated by AI for us so and then after we apply it to our part we'll be able to use it so yeah now this actually looks pretty cool although simple it's a little simple but we can try it so let's go ahead and change the base material to Grass save and apply that there's an uh there is a organic mode which actually Smooths out different textures and blends them together but you know depending on the texture you might want to use that you might not for tile you probably wouldn't but for this works now we can go ahead and go to our material service change the default material for grass to the simple grass material and it's going to go ahead and turn that into our simple graph let's go ahead and chain I'm going to duplicate this I'm going to go to material service click this hit Ctrl D and I'm going to change the base material to Leafy grass this way we can actually set it to be the same I'm going to go to Leafy grass I'm going to change it to the simple grass material it's kind of a weird looking material but you know it demonstrates it a little bit how about we get a simple smooth cartoon mud texture and replace this just for another example kind of liking that I like that a lot actually holy crap that's good and it's crazy it looks like that's really like a footstep or something so I'm gonna make this organic size that up the base material mud or something apply that and we'll set the default material in material service and we'll go ahead and change it to our simple mud material and oh wait let's change let's duplicate that um let's make that ground and let's see let's make it let's make that okay because I forgot we were using ground so let's go boom so yeah now that's looking awesome we're having a much more cartoony vibe to this we could even go do the same thing with this we had a cartoony Rock texture see how that looks for basalt oh my gosh I love this this is crazy bro so base material will set this to Basalt go to material service set this to that boom crazy right see how that looks organic mid but yeah I mean the the opportunities are endless with this really can't wait to see what you can create but if you want to improve your terrain skills even more make sure to click the video on screen with some amazing terrain tips and a video I made a while ago some really good advice if you want to keep improving your terrain skills go make some amazing realistic or cartoony maps and see you guys in the next one thanks for watching",
      "duration": 437,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "mk6iVm95D0U",
      "title": "How to OPTIMIZE Your Roblox Game... Easiest Guide!",
      "transcript": "it really sucks when you're working on your Roblox game and it's going great and then you play it and it's extremely laggy well I'm gonna show you a few helpful tips that will help you remove lag from your game so first you're going to want to turn off cast Shadow on as many parts as possible Shadows are one of the biggest lag causing elements of ever game especially when you have a lot of parts and there's a lot of things that you really don't need Shadows on like for example rocks and bushes you don't really need Shadows on these so go ahead and select all those and just turn off cast Shadows see it doesn't really look that much worse and then really small parts especially like for something this big you're not even going to notice it to turn those off and anywhere that just has a lot of parts all in one place uh just turn off cast Shadow on most of them all right next turn off can Collide and can touch on small parts and parts that just won't even need to be touched so for example like this part if you have a part this small on a building it isn't even going to affect it if you turn off can Collide and then can touch just removes a little bit more lag can query I don't think it's necessary to turn that off I don't know you can test it out if you experience less lag I guess use it but I haven't really seen much of a difference when I turn that off yeah so just turn off can Collide and can't touch on as many parts as possible and it will help with lag because all those collisions being calculated on small tiny parts that don't even need it especially complex meshes you really don't need that next on meshes I recommend turning performance rendering on for as many of them as possible which basically what it will do is it gets less detailed as you get further away from it so if we pay attention to this bush right here and we get farther we'll see that it gets more uh low poly as we get farther away this is very useful for removing lag because stuff that's far away No One's Gonna notice um how high detailed it is really when you're playing the game all you do to turn this on is click on it go to render Fidelity turn down the render Fidelity to Performance if there's something that looks weird when you do this you don't have to worry about it so you can set it to automatic it's a little bit less extreme and I think it might base it on size a little bit but I recommend using performance on as many things as possible and also another thing that you can do to make your meshes a lot more performant is to change the Collision Fidelity so what turning down the Collision Fidelity does is it just makes it so that when you touch the part it isn't calculating such an advanced like shape whoa it's just like real life month the from what your character's walking on so we can make it so when you touch this your character's technically touching a block to the game and doing this will reduce a lot of the lag so if we click on it go go down change the Collision Fidelity to box that is the most simple Collision Fidelity default is just the normal one it's kind of kind of precise kind of not precise what hole does is it just makes it so that it just kind of Smooths out the uh Collision so I wouldn't recommend doing this on things that you want a very precise Collision because it might look like you're floating when you step on it but it should be fine on things like rocks it isn't going to do anything so it I definitely recommend turning it on on things like rocks and then the most precise one is precise convex deposition this is the most precise one and when something is just not working for you when the Collision is not working this is what you want to turn on if you need like if there's like a doorway and a wall or of a mesh you probably want this on because otherwise it's just not going to work so I would use this very sparingly very rarely it's it's gonna be really laggy if using this all the time and finally make sure your lighting mode is not set the future because it is the laggiest thing you can do to your game if you have a lot of lights if you have a lot of lights generally this will be really laggy you have to do a lot and a lot of changes to make future not lagged and right now I just don't think it's really worth using the most performant lighting mode is compatibility but it makes everything all grayed out second most is voxel but all the Shadows are smoothed out this one's okay if you don't really care about how the Shadows look but my favorite Shadow map because it's a good balance and when you turn your graphics down it'll automatically put it on voxel so I don't really think there's a point in not using Shadow map as long as you turn off cast Shadow on a lot of things and you could also take off Global Shadows because if you really don't want Shadows this is what will take off most lag on your game but you can also make a UI button in your settings of your game uh that lets players turn this off on their own which is what I'd recommend doing um so yeah now changing your lighting settings like this might make your game look a lot worse but to fix that you can check out the video that's on screen for a full guide on how to make your lighting amazing even with these changes and maybe even better than before so yeah see you there",
      "duration": 287,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "fz-0n9ed9xU",
      "title": "The Complete Guide to Roblox Development Success (Free Course)",
      "transcript": "you've clicked on this video because you want to learn how to get started in Roblox development and I'm telling you you're going to learn the golden path you can go down to learn a skill fast start creating and become a highlevel Roblox developer I'm going to tell you the three steps to Roblox development success that can turn you from a noob who doesn't know at a place a part in studio to a pro who can create amazing worlds with ease I've been a developer on the Roblox platform for 7 years now and I've gotten over 30 million visits working on Jimmy games and more exciting projects with this knowledge I'm going to finally tell you the path you can take to make it on Roblox start creating with ease and efficiency and break through any barriers you might be running into right now as you're trying to learn about development today is the day that will change everything so we've talked about me but what about you you're likely someone who's either a Roblox player or someone who's been trying to learn development for a while and you probably come into some struggles some problems some issues that have blocked you from becoming the developer that you want to be well I'm here to tell you this I was there too I was struggling I didn't know how to even anchor Parts in studio when I started building thinking that I was going to make something exciting and amazing it all crumbled down to Pieces when I hit play all my parts they started falling down everything that I built tumbling to the ground is a sad sight and that was me in 2017 when I first started to take building seriously on Roblox I was in this group called volt gaming Studios we had a Grand Vision to reach the top of Roblox success we wanted to make amazing games but it never happened because of a few issues I'll tell you about later in this video but first let's talk about the first step to get started with Roblox development if you're interested in Roblox development at all you likely already know about the core skills to development success these include building where you create amazing worlds with parts terrain and models where you make Creations out of what used to be thin air the next skill is modeling most people who only build in Roblox Studio are missing the point yes Studio can be great for many builds but blender will make it a 100 times better if you model assets in blender you can make your creation much better just search blender and look at what shows up there's people showing you how to model swords armor and medieval assets with precision and detail there's people showing you how to make beautiful environment Assets in any style you want low poly medium Poly High poly it's all there for you to choose from if you want to get better at building you need to learn modeling next then there's scripting scripting is what brings it all together it's where you take your still still creations and make them come to life through scripts when you do scripting on Roblox something amazing happens I think it's the closest thing to Magic you can take something that was dead and turn it to life you can make zombies move you can make cars drive you can do anything you want with scripting then there's UI where you design the panels the menus and the buttons in games if you want to give your players a great gameplay experience with ease and ex accessibility you need to make great UI this skill is vital then there's VFX where you create beautiful visual effects to make your games shine then there's gfx gfx is how you make icons create thumbnails and design your game's logo it's a vital skill to finalize your project now all the skills I've just told you about are mainly what operate in plain sight but has anyone told you that there are skills that you don't see there's game design and project management game design is where you plan your project where you think about how the game's going to work before you create it in reality it's how you make your game fun it's how you plan your gameplay Loop and what players are going to do when they play your game if you want to learn about game design watch the video in the top right hand corner then there's project management a lot of people think that project management is just opening a board on a site called Trello and while this is key and it's a great way to organize your project it's not everything project management is primarily about leadership it's about bringing a vision and a direction to the game project and ensuring that everyone stays on task you use Trello and other sites to manage your developers project management is essential it's not just a skill it is the backbone of your project when you combine all these skills you have an entire development team you can choose from these core skills building scripting modeling UI VFX project management and game design now you've heard about the skills it's time to choose what you're going to do on Roblox many people say that you should learn it all at once but I'm going to tell you something different Master One skill first then you can learn anything you want after that if you focus on one skill at a time you can gain Mastery with ease and efficiency you can avoid the stress and overwhelm that it takes to focus on too many things at once let's say that you choose scripting if you decide to do scripting it's best that you ignore every other skill until you master that one skill then once you gain competency in scripting you can move on to the other skills now can I tell you a quick story 2021 was the year where I started to get serious in development I went from it just being something that I did from time to time to something that I spent nearly all my time doing but there was a problem as I was learning as I was working I was trying to learn too many things at once I was picking up modeling I was picking up gfx I was working on my building skills I was working on my YouTube channel and what happened was not that I got Mega productivity but instead I didn't gain a lot of progress in the one skill that I was most focused on at the time that skill was building my focus and energy was spread out among too many things and while it may have worked out pretty well in the long run I have 90,000 subscribers I didn't earn as much as I wanted to from commission work with my builds don't make the mistake I did aim to place your focus on one skill at a time so now you know the core Dev skills after you choose the skill you want to learn find the resources you need to learn it whether that's videos on YouTube courses books the Roblox documentation a Discord server or any other source learn learn learn constantly all right you have your skill and if you follow the steps until this point you'll start to get good at your skill the second step to Roblox development success is to start monetizing your skill of choice now that you know the skills I I'm going to teach you how to monetize the skill you choose you want to do this next as this is the point where you can start to level up more in your Roblox Development Career when you start to earn from your skills you start to feel more like a legitimate serious developer on the platform so there's several methods you can use to monetize your skill of choice whether you learn scripting building modeling or any other Dev skill I've just shared with you you can monetize it through the methods I'm about to explain to you the first method is commissions with commissions you put yourself out there as a developer and you start taking small jobs to earn from them now that you have a skill imagine how exciting it will be to start earning from what you have learned imagine how exciting it would be to see that first payment come in for your work as a Roblox developer you can do that very quickly with commissions people who I've told to take commissions have come to me and said smarty with your advice I'm earning hundreds of thousands of Roo some of them tell me that they're earning thousands of real life dollars really if you're watching this you can do the same thing step one to take commissions on Roblox is to build a portfolio for yourself you build a portfolio by creating a lot of work so if you're a builder make a lot of different builds if you're a modeler make a lot of models in blender if you're a scripter make a lot of different systems in Roblox studio with great functionality and utility once you build up a good amount of work you can then go to a site like card and create your own portfolio site where you can showcase all of the work that you have just created you can put images contact information and all the details people need to hire you for Commissions in your portfolio second promote yourself the second step is to get on social media platforms the best one is X but you can also promote yourself on Discord YouTube and the Roblox Talent Hub I recommend that you focus most of your effort on X the reason there's the most professional developers there and in my experience you're going to get the highest paying commissions on X it's also a good place to build out your brand because it's a very public way to show your work whereas somewhere like Discord it's a bit more private and it's not like there's a search bar on Discord to search for different users now once you choose the places you want to promote your commission work the key to succeed at it is to post as much as possible and also prioritize quality and consistency to even get noticed on social media you need to post a lot post your work all the time maybe send out a tweet of a build you made today for example you could say hey I just made this low poly cabin in in Roblox Studio but it's important that you make sure that you promote your commission work in every tweet make sure to also say in that tweet hey if you want to get work like this reach out to me in my DMs or on Discord and there you go now you also heard me say that it's important to post with quality and consistency you need to show your work in its best light so make sure that your posts are well formatted ensure that your Roblox Studio lighting looks good and make sure that you present yourself professionally and then post with consistency keep posting and continue with perseverance even if you aren't getting the level of attention you want right away trust me if you keep going you'll start to see commissions raining into your DMs eventually keep going and believe me you will reap the rewards in the end now we've talked a lot about commissions but that's not all there's other ways to earn from your Roblox development skills that a lot of people don't even know exists that means you could do very well in these because nobody's doing them second method sell your assets on a website so taking commissions is about taking oneoff orders but what if I told you you could make a low poly tree pack put it out there on a website and keep selling it forever and earn money while you sleep that's right you can do that selling your assets on a site allows you to create your own store and get sales even when you aren't sitting at your computer if you're watching this I'm sure you can see just how powerful this could be if you do it right you can do this with sites like clearly death which lets you start selling to a global Marketplace of Roblox developers next you can make your own site there's places like gumroad which let you sell your Creations through your own site that you control unlike clearly Dev people aren't going to see other people selling assets on your s but that also means that you're on your own when you promote your stuff when you sell your stuff on public marketplaces like clearly Dev they promote you on their site but if you create your own store and sell your assets independently on a place like gumroad you're on your own for that but no matter what you will have to promote yourself in some way whether you're on clearly Dev Gum Road or another way to sell your Roblox development assets I recommend that you promote yourself on social media no matter what I've explained some great ways to sell your Roblox development assets to other people and I've told you exactly how to start promoting them now all you have to do is start creating assets put them on a website of your choice start promoting and watch those earnings come in Imagine posting a pack of realistic rocks you created in 20 minutes in blender on clearly deck and then then you make a few posts on X and when you wake up in the morning you check clearly Dev and you see five orders have come in for $10 a piece and you realize you just made $50 in your sleep from your Dev assets imagine how far you could take this with your skill maybe you're watching this and you want to do scripting building modeling UI animation or another skill no matter what skill you choose you can sell your work now you've heard me explain how to sell your Roblox development assets to earn from them now I'm going to share with you one of my favorite ways to earn from your Roblox development skills that almost no one knows about ready method three is to make Dev content the method I'm about to teach you is not just a way to earn from your Roblox development skills this is one of the biggest opportunities in Roblox history this is not just about sharing your work it's about building your brand growing your skills and connecting with an audience that can take you and your projects to new levels Dev content is how you show people what you're learning in Roblox development whether that's through tutorials Challenge videos or simply sharing insights on your journey it's how you attract players pull in more commissions and build an audience of other developers who want to know more about what you're doing but what exactly is Dev content Dev content is any content centered around Roblox development and it can take many forms first is tutorials where you teach skills like scripting building modeling or gfx and they can range from beginner Basics to Advanced Techniques Challenge videos are a popular type like making a game in 24 hours or six devs make a game without communicating Dev commentaries offer insights into the world of commissions ways to monetize your skills and strategies to improve as a developer and finally there's devlogs that give updates on your projects show your journey and progress in creating your game and even promote your game and build an initial player base now the huge advantage of Dev content right now is the limited competition and untapped potential many YouTube niches are way overcrowded but Dev content still has space to grow meaning you can make a name for yourself much faster here than in almost any other genre on the YouTube platform I've seen channels within our community hit 100 500 or even thousands of subscribers in a few months by simply starting to post Dev content Dev content typically falls into one of two main types educational content and entertainment content educational content is where you teach your viewers through tutorials or Dev commentaries like what you're watching right now whereas entertainment content is more about challenges and fun spins on development most of the time understand most YouTube viewers do not come to learn they want to be entertained so if you're looking to maximize your views focus on entertainment Style videos like challenges but if you're passionate about teaching educational content can still do very well especially when you bring your unique voice and style to it you can even combine educational and entertainment content to create edutainment for example in my easiest beginner guide to Roblox scripting I combined humor story elements and a strong motivational tone to keep people engaged well they learn that guide is now the number one scripting guide in the world with over 3 million views so edutainment is powerful because it keeps viewers engaged while they're learning making Dev content is not just about views it's a way to build your reputation and and create valuable connections with Dev content you're networking every time you post every time someone comments and every time you help someone solve a problem it's open doors for me to collaborate with some of the top Roblox developers and content creators out there you might even get invited to work on projects or take commissions from your audience and if you grow a strong enough following you're also creating a future fan base for your own games make Dev content now you're watching this because you want to earn money from your Roblox development skills and luckily making Dev content is one of the best ways to earn from your development skills ever discovered well we all know you can make money from ads on YouTube it does require you to reach 500 subscribers and 3,000 watch hours but it's not the only way or or even the biggest opportunity to earn from your Roblox development skills and knowledge through content creation understand when you become a Dev content creator your Dev channel can become your core brand that you use to promote your games attract high paying commissions sell assets and even offer courses to teach your audience more imagine creating a full high value modeling course that expands on your tutorials on how to make low poly models you start promoting this in some of your videos and then you notice your first sale come in $50 from one purchase on your development course and then you see more and more sales pour in each day and you start earning thousands of dollars a month from teaching other developers see people who love your content are more likely to buy from you because they already trust you as a teacher you can earn money not just from YouTube but from every corner of your influence as a developer and content creator I have earned tens of thousands through this method if you have any interest in development just start you do not need to be an expert do you understand that if you're a few steps ahead of a beginner you're already enough of an expert right now now to help someone who's just starting out the biggest barrier is simply taking that first step and committing to it yo want to get my blueprint that took me to over 100,000 subscribers and tens of thousands of dollars earn from my Dev content just click the link in the top of the description right now enter your email and I'll send the guide straight to your inbox now that you've started to earn from your Roblox development skills it's time to take the final step towards Roblox success using those earnings to fund your own projects and pay developers to bring your vision to life the biggest success stories on Roblox come from the developers who create their own games not those taking commissions or working for others while those paths can work making your own games is always going to be the most rewarding and impactful way to succe ceed on Roblox it's time to step up as the game owner the one in control focus on your core skills then commission or collaborate with other Developers for tasks outside your expertise or learn the essentials you need to make your project a reality you don't need to master every skill just building and scripting can make an amazing project on their own and of course with basic knowledge of UI animation and other skills to fill in the gaps if the foundation of your game is strong you can work with simple assets and still create something awesome now you're probably asking okay smart I get it I should make a game but what game should I make here's my answer don't start with complex projects this is a trap that too many new developers fall into instead start with simple games that are quick to develop like a simulator Hot Potato freeze tag or a quality Obby simple games are powerful they allow you to complete and release something fast earn Roo and get real players in the door now learn from my mistakes remember the story I shared earlier about volt gaming Studios now I'm going to tell you the rest of that as promise we were aiming too high we're making things overly complex and focusing on making a group and managing a team rather than just making a game people would play We Lost valuable time and momentum and it slowed down our development careers by years I'm telling you this so that you can avoid the same pitfalls be pragmatic not idealistic many developers will tell you that Games should be purely passion projects but as a beginner that's not usually sustainable passion has its place but strictly focusing on passion is not a reliable strategy when you're just starting out and have limited resources what matters most in the Roblox Market are results players and Robo when you shift your focus towards these goals everything else falls into place by focusing on results you'll make games that attract players and generate Revenue rather than pouring months into a dream project that might not connect with Players Once You release it as I always say that's why most Roblox devs quit they try to make something complex and they usually lose motivation and if they do release it the game often fails Because by the end of that long development process people might not actually like the game it's just the truth about development on Roblox so make simple Games first this has become a mantra in our community because it's so true never make your dream game as your first project never make an extremely detailed or complex game as your first game starting simple will help you improve your skills as a Roblox developer much faster you'll feel accomplished because you're Rel ining games and learning not getting bogged down by endless complexity a simple game can even bring in significant earnings quickly if you dive into more complex projects they could take months or years to finish instead release something simple in a week or better yet release a game in just a few days this builds momentum gives you quick wins and sets you up to create better bigger projects in the future don't start by trying to make the next Brook Haven start with a simple roleplay game with one building don't go for the next blade ball make hot potato skip the next jailbreak and make a tiny prison with a small town start small release quickly and monetize your work use the earnings to fund your bigger projects down the road and by then you'll have the resources to pay developers expand and truly grow your Dev career so it's it's time to ditch the waiting and the overthinking the key to getting started with creating Roblox games is to make simple Games first you don't need a massive complex game to show off your passion you can start with small achievable projects that still showcase your love for development and the best part these projects can make you money so remember this just start start where you are with what you have and what you know right now if you're watching this video you already know the steps you need to take to get started and make some great games so stop waiting the clock is ticking and your players and bank account are waiting give them what they need and start building a career in Roblox development that you can scale up in the future so you've journeyed with me through the essential steps to becoming a successful Roblox developer we've talked about choosing a core skill be it building modeling scripting or UI design and dedicating yourself to learning and mastering we've explored how to monetize your skills through commissions asset sales and making Dev content we've discussed the power of making your own Games Starting simple and building up in complexity over time remember my story about volt gaming Studios we aim too high too fast and it slowed down our progress don't make the same mistakes start with small projects learn from them and use those experience expences to fuel your growth whether it's creating Dev content to share your journey and build a community or launching simple games that Captivate players every step you take is a building block toward your ultimate success in development I believe anyone watching this video can become a very successful Roblox developer so just start the most critical piece of advice I can give you is to just start stop overthinking stop waiting for the perfect moment and stop doubting yourself please use what you have where you are and begin your development Journey today you know everything you need to do the entire path you need to take to become a successful Roblox developer each simple game you create each piece of Dev content you share and each skill you learn brings you one step closer to your goals by focusing on what works creating value for players engaging with the community and continually improving your path you'll find that the barriers you once faced begin to crumble you'll gain confidence build a portfolio of great work on Roblox and maybe even create that dream game you've been envisioning for a long time so are you ready to take the leap the Roblox Community is waiting for what you have to offer your players are out there and your potential is Limitless it all starts with that first step just start and let's see where your Dev Journey takes you you can watch the video on screen now to learn even more about how to become a highlevel Roblox developer enjoy and continue to learn grow and improve as a developer every day",
      "duration": 1719,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "99C5K1cdql8",
      "title": "The Complete Guide to Lighting in Roblox Studio",
      "transcript": "i'm going to teach you everything about lighting in a roblox studio so you can make your games look a hundred times better first you need to make sure that you can see the properties and explorer windows which look like this so the properties window looks like this and if i select a part here you can see all the things in it so that's what the properties looks like and explorer it looks like this uh these might be combined like this under the same window so you'd have to click between them with this little tab selector thing at the bottom of the box but i recommend just having your properties right here in one tall window and then your explorer right next to it to the right if you can't see these make sure to click view and then make sure that properties and explorer are both grayed out in dark here they're on the very far left of the view tab in roblox studio so make sure both of these are dark gray and that means that you can see them somewhere on your screen if you don't just check all the little tab thingies as i said like these cycle through them make sure that they are visible but if you double click these they should show up somewhere on your screen now lighting is a service that is at the very bottom of explorer so if you have a lot of stuff already in workspace just go ahead and scroll the top close that off by clicking the arrow to the left of it and lighting will be near the top of explorer if you close workspace otherwise it'll be near the bottom so to see all the properties of lighting you need to select it and now we can see all the different details of lighting and all the different things we can change except for effects which we'll get to later so make sure to watch to the end so you don't miss some amazing lighting effects you can add that honestly make your map look so so good without these my bills really wouldn't look that great now the best way to learn what each of these properties does is to just experiment with each one and figure out what looks good on your map specifically but i'm going to show you guys what each one of these does in order and i'm going to show you a good way to gauge these and pick a good setting for your map so the first one is ambient and this is basically the color of your shadows mostly but it also kind of affects the rest of your map especially indoors areas it kind of just affects the main color that you see so most change you'll see is shot in the shadows when we change it so if we make this lighter you'll see the shadows get a lot lighter um so i like to have this just kind of balance this out to how dark you'd like your shadows to be but we are going to be changing some things later that change how the shadows look too so make sure that you uh you might have to come back to this and change it later once you change other things but i just like to set this kind of dark i like my shadows to be very defined and then i like to have a slight purple glow to it so uh this purple glow kind of just makes it look um a lot of builders do this and you can just kind of pick a nice color that you like and i think that looks pretty good so there we go now the next one is brightness this basically changes the brightness of everything that you see except for the shadows so this doesn't apply a whole haze to your screen like it would in the settings of a video game but this actually will change how bright the sunlight is on your map mostly so if we go ahead and change this we can see what it does so as you can see it's changing how the light hits but it does not change the brightness of the shadows at all really so what i like to do is i i like to set this basically as high as i can without making things look too shiny sometimes if you have white on your avatar and this is up too high it'll make that start to glow but i'm going to show you guys a way to fix that later in this video if so go ahead and set it pretty much as high as you want i just wouldn't put this all the way to 10. i'd probably keep it under around four just to be safe so i'm gonna do a 3.3 all right so next is color shift these two properties they don't really do much so what i like to do for color shift bottom is just leave it and on color shift top we can actually add a slight bit of yellow and what this does is it just kind of adds a little bit of a yellow glow to your map kind of like real life just ever so slightly it makes a little bit more realistic and just brighter looking i don't know exactly what it does but adding a slight yellow glow to color shift top will kind of improve things makes it look a bit more realistic all right and now is diffuse and specular which both of these just affect how much everything kind of reflects the sky and it has a bit of a blue tint or whatever color your sky is is affected based on that so it adds a bit of a reflection to different things and it makes it look a whole lot more realistic now most people don't really do this on low poly maps but i actually really like it i would tone it down a little bit on the default new base plate it does have it pretty high at one so i wouldn't have that all the way at one necessarily i probably turned specular down to around point six and diffuse i put that at about 0.7 already this is actually looking quite a bit better now next is global shadows all this does is it turns off basically all the shadows in your game or on turning this off can prove performance but you can add a ui to your game that lets players turn this off on their own but it's really up to you if you want to have this offer on if you have a lot of objects in your game the best way to do it in my opinion is just to leave it on and turn off shadow for as many things as possible that don't need it now next is outdoor ambient and outdoor ambient basically is really similar to the other ambient basically it doesn't affect the shadows so much but it affects how the outdoors look in your game in general so for this i generally usually leave this just how it is but if you want you can use this to add a bit of a change to the general color of the outdoors in your map and maybe we'll add a slight bit of orange to that just a little bit not much now that did make things a lot brighter i'm not really sure if i want that yeah i'm gonna undo that but you guys can change it if you want it's really up to you lighting is all about adjusting things how you want in your map so next is shadow softness so shadow softness basically affects how crisp the edges of your shadows are and if we turn this all the way down you'll see that it gets very very jaggedy basically there's a certain minimum point where it won't look so jaggedy and i would say the the minimum you want to have it at is around 0.12 which is where it starts to get not so jaggedy and it's like the crispest you can have it without it getting so jagged you might be fine at 0.00 or so but anything below that just looks way too jaggedy but depending on how cartoony you want your map to look you can turn this up more soft shadows make it more cartoony now next is the lighting technology what lighting technology does is it lets you choose the mode of lighting in your map so shadow map is the default and honestly it's what i recommend using shadow map has pretty much everything you need has the very nice shadows everything else about it is pretty nice also but there is also future with which is just an upgraded version of shadow map you won't notice much difference on future but it can add a lot of lag to your map if you have a lot of lights and parts but basically what future does is adds a really unique reflection to part when you have a light above them especially indoors it doesn't always affect it but it will add a bit more detail to your lights and a lot of parts and a lot of lights will mean a lot more lag on your map if you have future enabled compatibility is like classic lighting it's very gray and dull this is the most performant one but it's not that much better than voxel it also has very smooth shadows as you can see so voxel is basically the upgraded version of compatibility it has the very soft shadows so if you want the most cartoony look this is the one to go for but just like compatibility it makes everything just slightly more dull so you will have to change all of the color settings again for your map if you choose to change this now i'm going to leave this at shadow map since that's honestly my favorite most balanced mode and it just looks very nice on most maps and it's pretty well performant all right next archivable basically saves whether or not you change anything do not turn this offer on on anything we'll screw things up in roblox studio usually unless you know what you're doing i wouldn't change that clock time basically changes where the sun is in the sky it's about it what time of day it is so if i turn this down it'll be much earlier in the day it'll be night time but you can adjust this just to make it look as good as possible or you can set up a day night cycle script in your game which you can find those in the tool box if you don't know how to script they're pretty easy to find just watch out for viruses i think honestly that looks really good because the way that the sun hits the waterfall and everything now geographic latitude it lets you adjust basically where you are in the world so just like real life there's different time zones and stuff so this will basically change the location of the sun in different ways and this can really change the way things look a lot so you can have stars during daytime with this kind of and it's just a really interesting feature i don't really tend to use it that much but it can be pretty cool now if you guys want a better way to change the location of the sun in the sky i highly recommend getting the set sun plug-in so what this does it lets you basically just drag around the sun which is much better than dragging these dumb sliders you can actually move the sun wherever you want it now i think that is a very good spot i think i'm going to leave it at that it looks beautiful right there looks very realistic very very amazing right there now to get this plug-in i have a link in the description for it it is not in the plug-in library so you're gonna have to use the link in the description to get to it now i do need to actually point out that you need to have your studio graphics up to see most of these changes in studio so go to file studio settings rendering and then editor quality level and change that all the way up now if your computer slows down a lot when you do this turn it down to the highest level where it still works well so for example if it was not good on 21 you could turn it down to like 14 and if that is better then that is gonna be good enough but make sure that you're in a simple place to work on your lighting if you're working on your whole game with thousands of parts in it and you're trying to edit it that that would be part of the reason why turning up the editor quality level would slow it down so you want to make sure that you move over to a place that is simpler to work on your lighting and then just move it all over copy it all over to your other place once you are done setting up the lighting so i'm gonna set this right back to level 21. all right so the last setting on our list is exposure compensation and what this does is it basically is just very similar to brightness except it changes the brightness of everything and it's very direct on the lighting and i like to turn this up just slightly on my maps just to give everything a little bit more brightness to it looks very nice with that added on about 0.31 is what i'm gonna do all right now in lighting you can also add in different cool effects that will add extra customization to your lighting and on the new roblox baseplate by the way it comes with default lighting effects that are okay but really not that well set up that's why this map already had some effects on it to see the effects that are already in your map go ahead and open up lighting with this little arrow and we can see all the effects that are in your map so i'm just gonna to get a clean slate i'm gonna delete everything except for sky by holding control and just selecting each thing and there we go so to add a new effect we just have to hover over the lighting service and click this white plus right here and and most of them will show up at the top here but for some reason not all of them show up so you're gonna have to search for effect to see some of these but that's okay i'll let you guys know when we have to do that so first is color correction effect so what color correction effect does is it lets you add all kinds of modifications to the color and saturation of your map and the overall vibrance i use this to crank up the colors in my map and make it look extra cartoony and bright i've seen a lot of games use this for filters and effects like black and white too but the saturation improves the darks and lights of your colors making them stronger and just making everything more crisp and defined so i highly recommend turning up the saturation right here just a little bit especially if you have a cartoony map if you have a more realistic map you might actually benefit from turning this down but i'm going to turn this up to 0.2 now as you can see the colors really pop now after doing that so contrast will change the darks and lights of your colors and it'll just make everything more crisp and defined so i'm going to turn that up to around 0.04 now as you can see all the colors and darks and shadows are much stronger and just more crisp and defined alright so brightness is another way to change the brightness of the map but this changes the screen's brightness rather than the actual environment's brightness so as you can see it doesn't add glow to anything so all it does is just adds a tint to your map and it isn't it doesn't affect lighting the same way that the other properties that affect brightness do that makes sense so i usually change this slightly if it helps by turning it up like by 0.2 or 0.3 but otherwise after that it's really not that useful unless unless you're scripting and using this for something very specific now i do want to mention you can actually have multiple color correction effects if you want to layer on effects or if it's not enough for you for some reason but that is there if you need it alright next is the bloom effect gonna go ahead and add this by clicking the white plus again and going down to the bloom effect and selecting it so i can see the properties all right so bloom basically increases or decreases the bloom or glow you see around objects that have a bright sun reflection on it or if it has neon material so if we go into the cave right here and we see these different crystals i have which are not good crystals they're just wedges but it's not really necessary to use this effect unless the settings that you already have are screwing up the bloom on everything so that your map is glowing or if neon is just way too strong for you as it is on most of your part but otherwise i don't really recommend using it the intensity will just turn down the sensitivity the intensity of the bloom or turn it up so turning this down slightly can make it look a little bit better if you don't like it so bright and then the size will just change the size of the effect that you see on your screen and it can look pretty nice to actually turn up the size and threshold basically takes the minimum brightness of a surface to show bloom on it so if we turn this down all the way you'll see that the sky gets very very bright and it has bloom on it and we do not want this so you want to have this high enough where things are not starting to get bloom when you don't want them to and by the way if you don't know bloom is just the glow effect around an object so i'm going to delete my bloom effect since i really don't need it but you might have a use for it in at some point in the future next is blur effect which basically is not that useful for your default lighting it just smothers everything and makes it look bad the only time when it's useful is it if you want to open a gui and show blur in the background or for other effects involving ui but otherwise i really don't recommend using it unless you need it so as you can see everything's just blurry and i i don't want that on my map some people turn this down really low and they're like oh yeah that looks good but really it just looks it looks like i have bad vision or something i i just don't like it so don't use blur in my opinion all right so next is depth of field so we're gonna have to search for this one so just again just type in effect and you will see depth of field in here so depth of field right there just go ahead and click that to add it and what depth of field does is it will let you make things in the distance blurry which will make your map look more realistic but i just wouldn't have it too strong because it makes it look terrible and i've seen some people misuse this feature and it's just not good so by default this looks really really blurry and to fix that you can just turn up the focus distance turn the near intensity to the zero and turn up the in focus radius honestly just turn up the focus distance and in focus radius as high as possible and then the far intensity for some reason it's it doesn't work that well so like if it's over a certain number it will get more blurry and if it's under a certain number it'll be less blurry so i don't really recommend using this in most cases unless you have a huge map so i'm going to remove this all right next is a really good effect i know we've been having a lot of bad effects all in a row but trust me this one is good so sun rays sun rays effect will whoa there you go see it adds sun rays it had lines of light coming from the sun and this can be blocked by trees and things if i move behind this tree they'll be hidden there are some properties on this so if we go ahead and select sun rays we can go ahead and see what it does so if we turn down the intensity it'll just make it a lot less bright and if we turn down the spread it basically just changes the size i recommend just experimenting this finding out what looks best on your map i like to have it pretty high on the spread and pretty low on the intensity so something like that usually looks pretty good alright so the next effect is called atmosphere and this is an advanced kind of fog oh and i forgot to show you guys fog in the lighting properties i'll show you guys that first after that we'll get to atmosphere which is incredible so fog basically the the reason why i couldn't show you this before is because when there is an atmosphere already in the map you will not be able to change the fog when we don't have an atmosphere we can change it so fog is exactly as it says and we can change the radius of the fog so by default it's very very high so you're going to be able to see it i like to turn this down to something near a thousand and then i just change it as i need it so if it's too too close then you just turn it up to two thousand maybe three thousand and it's a good idea usually to make this the color of your sky but the main problem that fog has is yes it will look amazing right now during the day but by the time we turn it to night it is not going to match the sky now this can give you if this is what you want it to look like it's nice but the nice thing about atmosphere is it will match the sky at all times of day and you don't have to change the color manually so i recommend messing around with the distance on that if you want to use fog but i really would not recommend it after roblox has already added atmosphere which is way way better if you test it out and it's a lot laggier on your computer i guess that's a good reason to use fog but in general i don't think atmosphere has that much more lag so i'm going to go ahead and click the plus and add atmosphere in here and as you can see atmosphere it is based on the color of the sky all the way around so as you can see it gets more white as it goes down just like my sky now if we select atmosphere we can see all the properties so we have a density property which will change the distance you have have it visible offset basically will just kind of change like where it's visible so it'll be less strong directly in front of you if you turn that up but it'll be spread out more or something like that i don't know exactly what it does but yeah just experiment with this and find the best look for your map now the other properties down here a little bit harder to explain but basically we can add a haze to this and with the haze it will kind of add like this nuclear wasteland effect to it change the color of this we can choose the color property right here by clicking the square there let me just drag this over here and we can change the color of the haze now there aren't that many times when you're really going to want to use haze however it does look really nice in the mornings in your map so it does look nice when you have a day night cycle and you want to have it kind of change and show the fog really in a really advanced way now glare will just add a glow to that haze so as you can see it'll add a bit of a glow and we can also change the color of the glow by changing the decay property now i usually like to have this kind of orange so i actually kind of look at like how the haze looks on this map so i'm gonna leave it on actually next is clouds so clouds is an effect that does not actually go under lighting it goes under terrain and terrain if you don't know where it is we just have to go to the very top of workspace so it's in the workspace service and if we go ahead and open up workspace we will see it at the very top if it isn't there you're gonna have to scroll with this thingy all the way to the top and change the properties of terrain we can click on this of course and by the way i do recommend turning on decoration because it does look nice with lighting but it adds grass blades if you don't know how to do that but anyways to add clouds we're going to go ahead and click the plus and type in clouds now these clouds look amazing they move and they're just really realistic they add a ton to your maps if we select the clouds we can actually see the properties of this so at the very bottom we can change the color and honestly i kind of recommend just leaving this as it is but if you want you could make your clouds more yellow or red even some i guess i'll make mine a little bit more orange so what the cover does is it changes how much of the sky that your clouds cover so if we turn it all the way up it'll be very very covered so it'll be like a fully cloudy day and if we turn this around like 0.5 it'll be partly cloudy and generally i just like to turn the cover up pretty high and then what density does is it turns down how strong the clouds are and it makes it kind of fade a little bit more and so what i like to do that's why i like to have the cover up because then i can have some very faded clouds so there's lots of clouds but they're very faded oh and also i didn't mention but this also affects the sun rays and adds a really cool effect to them makes them even more realistic all right so for this map i think that looks pretty good just minimal cloud now honestly clouds is probably my favorite effect of all of these it looks absolutely incredible and i'm amazed that this is even possible on roblox because usually we don't get nice features like this it's like something you see in unreal engine but now lighting is just one piece of the puzzle for making amazing builds and if you want more advice on how to make your builds incredible click the video that's on screen to see the crucial advice on exactly how the best builders on roblox come up with ideas fast for their build you are not going to want to miss this see you guys there",
      "duration": 1283,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "W337AL7n3dc",
      "title": "The ULTIMATE Blender Modeling Guide for Noobs! (Make Assets For Games!)",
      "transcript": "imagine this your Roblox game filled with jaw-dropping assets trees buildings props that no one else has the secret to making that happen mastering blender in this video I'm going to teach you how to take control of your creative power step by step even if you've never touched 3D software before by the end you won't just understand blender you will feel Unstoppable because you'll be able to make anything you want so if you ever wanted your game to stand out but didn't know how to make professional quality assets or maybe blender looked intimidating with all those buttons and panels well stick with me and I will show you why it's not just easy to use blender it's fun plus we're going to create something cool together that you can use in your game immediately so here's the plan first I'm going to walk you through downloading and setting up blender then we're going to break down the interface so that it feels like second nature you're going to learn the essential controls how to create a simple low poly tree asset and Export it to Roblox and don't worry I'm going to keep things straightforward so if you're serious about leveling up your Roblox game development skills this is your sign to go all in let's build something amazing together all right so first we got to download blender and the cool thing about blender is that blender is a completely free software but it's incredibly powerful it is one of the best 3D modeling softwares ever created and you can make literally anything in it from the simplest low poly Bush to a massive Kingdom but for our purposes in Roblox development we're going to start by learning how to make simple assets so let's download blender now go ahead to blender. org you can click the link in the top of the description to visit blender right now and then you're going to see this and I want you to click download right below the title of the latest version don't worry if you're watching this in the future after blender 4.3 everything stays 99% the same and this tutorial is going to work for you no matter what so click download then check that it's the right type of file for your system so for me I'm doing this on a Mac with apple silicon so it got my version right but you want to make sure if it isn't the right version you can go ahead and click this and you can grab the correct one for your system type so go ahead and click download and it's going to download your system from there you'll want to open the file that gets downloaded to your computer and go through the install process all right so once you install blender on your system go into the blender app from there you're going to see this panel you can go ahead and click save on this don't change anything and then you can click general or you can just click back here and it'll open a new general file just a normal blank file you'll see here that you will have the default Cube spawned in and selected in blender the default cube is famous it's a Hallmark of blender it's something that every model you start with you're going to see so let's go over what you can see here so this area that you can view through is called the 3D viewport this is your playground everything you model texture and tweak happens right here this is called the outliner think of it a bit like the Explorer panel in Roblox studio if you're familiar with it it lists every object in your scene so that you can stay organized then we have the properties panel down here this is where magic happens materials modifiers and all the tools you need are right here then we have the timeline so we won't use it much today but it's great for animating if you want to learn how to do that later look around the interface get comfortable you don't need to master it all right now just follow my lead and piece by piece it will all click in a place for you so blender is all about speed and flow so let's lock in the key commands so first is your middle Mouse click if you're using a mouse right now if you go ahead and press and hold the middle Mouse you're going to look around the viewport like I am right now if you're using a trackpad like me on Mac you can just use two fingers to slide around next is G so g is how you move objects or vertices so if you press G you can go ahead and move this object around and then click to confirm we can hit command or control control Z on our keyboard to undo that now something cool about blender is that when we hit G and move we can actually rightclick instead to cancel the operation and put it back where it was you'll see that blender has a lot of these very cool features that make using it a lot simpler and snappier than you'd expect it's a very fun program to use because it's just so easy and magical so let's continue learning how to use this amazing piece of software for ourselves so the next thing I'm going to show you is the S command s lets you scale selections up and down now left click and right click do the same thing here when you left click it will confirm and when you rightclick it will cancel next is R same thing left click to confirm and rightclick to cancel the operation so as you're using the three modes that I just showed you you'll have times where you find that using it as it is doesn't really work how you want okay and don't worry there's a way to fix this so by default the way that rotation works is that it follows where you are looking at it from in the viewport and this isn't always what we want right and the same thing happens for scale scale by default is uniform right and that also isn't always what we want and finally move is also based upon how we're looking looking at it in the viewport and it's moving on every axis so what do we do to move scale or rotate on one axis at a time x y or Z and also rather than basing it on where we are positioned in the viewport well it's very easy so go back to scale move or rotate you can use any of them and just click z x or y on your keyboard and it will move upon any one of those axes so if you click R and then click Z it'll move along the z-axis which is up and down if you click R and then y it'll move along the Y AIS if you click R and then X it'll rotate upon the x axis cool stuff right and this applies to every single mode so s z and it'll scale on the z-axis S Y and it'll scale on the y- AIS so I've shown you the basic ways to manipulate objects in blender but this is not everything right you probably are thinking well if this is all blender is it's not very good what's the difference between this and Roblox Studio or my game engine or whatever I want to use right well this is not the whole story okay so blender actually has two main modes the mode that we are in right now as you're looking at blender and following along with me is object mode okay object mode is where we can kind of move around objects add in things that you're going to see up here inside of the outliner but if we want to edit one of these individ visual objects we have to go into edit mode so the way to enter edit mode is to click tab when you have an object selected and from there you'll be able to edit the vertices which are these little dots right points in 3D space that's what a verticy is and you'll also be able to edit the edges and the faces so I'll show you how to do that in just a moment but you're probably getting very excited at this point because you can see that blender is very powerful and there's so many ways that you can use it to create very unique things and you can experiment with with different variables in the equation to kind of make a concoction of your own blender is just an amazing program and I can't wait to show you even more so stick around for the rest of this video so that you can Master blender with me one step at a time because I promise you it will change your Roblox career forever all right so the cool thing about the keybinds that I showed you is that you can use them in both object mode and edit mode to change your objects to look how you like so I'm going to select one verticy and click G all right and you're going to see that that it moves but you're going to notice that you have a lot more power when you're in edit mode edit mode allows you to edit individual vertices and add a lot of detail to your objects that just isn't possible in object mode all right let's go over a few important things to understand about 3D modeling in blender in the top left you'll see a menu that lets you select vertex select mode Edge select mode or face select mode so these coincide with the keybinds one two and three on your keyboard so you'll see that if you click one two or three it'll swap between each mode if you click two you'll see you can select an edge pretty cool right if you hold shift you can select multiple edges now let's hit three and try moving around a face if we click and hit G we can move around each face on our Cube cool right so now you know how to move around any part of your object you're already starting to see your blender skills improve so imagine how far you'll get if you watch this video Until the End let's keep going all right so now that you know the basics of object mode and edit mode in blender it's time to make our first asset we're going to create a low poly tree and when we finish this up I'm going to show you how to import it into any game or project you're making on Roblox so next step is we're going to hit tab to go back to object mode after that click on the cube in its weird shape that we just turned it into and we're going to delete it so click X and then click delete and that'll delete your Cube now we're going to add a new object and this time we're not going to add a cube we're going to add in a cylinder so that we can make the base of our tree hit shift a and then go down to mesh and then choose cylinder now do not click anywhere else this is very important because we have a menu down here that will allow us to make this more simple and remove the amount of polygons that it has you'll notice it has a lot of Faces by default and that's not going to look right on a low poly tree so you can click this drop down and then go to the vertices and choose the amount that you want so I'm going to turn it down to 10 vertices that'll give us a nice well-rounded low poly tree that kind of shows the polygons but also has a bit of detail to it as well now hit Tab and go back into edit mode from there click three on your keyboard to go into face select mode then hit s and hit G and then Z let's move that down a little bit now we're going to extrude this this is basically going to extend it out click e to extrude move your mouse Up Click to confirm and there you go you just extruded the part of your trunk now we're going to hit s to scale and then we're just going to extrude this one last time hit e to extrude and then s to scale there we go let's hit tab to kind of look at this and it's looking pretty cool right now something we can do is we can go to Edge select mode by clicking two and then we can click shift Z on our keyboard this will let us go into x-ray mode which is a way to see through our object and select through our object so I'll show you what that means right now click and drag a box around one of these little circles in the trunk of our tree and now if you hit G you're going to be able to move around different parts of the tree you might want to add a little bit of kind of movement and maybe a little bit of rotation as well to vary your tree a bit and make it look a bit more natural but you don't have to do this it's just a stylistic touch I personally want to add so click R to rotate that and there we go looking a lot better so now I'm going to go down to the bottom here I'm going to select this I'm going to click R again and there we go so it's looking it's looking more natural on the trunk I'm actually going to go to the side panel here you'll see we have a lot of different tools down here I'm going to go down to the smooth tool I'm going to press and hold and I'm going to drag to randomize you can actually randomize your vertices a little bit with  this which can make it even more varied you'll only want to do a little bit you'll see if you do too much it's going to screw everything up so be very careful with this just a super subtle touch to add to your tree yeah so it doesn't look perfect but I think that's that's okay so one thing we can do before we move on to making the branches and the leaves in a second here is we can move around these segments of the trunk and choose where we want them to be so you can do this by clicking G twice so click gg gg and there we go now you can kind of slide these edges along the trunk which is really neat if you ask me all right finally let's make some simple branches so go ahead and click e to extrude on the top here and there we go now we're going to do shift Z click two to use Edge select and then drag over this so we do run into Kind of a Funny issue here when we extrude this right because now what do you do to make the next Branch well we just do this we just select this and then you can click extrude you'll want to select this but don't extrude straight out from it the reason is that it's going to be kind of a lops Ed it's not going to look exactly how you want so the way to fix this is to duplicate these edges instead click shift d and then go up a little bit or down and just click then rotate it into the position you want the branch to start from maybe scale it a bit too and then after you're ready click e to extrude it outward now it's going to be nice and uniform and it's going to look how you want rather than being all lopsided you'll notice that at the edge of this the face isn't going to show up this is because what we extruded from only had edges it didn't have a face made there's a simple fix for this click F on your keyboard and you can turn it into a face instantly problem solve but it isn't actually necessary to have a face there you can do it if you want but in general in 3D modeling we want to have as few faces as possible so I would delete that I'd even delete this one so you can click X and then only delete the face I'd also do that on the bottom of your tree as well cool so make a few more branches and then we'll move on to making the Lea so we can go ahead and duplicate this go ahead and go into face select hit shift Z to go into x-ray mode and select the middle of this to select all the faces from there we'll want to click shift d and then rotate it on the z-axis and we'll want to look at this straight on from the very top of our object to position it so you can go up here to actually change the position to look straight down directly at the object by clicking this you can click the top z-a bubble here and there you go and we can position that nicely in there then from there we'll rotate just a little bit on the x-axis and maybe on the Z we'll put it we'll kind of put this over   here make it look nice and balanced there we go so this will work for demonstration purposes you can add as many branches as you want you can make this however you like you can even add subdivisions to these branches by clicking controlr or command r on Mac and then clicking and you can scroll up and down to change the amount of subdivisions and these will kind of make a split inside of your branch and you can kind of make the branches a bit more bent which is neat it gives a good look but not what I'm going for I want to keep things simple for what I'm doing here all right so the final step since we we were doing some extruding on some edges it's very important that you make sure that your normals are correct this is something you're going to have to do a lot in 3D modeling your normals are basically which way the faces are pointing so the funny thing about 3D modeling you're going to find is that sometimes you'll make an asset you'll import it into studio and it will look weird the faces will be reversed and it'll be kind of see-through it's really weird but it's easy to prevent this so the first thing we want to do is we want to change our view so that we can see which way the normals are pointing so go up to this drop down right here choose face orientation and you'll see that some of these normals are pointed the wrong way because we extruded out from some edges rather than faces so the normals didn't really know which way to point and they went the opposite way so if we were to import this into Roblox Studio as you can see on screen everything will be reversed and it won't look how you want keep this in mind when you're 3D modeling always make make sure that you check your face orientation before you export and recalculate normals if needed so just click a and then click alt n or option n on Mac and go ahead and choose recalculate outside and you'll see that your normals will be made how you want them now it might not always be that simple you might need to use some of these other options sometimes you can watch other videos on that if need be but usually recalculate outside is going to have your back all right I'm going to show you how to make make your leaves so click shift a let's add in an icosphere as it says in blender it's a spherical mesh that contains equally sized triangles basically it looks nice and low poly of course down here in the corner menu if you don't click away you will see the subdivisions option you can change how many subdivisions you want it's very neat so I'm going to do two leave it at the default you could even increase it if you want and I'm just going to move it up here right hit G kind of move it around hit s to scale and this is the fun part right this is exciting because you get to move around these leaves and make them how you want you can hit shift d to duplicate and S to scale looking cool right well I think this is looking a bit too tall I mean height is good I'm 6ot I like having height but for a tree sometimes it's not so good so let's let's move this down here we go all right much better this isn't the Savannah we don't have giraffes eating out of these trees so we're all good so now you might be wondering how do you kind of make these a little bit more deformed or you might like the style they look in right now right it's up to you you have the creative freedom here to choose how you want your tree to look but I'm definitely going to kind of adjust these so I'm going to click three to go to face select I'm I'm going to click o on my keyboard to do proportional edit mode and you're going to love this so if you click G in proportional edit mode it will actually move vertices around what you have selected with it it's really cool it's nice for making things like clouds and bushes and trees like what we're creating right now and there's even more use cases for it and you'll figure them out as you use blender more so if you click G you'll see this circle right and that shows kind of the a that it's going to affect around it so just scroll up and it's going to allow you to grab more of it okay and adjust more of it at a time Isn't that cool so now we'll kind of grab another face down here and something you might want to do is you might want to combine these if you go back into object mode by clicking tab you can actually hold shift and select all of these and then click command J on your keyboard to join them all together cool right in object mode something I didn't show you yet is modifiers these let you add modifiers to your object which kind of manipulate how the objects look go into the modifiers panel and you're going to be really excited when you see what this does okay so go ahead and click add modifier and then go down to remesh you'll see this kind of combines them together it's a bit too high poly right now so we're going to turn up the voxal size and this kind of makes this blob right is it isn't that neat now of course you're going to want to adjust this inside of edit mode in a second here but man isn't that neat how it does that so yeah you can mess with these settings do adaptivity you can also do smooth shading right here if you want I'm going to show you how to do that manually afterwards so I wouldn't choose that option but it's up to you yeah there's other options too right there's sharp and you'll see some of these kind of adjust our normals in a way we don't want avoid using those or make sure that it isn't doing that smooth is kind of cool blocks you making a Minecraft type game well this is the one for you huh oh no I turn that up too high I'm going to freeze my computer huh I turned it up way too high whoa well that's what the M4 Max does on the new Mac so if you if you want a powerful computer I guess go for that oh crap now it's now it's doing it again cuz I'm leaving edit mode all right be careful with what you do in blender especially if your computer is not an M4 Max which most are not at that level be very careful what you do because you can crash your computer with very high GPU load operations like that okay so I'm definitely going to turn that down we're going to go to voxel so voxel looks good to me and we'll just yeah put it on a amount that you like and then we'll start adjusting it within edit mode and see what happens all right so after you like the way that it looks you can apply a modifier and make it permanent by clicking command a while having the modifier selected so select the modifier click command a and there you go I also added a triangulate modifier makes it look a little bit better so I'll also apply that it's in generate triangulate now what I'm going to do I'm going to fix some of the abnormalities I'm going to click M to merge some of these vertices so you can just select them click M to merge and it'll be good to go so now we're going to mess with shade smooth as promised you earlier you can rightclick and you can click shade smooth to shade it smooth but we're actually not going to do that we're going to use Auto smooth kind of lets you adjust how smooth it is so that may look better if you didn't end up doing what we just did which was add that modifier on you can see how that kind of adds a nice effect so the auto smooth wasn't quite looking how I want so I'm actually going to make it shade smooth and I'm going to do custom sharp edges so this is something you can also do if you did the voxal modifier so I'm going to go into edit mode I'm just going to select some edges here and then click contr e and click Mark Sharp that'll go ahead and make that edge sharp and there we go so you can kind of add in some of your own sharp edges kind of add that nice stylistic touch to it but of course you might be thinking well I really just want a super low poly tree I want that super low poly look and you might not even be doing any kind of smoothing at all and that's okay you can just skip this section and go to the part where we start texturing this all right cool so the final thing I want to do is I would like to kind of smooth out our trunk so let's just shade Auto smooth turn it down turn it up see how it looks there we go and it looks good at about that amount so we've done quite a bit here right and I'm sure that it's exciting to have just modeled your very first thing in blender congratulations now it's time to texture it and then we'll be exporting it into Roblox Studio imagine how cool it will be to see it in your game or your project you'll be able to use it you'll be able to place these trees all over the place and make apps out of it let's go all right now I'm going to share with you how to texture your model and then we're going to import it into Roblox Studios so you can put it in your game or project before we do that though I got to explain something to you when you model something in blender you can choose whether you want to just export it as is right with these two separate parts and then color it in Roblox Studio like you would with normal parts and or you can decide if you want to texture the model in blender so if you're going to color it in Roblox Studio I recommend exporting this as separate parts so that you can color each thing individually but if you're going to texture it in blender I actually recommend that you join the two together so first make sure that you apply any modifiers that you have on your objects so that they don't apply to the whole thing when you join them together so just go select and then check your modifiers panel and click command a on any of them that need to be applied so all mine are applied now I'm going to select both of these click command J and bang there we go now that we've done that it's all one model the next step is to go to UV editing mode in blender now we're going to kind of turn our viewport around so we can see this right so this panel will basically show you how you're going to map the texture onto your model there's a lot of different ways to do this and I'm going to show you a really basic way today but you can look into this in other videos to learn more about how to texture your models in more advanced and different way so go to the description you got to download a color palette that we're going to use to color our model you don't have to use one of these but it's a good way to get colors it's popular and it even has gradients so if you want it to be textured as gradients I know that row Builder likes to use that style a lot you can do that I'm just going to leave mine pretty much as just solid colors but useful to have this color palette as it works out really nicely so we're going to use this up here to kind of select the view by which we want to UV unwrap this so it looks like my model's kind of flipped so that's not right I'm going to click shift Z and I'm just going to hit RX 180 and that'll flip it around okay so that's a cool thing about blender I didn't tell you earlier is that you can actually not only rotate objects and rotate them on a specific axis you can also choose the amount of degrees by which you rotate that object so again I clicked RX and then 180Â° just by typing 180 on my keyboard cool right so something to keep in mind there by the way you hold shift and middle Mouse button you can move kind of more horizontally and vertically rather than than looking around the entire object in every different direction all right the first step to texture our mesh is to select it and then go down to the materials menu then click new then we're going to click this yellow dot here and change the base color to an image texture from there just open and then grab the file that you just downloaded from the description and as a reminder just go to the description and download that file and you'll be able to insert it into blender so go ahead and open that up now we're going to press tab to enter edit mode from there you'll see the texture actually populate over here now the next step is to UV unwrap our model which is going to place the faces that we select in our mesh onto the UV unwrapping area so that we can start to map out where we want our textures to go on the mesh I'll show you how right now and one thing I forgot to do is to go into the mode where we can see our textures to change the shading of the viewport so change it to show the material that's this third option right here and there we go you might have to extend this out so that you can actually see these options up here all right so we're going to select the trunk here so just go in here and use the face select mode to select just the trunk you can do that by box selecting these little circles and then if you accidentally select part of the tree just hold shift and click on that face to deselect it once you have only the trunk selected we're going to click U on our keyboard and then choose project from view that's going to un wrap just the trunk onto our UV editing screen so then from there you can go ahead and move this around with the normal blender controls I'm going to place this right here on a nice brown color make it really small so it's just a solid color and not a gradient next we're going to select the tree leaves and you might be thinking Ah that's going to be hard what if I select the trunk on accident while I'm doing it well you're in luck because you can simply click control I or command ey on Mac in order to select inverse which basically means select everything that is not already selected so we're going to go ahead and scale this down and place it on the green I'm going to place it right here kind of on a little bit of a light green just make it extremely small so there's no gradient right because we don't want to pick up this gradient unless you want that style right and that's the cool thing about this texture that we are using it gives you choice so if you want to see your tree in action make sure to turn off wireframe mode so we can actually look at it in the viewport and man isn't that a beauty that is a beautiful looking tree man oh my goodness fix some of these vertices sticking out all right let's see here because this is your first model and it looks great I know this looks better than my first low poly tree so congratulations on making your first model it is time to export it so let's go back to the normal modeling tab right up here and then let's make sure that everything looks right and that the normals are correct so that again as I told you earlier so that the normals aren't flipped so go ahead up here into the viewport overlays menu to check on that and it looks good on my end but if you have any red right you'll just want to go into edit mode click a and then click altn or option n on Mac to then recalculate outside right and if part of it turns red when you do that you'll just want to kind of select the part that needs to be fixed and you can go ahead and make sure that each part of it is correct all right let's export this bad boy so click file export and then choose fbx you can also export as obj I'll explain to you these file types in just a moment so as you're opening up your file menu and saving your awesome model that you just created you want to keep in mind a few settings every time you export from blender so first is limit to selected objects so you'll see that you can actually still select things while you have the file explorer open here and the cool thing is we can actually only export things that are selected so say that you're working on a full-on low poly model Pack full of all the models you're going to use in the simulator you want to create you can select certain ones within your blender file that you would like to export to Roblox Studio rather than selecting everything all at once all right next thing to keep in mind is the file type there's two file types that people who model on Roblox typically use when they export assets to Roblox Studio the first one's obj obj is a lot more simplistic doesn't really allow you to export Textures in the same way and it's a lot more limited fpx on the other hand is the one that I prefer to use if you're exporting a model that you have textured in blender it'll export them with the file everything will import perfectly and it just works a lot better in my opinion also a key difference to understand is that obj files will export everything combined and will all import into Roblox Studio as one object which is not very useful if you're exporting say an entire pack of models if you want everything to be separate it is important that you use fbx when you export models all right there you go now you know most of what you need to keep in mind for exporting things from blender to Roblox studio so make sure your file is in a good location and click export fpx all right next go to Roblox Studio you want to make sure that you publish your project to Roblox so go ahead and hit file publish and then I'll just name this blender test all right from there we're going to go to view and then make sure that you have asset manager open then just click this bulk import button right here go to your file open it and then it'll give you three options right here I would leave these two on I would leave this unchecked 99% of the time but you can keep this in mind if you want to import an fbx file as one mesh which sometimes you might want to do that all right click apply all right awesome now that you've done that it should show up right here and you will be able to add it into your game isn't that amazing so that's your first model good work today in creating that imagine taking this tree and using it to create an entire map with a beautiful landscape and anything else you can imagine and now that you've watched this guide to the end and created this asset you're now a modeler with blender skills you have gone from zero to blender hero you've learned the inter face mastered the essential shortcuts created a custom asset textured it and imported it into Roblox now that you know the basics of blender you can experiment the sky the limit and there's tons of tutorials out there that you can use to learn how to make anything you want in any style so I can't wait to see how far you go in your journey as a modeler think about how much further you can go now that you have this skill subscribe now to get more Roblox game development tutorials modeling tutorials and more all the time and click the video on screen to learn some advice that will help you to master your Roblox building and modeling skills even further and by the way you can join scripting Secrets below my course on Roblox game development scripting and more that will help you to expand on your abilities in development see you later",
      "duration": 2060,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "qZIOA7mFaRg",
      "title": "Introduction to Blender and CG Cookie - BLENDER 4.5 BASICS (part 0)",
      "transcript": "Blender is a 3D animation software and its mission is to get the best computer graphics tools into the hands of artists all over the world completely for free. That's a pretty tall order, but it can actually do that thanks to the fact that it's open- source and funded by thousands of people donating every month, as well as by grants from some of the biggest tech companies. The fact that you can download and use the cutting edge of graphics technology for free to make whatever creative ideas you have come to life is nothing short of incredible. My name is Paul Kajedi with cgcookie. com and you're watching the Blender basics.  In this series, I'll be walking you through exactly how to use Blender. The world of 3D design is incredibly broad, ranging from entertainment with video games, visual effects, and animated movies to the industrial sector with 3D printing, prototyping, and scientific simulations. Whether you notice it or not, the results of 3D software are around you every day. Lender is capable of reading and writing any kind of 3D data. So, it can be used in all those ways, but its main strength is in creating visually pleasing models, images, and movies. You can build complex shapes in Blender incredibly quickly using mesh editing tools combined with powerful modifiers and procedural nodes. You can also make more organic forms in Blender by sculpting from stylized animals all the way up to fully realistic human characters. Blender has tools for rigging and animation so that you can bring your creations to life. You can even add physics like particles, cloth, smoke, liquid, all that fun stuff. There's also a full-blown 2D illustration and animation system, grease pencil, that can be used right alongside all the 3D tools. Blender has a fully featured material editor for changing how your objects look and react to light. You can use its built-in procedural patterns, paint your own textures, use textures from other software or from the web, or combine them all together in whichever way you want. When it comes time to show off your work, Blender has two powerful render engines that you can choose from to export your 3D scenes to an image or movie. Cycles, which is a full-on path tracer that simulates light very realistically, and Eevee, which is a realtime rasterized renderer similar to what you would find in a game engine. After rendering, you can use the compositor to add effects on top of your image, which when combined with a surprisingly robust builtin camera tracker and some footage, you can produce some really cool visual effects shots. Blender even has a basic video editor for slicing up rendered clips and putting them together to make a movie. You can even write Python scripts directly in Blender to automate repetitive tasks and add new functionality. Or you can use add-ons that other people in Blender's massive community have made. Suffice it to say, there's a lot you can do with Blender. If you're new to 3D, it's probably not like any other software that you're used to. The trade-off to having complete creative freedom is that it takes time and practice to get the hang of it. That said, you don't have to be an expert in order to start making amazing stuff. You don't have to know how to draw or how to code, although those things might be helpful at some point. You just need a little bit of patience to learn the tools and most importantly that excited curiosity that comes with just having fun doing something creative. If that sounds like you, then you're ready to start learning. There is a treasure trove of free Blender tutorials on YouTube and around the various interwebs, and there's a huge range of creators with different styles and focus. So, you're bound to find some that resonate with you. Here at cgcookie. com, we've dedicated ourselves to get you making things with Blender as quickly as possible. We've been around for a while and we've seen what works and what doesn't when it comes to learning computer graphics. Our courses can guide you step by step from basics and fundamentals all the way past what you'd learn from most college classes on the subject. We don't just teach you what buttons to push. We teach you the concepts of computer graphics from the ground up so that you can create whatever you'd like without needing tutorials. Some of our courses can be packed with a lot of information because we want people to get as much out of them as possible. It can be a bit overwhelming to learn a lot of new terms and concepts all at once, but don't feel like you have to speed through these and master everything on the first try. Now, an approach that we would recommend is to take your time. It's perfectly fine to watch a lesson through just to get your bearings and understand what will be expected. Then watch it again and follow along. And if you're feeling particularly confident, try the exercise without any guidance. You'll naturally get better and soon enough these techniques will become second nature. Now, this video series is available on YouTube. But if you sign up to our site, even as a free member, the site will track your progress. You'll gain access to any course files associated with this Blender course, and you'll be able to ask me questions in the comments section. When you're ready to progress, consider joining as a paid member and gain access to all of our other courses on a range of Blender topics. Depending on the course, you'll be prompted to submit exercises and get feedback. We also have a thriving community of artists that are learning alongside you. So, don't hesitate to start a forum thread, document your process, or ask for feedback. You're also more than welcome to join our Discord. All the links I just mentioned are in the description below. All right, I think that's enough of a preamble. So, why don't we go ahead and download Blender? The best place to do this is, of course, blender. org. Right there on the front page, you'll see the current version and a download link. The website should automatically detect your operating system. So, you can simply click on download Blender to get your install file. Up here at the top, there are some useful links such as the requirements page just to make sure that your computer can support Blender. If you're running an older computer or following along with some tutorials that were created in an earlier Blender version, you can download any previous build here. And if you're really enthusiastic, scroll down to the bottom of the page and be prepared to go experimental. Our recommendation, however, is to go with the current release or a long-term release version. Long-term release versions are supported well beyond the release date and have the widest documentation and course support available. You can also find Blender on the Microsoft App Store or on Steam, although these might not have the most up-to-date versions when it comes to bug release fixes. The first time you open up any new version of Blender, you'll be greeted with this splash screen. If you're coming to Blender from Maya or 3DS Max, you may be tempted to set your shortcuts to industry compatible. And while this does set up Blender to emulate a lot of well-known hotkeys that may be more familiar to you, it's by no means comprehensive, and you could quickly run into trouble if you follow along with course content. You also have the option to set Blender to your preferred language. Once you've addressed these initial areas, click on continue. And the next time you open Blender, you'll see this splash screen here. You'll see some helpful links as well as different types of presets that you can start Blender in. Blender's preferences are a handy window to access for a number of reasons. You can access this panel from your edit menu or with the shortcut key controller. I'm going to select interface and under the display section, I'm going to adjust my resolution scale to 1.5. This is because I'm working on a 4K monitor and I'd like to make all my buttons and text more visible to you. Blender allows you to install add-ons and themes. To do this, go over to where it says get extensions and allow Blender to access the internet. Then you can search add-ons and install them from here. For the purposes of this demonstration, I'm going to install screencast keys. Enable it and customize it in a way that is least obtrusive but visible enough for you to see my hotkey mouse button combinations as I go through the lessons. Now, you don't need to install this add-on, of course, but now you know how to access extra stuff that isn't included in Blender from the initial install. So, now that we have Blender all set up, let's learn about navigating its interface in the next lesson.",
      "duration": 696,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "i8wO5PEDO1c",
      "title": "Intro to 3D Navigation in Blender - BLENDER 4.5 BASICS (part 1)",
      "transcript": "Navigating in 3D space is the first skill you'll need to master. Blender's default general layout is arranged into four regions, but will mainly focus on this large area here. This is known as the 3D view. This is where most of your work is going to take place. There are several different navigation methods available to you, but don't feel like you have to memorize or use all of them. Just pick whichever one is the most comfortable for you and go with that. We'll begin with the gizmos in the top right of the 3D view. If we leftclick and drag on this magnifier icon and move our mouse up and down, we can zoom in and out. If we leftclick and drag on this hand icon, then we can pan around the view. Selecting this movie camera icon will toggle in and out of the active camera view. And the grid icon will toggle between perspective and orthographic projection. This gizmo right at the top that shows the X, Y, and Z axes allows you to orbit around your view. Just leftclick and drag. Now, all these icons are pretty handy and fairly obvious, but admittedly, this is not the most convenient way to navigate around your view while you work. A threebutton mouse is a better way to navigate. That's a mouse that has a left and right click and a middle scroll wheel. Though, if you don't have one, I'll explain other navigation methods in just a second. Scrolling up and down on the middle mouse scroll wheel will zoom your view in and out. Clicking and holding the middle mouse button as you move your mouse around orbits your view. If you hold down shift before clicking and holding, your middle mouse button will allow you to pan. and holding down control as you click, hold, and drag with your middle mouse button also zooms in and out. Now, if your mouse lacks a middle mouse button or wheel, or you're using a pen with a single button for right-clicking, you can modify your preferences to emulate a three-button mouse. You can find your preferences in the edit menu. Then go to the input section and tick emulate threeb button mouse. Now alt leftclicking will replace these middle mouse functions. Alt leftclick to drag and orbit. Shift alt leftclick to pan and controllaltt leftclick to zoom in and out. Just so there's no confusion with the next example, I'm going to turn this preference off once again. In more recent versions of Blender, touch gestures have been incorporated into navigation. This might be an option if you're on a MacBook or a Windows laptop with a precision touchpad. For that, drag with two fingers in order to orbit around the view. Hold down shift and drag with two fingers in order to pan around the view. Pinch in and out to zoom. Or you can use two fingers again. Hold down control and zoom in and out that way as well. Practice any of these methods to get comfortable with moving around your 3D view. Now you can adjust your inputs further in the preferences. For example, I personally find that between pan and orbit, panning comes more naturally to me as a default. So in my preferences under key map, I can switch my middle mouse action from orbit to pan. This means that holding down the middle mouse button will now pan instead of orbit. But what this does is it flips around your toggles. So you'll have to hold down shift to orbit in this case. This sort of modification trickles down to any threebutton mouse emulation. So for example, if you are using alt leftclick, that will now pan and shift alt leftclick will orbit. I'm going to reset this to my default so that we don't get too lost in this topic, but it's good to know that at any time you can adjust or tweak your preferences. Now, let's look at functions to frame your work. This is especially handy if while working you've panned or orbited and zoomed and you don't know which way is up. Hint, these gizmos at the top right. They're your compass and will give you an indication of which way is up. But sometimes you just want to reset the view. Under the view menu, you'll see options for all the navigation methods we've just discussed and then some. You can frame your view based on what is selected or frame all, which will incorporate everything that exists in your scene. As with any of these functions, most will have a hotkey assigned to it. The control numpad period will frame selected and your home key will frame all. We'll talk more about selection in the next video, but should you wish to practice this and there's nothing immediately visible, you can select an object in your outliner here, be sure to hover your mouse back over your 3D view, then either use the hotkey control numpad period. Our view should zoom right to the selected object. But let's say you were oriented in a weird angle or upside down. You will still be in this orientation. The same is true if you hit the home key to frame everything in your scene. So, let's talk about elevations, best known as top, front, and side views. You can access these from the view menu, view, viewpoint, and then you'll see a list of all the views, or you can remember some of these handy hotkeys. If you have a full-size keyboard, you should have a numpad along with it. Seven is top view, one is front view, and three is side view. If you hold down control, you can flip to the opposite angles for each of these views. So, for example, control 7 is bottom view, controll 1 is back view, and 3 is the opposite side view. Other numpad keys give us some options, too. Four and six will incrementally orbit your view around the Y ais or horizontally. 8 and two will orbit around the X-axis or vertically. Five will toggle your perspective orthographic projection and zero will toggle you in and out of active camera view. Now, if your keyboard lacks a number pad, you can open your preferences and under input, you can tick emulate numpad, which will allow you to use your number row instead. With any of these emulation methods, however, there is one caveat. There might be other hotkeys which could rely on these number keys. So, another method of accessing these views is with the tilda key. That's this symbol. It's usually the key that is topmost left just under the escape key. This will bring up a pi menu of all the views available and you can just mouse click on the view that you require. Now, we've covered a lot of different input methods here and depending on your setup, desktop, full keyboard, laptop, touchpad, or drawing tablet, try and get the hang of navigating in whichever way suits you best and feels more intuitive. Once you're comfortable with navigating the 3D view with ease, let's head on to the next lesson and talk about selection.",
      "duration": 541,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "zkupB5S3sUQ",
      "title": "Selecting Objects in Blender - BLENDER 4.5 BASICS (part 2)",
      "transcript": "3D is all about working with objects. So, learning how to select them seems pretty basic and important. In Blender, hover your mouse over the default cube here, then left click. Now, hover over the camera object and left click. Whichever object is selected is outlined in orange. We've been working mainly in the 3D view window of Blender. So now let's look at this window in the top right. This editor is called the outliner. By default, we are in view layer mode. More on these modes later. And we can see a hierarchy of our objects. A scene collection under which there is a subolction simply named collection. Inside this are our three default objects and they are listed in alphabetical order. Camera, cube, and light. Each has an icon for the type of object they are. A camera object, a mesh object, and a light object. We can also select objects in our scene from here. Leftclick select the cube in the outliner. You'll notice that this is outlined in orange in the viewport. Now select the camera in the outliner and then the light. Each in turn will show up highlighted wherever an object can be selected. The window below the outliner is our properties editor. As we select different types of objects in either our outliner or our 3D view, we may notice slight differences in what this properties editor shows. We'll revisit this editor later. To select multiple objects, use the shift key. Let's select the cube in our 3D view. Then holding down shift, left click on the camera. Then still holding down shift, select the light. See how in the outliner, all three objects are now selected. We can also see which object is the active object. It's the one with the lighter orange outline in the 3D view and this lighter blue bar in the outliner. You can also use shift leftclick to deselect something. Click on the active object and this will deselect it in one click. However, clicking on a non-active object, anything with a darker orange outline will first make it the active object. Then a second shift left click will deselect it. Shift clicking also works in a similar way in the outliner with a few minor differences because selection here works more like a file browser. Swapping out control for shift in this window will replicate the same results and you can see in the 3D viewport that the selection is mirrored correctly. There are also hotkeys for selecting all and deselecting all. A will select all. Alt A will deselect all. At the top of our toolbox, that's this pop out overlay on the left of the 3D viewport. We have our select tool. You can hide or unhide the toolbox with the hotkey T. You can also hover your mouse over the right side of this overlay, and when it turns into a double-headed arrow, you can click and drag this out so that you can see a description of the tool next to its icon. By default, the selection tool is set to select box, but you might notice in the bottom right there's this small arrow or triangle. Any tool that has this is hiding other options. Click and hold on the icon to reveal these. Select has the tweak, select box, select circle, and select lasso as its options. If we hover over any of these for a second, a description dialogue pops up with some useful information, including what hotkeys we'd need to press to activate these. For now, let's leave it as its default, and that's select box. Click and drag anywhere in your 3D viewport, and a selection box will appear. Anything inside that selection box will be selected. Click and drag a different selection. Now these objects are selected, but what is omitted is automatically deselected. If we wish to add to a selection, you can hold down shift, then click and drag over objects that you wish to add. If you hold down control and drag a selection box, then you will deselect anything from the selection. As with other software which has options for selection types, Blender has these different types of modes which you could use located in the top left of the 3D viewport. From left to right, the first icon is your basic selection operation. This is your default. The second icon will do what shift select does and that's add to a selection. The third icon does what control select does and that is subtract from a selection. The fourth icon will invert anything you box select. So for example, let's say we have the cube and lamp selected. Then we box select the camera and the cube. The cube becomes deselected and the camera is now selected. The fifth icon is a little tricky to explain. This will allow you to deselect anything outside of your new selection. So let's say we've selected everything and we have this intersect existing selection active. Only the objects that we select inside of all of these already selected objects will remain selected. For now, I'll reset this to default selection mode because it's probably easier to remember how to just select and use shift and control. The other hidden selection tools work in the same way. It's just that instead of a box, you can use a circle and you can increase or decrease the size of its radius by scrolling with your middle mouse wheel while holding down leftclick. Then paint over the objects that you wish to select. Shift and control will modify this selection in the same way as with box select. Lasso allows you to draw an arbitrary shape around the objects that you wish to select. In fact, I generally set lasso as my default, but of course, for the purposes of this basic course, I'm going to leave everything to its normal settings. Selection can seem like a straightforward tool, but knowing the different ways that Blender allows you to perform various selection operations does play into working smarter later on down the track. The three main takeaways should be that you can just leftclick to select objects, shift leftclick to add or toggle an active object in a selection, and control leftclick to deselect. So, if you can do those three things, you're ready to move on to the next lesson where we're going to have some fun with different ways of transforming objects.",
      "duration": 482,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "lYr25_YeuL8",
      "title": "Transforming Objects in Blender - BLENDER 4.5 BASICS (part 3)",
      "transcript": "Now that we know how to navigate around the 3D viewport and select our objects, let's look at ways in which we can transform them. Let's select the cube either by leftclicking on it in the 3D viewport or in the outliner and take a closer look at its objects properties. Now, in case you don't see the correct panel in the properties editor, click on this icon. It's the one with the square and four corners surrounding it. The same icon can be seen at the top and the name of the object is visible and editable, but let's leave that for now. This first section is the object's transform properties. It shows its current location, rotation, and scale with values for each of these axes. Look at what happens when we click on one of these input panels and type a value. Let's input two for the cube's x location. The cube now jumps 2 units along the x-axis in our 3D viewport. We know this because this red line here indicates the xaxis. Remember the gizmo in the upper right hand corner. This shows the orientation of the view, but it also labels which axis is which. And you'll notice that the red line and circle indicates the positive direction on the xaxis. Blender defaults to the metric system. So each of these squares are equivalent to 1 meter in real world units. You can also click, hold, and drag left or right. And this will move the cube according to the transformation field we have chosen. You can click, hold, and drag over more than one input panel. for example, all three axes for scale. And now when we drag left or right or input a finite value, all of these fields are updated simultaneously. In this case, we just scale the cube uniformly to double its size by entering two. The input fields also have some handy hidden features. This will have any spreadsheet enthusiasts grinning. You can, for example, enter math. Let's say we want this cube 2 m to the right of this camera. And we know that the camera is 5 m along the xaxis from the world origin. Well, we could do the math in our head. That's 5 + 2 = 7. Or we could let Blender do it for us. Enter 5 + 2. And when we hit enter, we get 7. This works for other operations where we can use minus the asterisk key for multiply and backslash for divide. Now let's say you know the notations in imperial units, but you don't want to do the mental gymnastics of converting it to metric. We want to translate this cube 3 ft and 7 in along the Z ais. We'll go to our Z location input panel and enter three apostrophe 7 quotation marks. This is for 3T 7 in. And when we hit enter, Blender has automatically converted this to metric for us. Now, if you really cannot abide the metric system and absolutely need to measure things in feet and inches, you can go to the scene properties panel and under units, you'll be able to change the units from metric to imperial. Blender will now update the units that you will now use. I can see that it's changed me to feet and the weight to pound. You can further refine the units of measurements for parameters such as rotation or temperature. If we tick the box separate units, our units will be shown in feet and inches. This is evident when using the measuring tool over here in our toolbox or when edge length is made visible in our display properties. Unit scale is required when you wish to work at very large or microscopic units. This can save us from zooming way in or way out. And you can think of this more like a ratio system that you might see on a model kit. We're working in 10:1 ratio or 101 scale. The units will be displayed correctly, but our scene will interpret this as constructed to the correct proportion. I'll set this back to metric and reset our unit scale to one. Now, entering numbers in several fields just to translate, rotate, or scale the cube sounds tedious and not fun at all. I'm sure you'll agree. Let's go back to our toolbox and select the move tool. Again, if you hover over any tool, take a moment for some information to pop up and note the hotkey. The move tools hotkey is G. I like to call it the grab tool. With our move or grab tool selected, this widget is overlaid on the object we wish to move. It has three arrows and three planes. The colors all correspond to the same axes as we saw in our gizmo here. We can now leftclick and drag on any of these arrows to move it along that axis. But what do these planes mean? Well, these will lock the motion to two axes so that the object only moves along this selected plane. Similarly, if we grab the green plane, we'll be moving the cube around the Y plane where its movement is constricted to only the X and Z axis. The next tool down is the rotate tool. The shortcut for this one is very obvious. It's R for rotate. Our widget now transforms to a white circle with three colored arcs around the object. The colors correspond to the same axis. If we click and drag on this red arc, we rotate the cube around the xaxis. Green, we're rotating around the Y. And blue, we rotate around the Z. The white circle allows us to rotate the cube in relation to our point of view. So, we can rotate the cube, then middle click and drag around to rotate our view. And when we rotate this cube again using the white ring, it will rotate facing our new point of view. If we hold down control, we can rotate in increments of 5Â°. Holding down shift switches you into precision mode. If you hold down control and shift, you can lock the incremental rotation to single degrees. Incremental transformations are not limited to rotation. These will also work for your move or grab tool. Let's go back and select that tool and play around with controll shift or both. Depending on how far you've zoomed in, this will snap the incremental move to the unit visible. Beneath the rotate tool, we have the scale tool. The hotkey for this is S. This widget also has scale for plane and it works the same as for move where the cube nodes here stretch the object along the axes and the planes will only stretch the object along the plane. Scale has this little pop out corner hiding a scale cage mode. This will allow you to manipulate the bounding box around the object. You can select a corner, an edge, or a face and further manipulate an object's scale this way. Now, because I've not done anything to this default cube, the cage fits pretty snugly around the cube. And you might think that this is no different than manipulating the cube's vertices, edges, or faces. More on that later when we talk about edit mode. But let's step back to rotate for the moment and rotate this cube in a couple of axes so that it's not sitting in its default state. If we now go back to our scale cage tool, you'll see that the bounding box is still oriented in what is known as the global orientation where all the faces of this cage run along the world or global coordinates and don't match the cube. Currently, we have our transform orientation set to global. We can see this up here at the top of the 3D view where it says global. If you click on this button, it will reveal a menu of transform orientation options. Let's switch this to local. And look what happens to the cage. It now fits snugly around the cube once more. Local means local to the selected object. So now the cage is oriented to the objects coordinate system and not the worlds. The next tool in this section of the toolbox is the all-in-one tool. Click on this and you'll get all of the previous widgets superimposed on one another with the obvious exception of the scale cage and plane functions. And you can use this to scale, grab or rotate in each axis. Now, if you've made a bit of a mess with rotating, scaling, and moving, you can either undo this by hitting Ctrl Z, or if you don't want to step back through all the undos, you can clear all your transformations in one go. You'll find this operation under the object menu under clear. And you'll see that by holding Alt as you use the hotkeys for grab, rotate, or scale, you will undo those transformations, resetting them to all of their defaults. Zero location, zero rotation, and scale of one. I've shown you where you can find hotkeys for most of these actions. Now, let's try manipulating this cube with just the hotkeys. And I'll add a little extra tip here as we go. Let's hit G to grab. And by dragging our mouse around, we move or translate the cube. We just have to click to commit. And now the cube has been repositioned in 3D space. Let's hit R to rotate and then S to scale. And every time we click, we commit that change. Let's try rotating and holding down control to incrementally rotate this cube by 5Â° increments. Let's hold down control and shift to further incrementally rotate by 1Â°ree increments. Of course, we're rotating this in relation to our view. Note that we are in the default global orientation for these tools. Let's hit R then X for X-axis. And you'll see this red line passing through the object's point of origin. We can now rotate this only around the X. And we can click to commit. Now we could switch to local and rotate the cube along its own X orientation in the same way. But there is a faster way. Still in global orientation, let's hit R to rotate. Then hit X twice. Now you'll see that the red line that passes through this cube is not parallel to the global x-axis but corresponds to the cube's own xcoordinate. When we rotate this cube now it will spin around this axis instead. You could try this with the yaxis or z. And now try it with the scale tool. Hit S, hit Y twice, and you'll see that the cube scales along its local Yaxis. Incremental rotation, movement, and scale also works in both modes. So, you can hit G to grab X twice, hold down control, and move the cube in unit increments along the cub's local XIS. All right, I'm going to reset the cubes transforms for this next demonstration so we don't get too far into the weeds. Remember how we could input numbers in the object's transform properties? Well, we can do that while transforming in the 3D view, too. Keep an eye on the transform properties over here as we work. We'll grab our cube G key, then constrain the movement to the global Z axis. I'll hit Z once. And now let's move the cube up 2 and 1/2 m. I'll hit the number two period and five. Now when we hit enter and take a look at our transform properties, you can see that the cube's location is 2.5 for its Z location. Let's try rotating it exactly 45Â° around the local XIS. Can you guess how? Not to worry if you can't. Here are the keys that you press. R to rotate, X twice to lock the rotation to the cube's local X-axis, and then 45 and enter to commit. The object's transform properties should show rotation X as 45Â°. Now, let's do an easy one. Let's scale the cube down to half its size. Can you guess how? S to scale, then period five for 0.5 or exactly half. In the transform properties, you should see the scale values for X, Y, and Z are all now 0.5 because we didn't specify any axis. So, it scaled this cube uniformly. Now, as basic as this might seem, you might want to get comfortable with transforming objects in the ways that I've just shown you. Once you're good with that, let's move on to the next lesson.",
      "duration": 915,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "ACdtFVSbDZo",
      "title": "Adding, Deleting, and the 3D Cursor in Blender - BLENDER 4.5 BASICS (part 4)",
      "transcript": "You may have heard around the Blender community that in order to start any project, you first delete the default cube. Seems a bit cruel, but in order to talk about adding and deleting, we should probably start here. Deleting is straightforward. We leftclick on the cube, hit delete, and that's it. Thank you for coming to my TED talk. lesson is over. Just kidding. As with previous lessons we've seen so far, there's more than just what's obvious in Blender. If we right click on an object, let's say the camera this time at the bottom of the contextual menu, you'll see that the hotkey for delete is not just delete, but X. This is a holdover from previous versions of Blender, and X can come in handy in other contexts where deletion can get very specific. We'll cover this more when we talk about edit mode, but it's probably good to flag this hotkey. Now, to add new objects, we go to the add menu. That's up here at the top of our 3D view. Click on this, and we can see a list of objects that we're able to add. You can also call up this menu by using the hotkey shift A. This will show the exact same menu, but now it's floating wherever you have your mouse. We call this a contextual menu. We're mainly sticking to mesh objects in the Blender basics course, but you can already see that you can add a number of objects, curves, text, grease, pencil objects, reference images, and more. Let's try adding an object that we've not yet covered, like metabols, for instance. Shift a metab ball. And we'll just go with the ball here. Now, on its own, it may not seem like much. We can grab it, rotate it as much as you can with a sphere, scale it. But now let's add a second one or a second meta object. If we grab this second object and start pulling it away from the first one, you can see how its surfaces are affected by the proximity to each other. Now, this can be a lot of fun, especially if you have several meta objects. I'll delete these metabols now by selecting them and hitting delete. And I'll read a new cube. Shift a mesh cube. Notice that it got added right at the center of the world. This is actually a coincidence since we've not moved our 3D cursor. That's this red and white bar circle with the crosshairs along the axes. You can place this cursor anywhere by either selecting the cursor tool in the toolbox, then left clicking where you'd like it to be, or you can hold down shift and right click in any spot you'd like. Now, a handy tip to know is if you shift right click on the surface of an object, it will snap the cursor anywhere on that face. If you want to reset the cursor to the world origin, shift S is the hotkey for bringing up the snapping menu. One of these options is snap cursor to world origin. If you'd like to add something in a specific spot, let's say at the position of an existing object. Let's select the lamp, then use shift S and select cursor to selected. From a previous lesson, we know that we could have several objects selected at once, but only one is ever active. So, if we add our camera to our selection, when we hit shift S and snap cursor to active, the cursor will now jump to the camera's origin point. I'm going to place the cursor in an arbitrary spot. Shift rightclick in 3D space. The shift S menu also allows some other snapping objects, including snap selection to cursor. Now, if we have more than one object selected, snapping to cursor will place all the selected objects at the same point. That's why there's this option, selection to cursor keep offset. This will move all of the selected objects and their median point is what will snap to the cursor. After using any of these operations, you may have noticed that this dialogue box pops up, usually with the last operation we performed. Let's place the cursor somewhere arbitrary, then add another mesh cube. Shift a mesh cube. The dialogue box that appears is labeled add cube. Click on this small arrow if it's collapsed for you and you'll open it up. It will display some information about the cube such as the size, location, and rotation. And if you wish to fine-tune any of these parameters, you can do so here. Just know that this is best to do immediately after this dialogue appears. If you accidentally deselect or select something else and the dialogue box disappears, you can bring it back with F9. But just remember it will only show the details for the last operation. If you perform another operation, say move your cursor and add another object, then this dialogue disappears and a new one takes its place. Let's shift rightclick over here and add a mesh plane. The default alignment is set to world, but if we click on this dropown, we have a couple of other options, view and 3D cursor. Do you remember how to swing into front view? That's right, numpad one. Now, when we change our align from world to view, the plane will be facing us in front view. Notice, however, how the rotation X has changed to 90Â°. Its local coordinates will be different from the global ones. If you need an object to be oriented differently to how it is placed in the world, but require its coordinates to match the global ones, you select that object. Then under the object menu, go to apply and select rotation. Now its X rotation is returned to zero, but the transform has not been reset. Now remember, for most objects like this, the transform options can always be found in your properties editor and fine-tuned at any time that you should need. This last operation dialogue box just gives you the option to do it as you work. Some objects in Blender, such as the Taurus, are a bit more reliant on the adjust last operation dialogue. And there's a few hidden tips that I'm going to take you through now. Let's add a Taurus. Shift a mesh Taurus. We see the options here. Major and minor segments, dimensions mode, and right at the top, we have an operator presets drop-down along with a plus and minus. Besides adjusting the parameters for this Taurus, you can also save those presets to this menu. In fact, you can save several presets. And each time you add a new Taurus, you can recall these as your new starting point. There's a tool here in the toolbox that allows you to add a set of primitive objects by clicking and dragging anywhere in your 3D viewport. It also has hidden options to allow you to add a cone, a cylinder, and two kinds of sphere. Let's add a cylinder. With no other objects in the scene, our cursor changes to this white grid in a feathered circle floating along the floor plane. Click and drag and you'll create the first dimension of this cylinder. If you hold down alt, the circle will grow out from this point. If you hold down shift, you can constrain the proportions of this circle, but it will grow out from the point you clicked. If you hold down both alt and shift, you can grow the circle out from this point with its width and depth proportional. You click to commit and the tool now changes to add height to your cylinder. Again, if you hold down alt, it will pull the top and bottom out equally from the center. Click when you're satisfied with the height. Your adjust last operation will allow you to fine-tune any parameters you wish. Now, let's add a cone the same way, but this time, let's hover the tool over the cylinder. You'll notice that our placement grid can snap to the cylinder's faces. So, we can add a cone, which sits exactly on the top here or grow out perpendicular to any of these faces. So, these are the main methods you'll be using to add objects to your scene. Try adding some objects on your own. It doesn't have to be a mesh, and it's okay if you don't understand it just yet. Just be aware of how you can add something and delete it or adjust its last operation to give you some further options. If you're so inclined, why not build yourself something cool out of primitives by snapping each new primitive to the surface of an existing one? Maybe make some presets for a Taurus or other objects that allow you to save presets like that. Have a little bit of fun before moving on to the next lesson.",
      "duration": 614,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "vlR6qAbIlR0",
      "title": "Orientations and Parenting in Blender - BLENDER 4.5 BASICS (part 5)",
      "transcript": "Whenever we transform something in 3D space, it always happens in a very particular order. First, the location is applied, then the rotation, and finally the scale. That's why it's always listed this way in the object properties interface. The reason this matters is let's say we rotate a cube 45Â° around the xaxis. Well, if I scale along the x-axis, then of course that seems fine. But look what happens when I scale it along the y ais. It doesn't appear to be scaling evenly. In fact, it seems to be scaling in both the x and zed. If we switch over to our move tool, then switch our orientation from global to local, the axes are adjusted along the dimensions of the object and not the world. You can think of global orientation like the dimensions of the environment and local is more like the object's own left, right, forward, back, up, and down. The default orientation in Blender is global as you can see here. And we've already seen how we can override this transform on any object relative to its local orientation. As a refresher, let's add a cylinder and rotate it slightly. I'll hit R and X to constrain it to the Xaxis and rotate. And then just click to commit. If we want to scale it along the local Z axis, we now hit S for scale, then zed twice to toggle into local transform. However, if we switch from global to local orientation as our default, then the opposite occurs. When we scale, move or rotate, it will do so according to the selected objects local coordinates. We can hit S to scale, then only need to hit X once. Hitting X twice will toggle back into global transform. Now, we won't be looking at these other orientations in this basics course, but in case you're wondering, if we had the orientation set to view, for example, that's when the coordinates are in line with whichever angle we're looking at the object from. Doing the same operation, scale zed twice, will toggle our scale into global. Later on, you may find yourself needing to quickly switch between orientations, and there's a hotkey for this, this will bring up your orientation radial menu from which you can switch on the fly. So far, all of our transformations have been in relation to the object's own point of origin. But moving objects around individually or even box or lasso selecting groups of them will get tedious quickly. So creating hierarchies or parenting can make selection and transformation easier. But it is important to understand that this changes the reference point for any object's transformation because now it is in relation to a parent object. Let's add a cone on top of this cube. With the cone still selected, we can shift select the cube, go to the object menu, go down to parent, and select object. If we grab the cone, we can move, rotate, or scale it just as we'd expect normally. But watch what happens if we grab the cube and do the same. The cone comes along for the ride. This operation is called parenting. You can think of it in this way. The cone is the child of the cube. The child can move independent of the parent. But where the parent goes, the child always follows. You can parent any number of objects to a single parent. Or you can have a nested hierarchy of parent child relationships. Hierarchies are a powerful tool in managing and manipulating objects in 3D space. The hotkey to parent an object to another object is Ctrl P. You'll notice that there are a few parenting options. And the best way to show you the most common options is to first transform these objects slightly. I'm going to scale the cube down in the Z direction slightly, and I'm going to offset the cone and rotate it. If we select either of these, we will notice in its object properties that the location, scale, and rotations are not their defaults. Let's go through some parenting options here. The first one is obvious. We select the cone. We shift select the cube. We hit Ctrl P and select object. We will see this dotted line between the points of origin indicating the relationship. To best demonstrate parent object keep transform, I'll just grab the cube, move it back a little, and rotate it. Obviously, the cone comes along for the ride. I'm going to duplicate this cube. Now, let's select the cone, shift, select the second cube, and try to parent it the same way. The cone changes position, forgetting all of the transformations that happened after it was parented to the first object. If you want the cone to keep all of those transforms, that's when you select object keep transform. We'll undo this again and try our next option without inverse. The cone seems to have disappeared. If we toggle into wireframe mode, you'll see that the cone occupies the same location, scale, and rotation as the cube. it has inherited the transformations of the cube. This final option will directly show the relationship between child and parent where the parent is quite literally the center of the child's world. I've set up two cubes. One is at the world origin with a location of zero in all dimensions. and one cube is positioned at x - 5 m. This sphere looks like it's sitting on top of this cube, but I've set its object origin at 0 0. Also, I'm going to move this sphere -5 along the xaxis. Then I'm going to parent it to this cube and keep the transform. You'll see that the sphere's location is still x - 5 m. However, if we grab this cube and move it, the sphere moves along with it. Let's undo this. And now I'm going to parent it to this cube without inverse. Notice what happens to its x location. It now thinks that it's located at x= 0, but it hasn't moved. That's because its location is at the same point as its parents location. This is its new world origin. Okay, I'll undo this and return the sphere to its original position. And now parent it to the cube at x - 5 using the keep transform without inverse. And this will do both things. It keeps the sphere where it's located. But now look at the location x. It's set at 5 m. This is because it believes its parent is at 0 0. The transform has been kept in relation to this parent, which means it's 5 m in the positive direction along the xaxis. This is an important distinction because it demonstrates how parenting fundamentally works. It tells the child that its origin is over here and all of your scale, rotation, and location data should be in relation to this new point. To break the parent relationship, select the child object and use the hotkey altp. Again, there's a couple of options. Let's say we move the cube after parenting the cone to it. If we select the cone, hit alt p to unparent, then it will revert back to the position it was in before we move to the cube, we can clear a parent and keep the transform, in which case it will inherit all the transformations, but no longer be tied to the parent object. If this cube had been scaled down in the Z direction, then the cone was parented to it. The cone won't automatically inherit that transformation. But if we clear the parent inverse, it will then have the transformation applied to it. The hierarchy in a parenting relationship is also shown in the outliner. Let's create a slightly more complex hierarchy. I'll parent two spheres to this cone and the cone to the cube. We'll just use the basic parent object function. Nothing fancy. Let's now take a look at the outliner. You might see just the cube objects. No cone or spheres seem to be showing up in the outliner, but you'll notice that there's a small arrow left of the cube. it will reveal that the cone is nested underneath it. We can also click on the small arrow left of the cone and you'll see that the two spheres are revealed nested under that. You can also parent or clear parents in the outliner. If we hold down shift, click on an object and drag it to another object, it gets parented to it. Shift click and drag an object out of its nested position and it becomes unparented. Parenting several objects simultaneously is pretty easy too. Now this cute little scene was modeled by Eva Vicona. We have a table and we have several objects which you would naturally move about were we to shift the table around in our scene. Now we could do a box select on everything. We'll shift select our table to make it the active object. Hit Ctrl P. And now all the selected objects are parented to the active object. But we can experiment with creating hierarchies between objects. Or we could try parenting the cutlery to the plate, the plate to the tablecloth. Try parenting the tablecloth to the table in the outliner. So, if you move some objects and other objects are moving around when they're not supposed to, for example, then you now know how to quickly remove that relationship or reset up a different parent as you work. Once you've got your head around parenting and unparenting, you're ready to move on to the next lesson. Hey, hey,  hey.",
      "duration": 753,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "eJH0hxlhd5M",
      "title": "Mesh Components and Object Origins in Blender -BLENDER 4.5 BASICS (part 6)",
      "transcript": "Manipulating entire objects is fun, but what you really want to do is get down to the components of an object. So, now let's look at edit mode. Edit mode is just one of several modes you can toggle into for modifying and transforming objects. With our cube selected, we can click on this drop-own menu at the top left of the 3D viewport and see all the object interaction modes available for this type of object. Let's switch from object mode to edit mode. The cube looks a little different now in edit mode because we're looking at the components that make up this mesh object. These are its vertices, edges, and faces. For those of you who are brand new to 3D, a vertex is a single point in space. An edge is the line that can be drawn between two vertices. And a face is the area described by three or more connected vertices. It's about as fundamental as you can get with 3D, and it underlies everything we do when modeling. Depending on how you wish to edit your mesh, you are able to switch between selection modes using these icons here or by using the number keys on the keyboard. One for vertices, two for edges, and three for faces. For now, we'll stick to vertex select mode. Either click on this icon or hit the numeral one. Selecting vertices in edit mode is exactly like selecting objects. Let's practice a quick refresher. Leftclick on a vertex, it becomes or stays orange and everything else is deselected. If you hold down shift, you can select more vertices. Notice how as we select a second vertex, then a third, the edge between these vertices becomes selected. And if we manage to select all the vertices that surround a face, the face now becomes selected. Also, you can use your selection tools in edit mode as well. You can box, circle or lasso select. A is the hotkey to select all and alt a does the reverse. Let's now select a single vertex and delete it. Delete has two hotkeys. the delete key and the X key in edit mode. These will bring up the exact same delete options menu. This will become handy down the line, but for now, let's just choose the first option and delete this single vertex. If you needed anything to drill down the interdependencies of vertices, edges, and faces, this ought to do it. Without this vertex, the three edges around it could not exist. And without those edges, those three faces that got deleted could not exist. We'll undo this and select two vertices. But this time, let's choose the option edges. Hit the hotkey for delete. Now only the edge between these two vertices is deleted and along with it the adjacent faces. Let's undo this one more time and select four vertices around this face and choose faces. We'll hit delete. Everything seems to remain intact except for the deleted face. That's because the edges still have vertices at either end, so they still can exist. While we're in edit mode, let's do one more thing. We'll add a primitive shape to this cube. I'm going to go with a sphere. It is added in edit mode with all its vertices selected. I can hit G to grab Y to constrain it to the Y-axis and move it over so it's not inside the cube. I'll now toggle back into object mode. I can do this by going to the same object interaction modes menu or I can hit tab. tab will toggle you between the mode you're in and the previous mode that you were using. If you want to bring up all the modes as an overlaid radial menu, the hotkey is control tab. Back in object mode, you'll notice that even though there is a sphere and a cube, there is only one origin point. And if I grab it, both the cube and the sphere move together. This is because all of this geometry is stored in the same mesh data block. We can see the data block in the outliner. To understand this a little more clearly, next to the object named cube, there's an arrow. Currently, it's pointing right, but if we click on it, it will point down, revealing a nested item beneath. This is also named cube, but its icon looks like three vertices connected by three edges. This is not a coincidence. We're looking at the data block for editable mesh data here. The object level is like a container for data blocks. It is named cube because when it was generated, the object was a cube. We can rename this to whatever we want by doubleclicking on the name and then typing something. Primitives for example. Now we won't get two data blocks inside just because we added a sphere. All the vertices are part of the same data block. Blender doesn't see cube or sphere. It simply sees vertices, edges, and faces. The object container is what we transform when we are in object mode. The mesh data block is what we transform when we're in edit mode. We can separate and join objects as well. Let's toggle back into edit mode either by hitting tab or control tab and selecting edit mode from the radial menu or using the drop down and let's select all the vertices in this sphere. I'll do this by selecting one vertex. Then with my cursor hovering over the sphere, I'll hit L. This is the hotkey for selecting anything that's linked to the selection. I'll go to my mesh menu and go down to separate. The hotkey for this is P and I'll click on selection. The sphere and cube are now separate objects with their own data blocks contained inside. Because the original object was named primitives, we now have a second object in our outliner named primitives. O1. I'm going to rename everything here so there's less confusion. So, we'll name this cube this sphere. We'll name the data block inside the cube as cube data and the data block inside sphere as sphere data. Making sure we're back in object mode. We can select the sphere independently of the cube. Now, you'll also notice that the sphere's origin point is still the same as the cubes. If we try to scale, rotate, or move it, it will be transformed in relation to this point. We can adjust where an object's origin is. Let's select the sphere, go to the object menu, and set origin. We have plenty of options here, too. The first two are the most obvious. If we set geometry to origin, Blender will place the geometry so that it surrounds the origin. and the origin is centered. But that's like moving the sphere back to where the cube was. Let's undo this. Let's now select origin to geometry. It does roughly the same thing, but in reverse, leaving the sphere where it is, but placing the origin at its center. I'll shift rightclick somewhere to reposition my cursor. And now with my sphere selected, I'll go to object, set origin, origin to 3D cursor. And as you'd expect, here is where it jumps to. It doesn't really make a lot of sense to set an origin in such an arbitrary manner. Where it comes in really handy is when we position the origin somewhere specific for this geometry. Let's say, for example, we want this sphere to scale or rotate from its base. I'll toggle into edit mode, swing my view around so I can see the vertices at the base of the sphere, and select this vertex at its pole. I'll now snap the cursor to this selection by hitting shift S, and from the radial menu, I can select cursor to selection. Then back in object mode, I can set the origin to 3D cursor. We can hit S to scale and zed to constrain the scale to the Z axis. Now when we scale the sphere, it doesn't scale from its center but from its base. Let's do the reverse now. I'll select the cube. Then I'll shift select the sphere. I'll go to object join or use the hotkey ct controll J. Let's observe what has happened in the outliner. We no longer have a cube object, only a sphere. And we also only have sphere data as the data block. This is because it's merged everything into our active object. Also, the only origin point that exists is the spheres. Now, when objects should be joined or when they should remain separate is a matter of preference. Obvious examples would be an instance like this. A table consists of several transformed cubes. A tabletop, some supports, and four legs. It makes sense that all of these separate meshes should be joined into one object named table. But if we had cups, plates, cutlery, all of these objects would be better to have as separate objects. Now, once you're comfortable with some of these concepts, you're ready to move on to the next lesson.  Hey, hey,  hey.",
      "duration": 665,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "HFstA5lM4BM",
      "title": "Object Data and Duplication in Blender - BLENDER 4.5 BASICS (part 7)",
      "transcript": "We've taken a look at how we can select and manipulate our objects in Blender and even how to edit the components of a mesh. Meshes, curves, even grease pencil objects have an edit mode and their components are similar, but how they are manipulated can vary. This is why they are classified as these different kinds of objects. Each object however holds various data blocks and these can include but are not limited to editable data. In this lesson we'll be exploring data blocks in a bit more depth specifically how they can be shared among objects. Let's compare a plane, a curve, and a nerve surface to demonstrate how different objects have different components, even if they share similarities. In edit mode, a mesh consists of vertices, edges, and faces. A curve object has points which can be analogous to vertices. But these points have handles determining what kind of curve these segments between points will take. These segments can be analogous to edges and are drawn between points mathematically. A nerb surface is much like a mesh face, but it is described by curved segments. All of these objects, however, have an object container and a data block to describe how these components are arranged in 3D space. We saw in the last lesson that anything with an arrow next to it is hiding something. You can click on the arrow to reveal nested items and click again to rehide or collapse it. If we click on the arrow next to the cube, we reveal the data block icon nested inside the object container. If we click on the arrow next to this, we reveal that a material is nested inside that. A material is another type of data block. I'll toggle into front view numpad one and select the cube. I want to create a distinct duplicate. So for this I can go up to the object menu and select duplicate objects. Take note of the hotkey shift D. When a duplicate is made, Blender automatically switches into move mode. The cursor looks like these four arrows in a square pattern. And I can hit X to constrain the movement to the X-axis. I'll move this across to the left. I can hold down control to snap this movement to unit increments. In the outliner, I'll rename this cube shift D. Let's give its data block a distinct name. Also, I'm going to call this cube 2. I'll select the original cube. I'll toggle into edit mode and also into wireframe mode. Select these vertices on top and move them up a bit. So, now that this cube is taller than the left cube, I'll toggle back into object mode just by hitting tab. Now, let's make another duplicate of this original cube, but this time we're going to make a linked duplicate. Under the object menu, click on duplicate linked or use the hotkey alt d. Blender will also jump into move mode for this. So, we can click X to constrain the movement to the X-axis. And let's move it over to the right a couple of units. I'm going to name this one cube alt D. If we reveal the data blocks in the outliner, both cube and cube alt D share the same data block. We can rename either of these. I'm going to do that now by double clicking on either data blocks under the original cube or cube alt d and I'll name it cube 1. You can see that they are both changed. A linked duplicate shares editable data. If I select the cube on the left, toggle into edit mode and manipulate some of its vertices. Only this cube is altered. This should be fairly obvious. But let's toggle back into object mode. Select the middle cube, the original. Toggle into edit mode and manipulate some vertices in a similar manner. And look at this. The cube on the right also transforms. I'll toggle back into object mode. Now, let's select the middle cube and rotate it a little bit. We can maybe scale it a little in one axis. But how come the right cube hasn't changed? The transformations here are performed at the object level. The shared data makes the cube on the right an instance of the original cube, but it still needs an object container for Blender to know its location, rotation, and scale. Now, all three cubes have a material nested under the mesh data block. It just so happens this material was assigned to the cube when we opened the general preset for Blender. So any duplication will have also copied over that material. Let's take a look at the materials tab for any of these cubes and edit some parameters of this material. For example, I'm going to make it red and rename it red. In the outliner, all the cubes now share the material named red because all we did was change the name. I'll toggle into material preview mode. We can do that up here or by hovering over the 3D viewport and using the Z hotkey and select material preview from the radial menu. I'll select the original cube and make a new material. I can duplicate the original material by clicking on this icon over here. And now this duplicate is named red.001. I'm going to rename this to green and give it a green color. Now cube and cube alt d share the same material because they still have linked data but cube shift d is still red. Some data blocks can be added to an instanced object independently. Let's select the cube alt d and give this a couple of modifiers. First, I'll give it a subdivision surface modifier and set it to simple just to increase its vertex count. Then a simple deform to twist it. Notice how the modifier has not been added to the original cube. But if we toggle into edit mode and edit the original cube, this has an effect on cube alt d. Now, data blocks might seem like a confusing concept at this stage, but they are a powerful bit of knowledge to have in your toolkit. For now, however, we might want to move on to the next topic, and this could be a lesson that you revisit at a future time.",
      "duration": 476,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "PfBO0Gfla_Y",
      "title": "Pivots, Snapping, and Proportional Editing in Blender - BLENDER 4.5 BASICS (part 8)",
      "transcript": "In this lesson, we're going to take a look at pivot points, snapping, and proportional fall-off. Most of the time, transformations are based on an object's point of origin. But sometimes this doesn't give us the best workflow, and for that we have to understand how we can change the pivot point around which an object is transformed. Up here in the 3D view header, just to the right of our transform orientations, where it says global, we have the transform pivot point menu. The default setting is median point. Now, with just our cube selection, the median point is at its point of origin because it's dead center of the object. But if we were to say select the cube and the camera and then hit R to rotate. Now both rotate around a point that is equidistant from the two objects point of origin. Click on the icon here and you'll see some other options for pivoting. Now we don't have to take these in order. Let's take a look at the one above and the one below the median point. The icons are similar. So that means they're somehow related. Let's switch to active element. With our cube and camera both still selected, we'll hit R to rotate. Now both will rotate but around the origin of whichever object was selected last as this is the active element in our scene. Switch to individual origins and do the same thing. Now both rotate at the same time around their respective points of origin. Now let's select 3D cursor from the menu. Shift right click and reposition your cursor somewhere else in 3D space and select the cube. Now when we rotate it pivots around the cursor position. Similarly, if we select the cube and shift select the camera and we rotate both will pivot around the cursor position. Finally, there's bounding box. This may at first glance seem similar to median point, but the difference is that median will place the pivot between the centers of all the selected object origins, whereas the bounding box uses all of the objects outer boundaries and rotates from the center of that. The hotkey to bring this menu up in a radial overlay is the period key on your keyboard, not the number pad period. In this radial menu, there's an extra item labeled only locations. This can be toggled on or off. And if it's enabled now, when we rotate or scale a multiple selection, it only affects the position. Snapping is also an important tool which can affect our workflow. It has two components. This magnet icon which shows if snapping is enabled or not and the snapping target. By default, snapping is set to incremental. And we've briefly seen this in action already whenever we've held down control while moving, rotating, or scaling. Let's add some more primitive meshes here to play with. I'm going to shift right click to place my cursor somewhere. Shift A and select sphere. Then I'll shift right click somewhere else. Shift A and place a cone. I'll enable snapping by clicking on the magnet icon so that it turns blue. If I grab my cone and begin to move it about, notice how the motion isn't smooth. It's kind of jagged or stepped. This is because it's snapping to unit increments in Blender. If we click on X, we can constrain this movement to the Xaxis, and it will only snap to one unit increments along X. Holding down shift will snap the movement to a tenth of the visible unit. Well, for as long as we're in metric. Now, if the magnet is not active, holding down control will toggle snapping on for as long as we hold it down. This is a really handy hotkey in my opinion, and rarely do I have the magnet icon enabled just because I can do this whenever I need to. You will have noticed that there are a lot of options in our snapping menu here. To best explain these, we don't have to go through them all. Let's start by switching from increment to vertex snapping. I'll select my sphere and bring it close to the cube. As I do so, a small orange square will appear over the nearest vertex on the cube under my cursor, and the sphere will snap to this point. Notice, however, that the vertex of the sphere that is closest to this point is what snaps. Let's open up our snapping menu to see why this is the case. Up here, we've got this section called snap base, and it is set to closest, which means it will not only choose the closest vertex we hover over on the target mesh, but only the closest vertex on the selected mesh that will be snapping there. If we change our base to center and do the same thing, then the sphere's point of origin will snap to the cube's nearest vertex. Let's now pick two variables here. will snap to the center of an edge and snap active. I'm going to select our cone and shift select our sphere so that the sphere is the actively selected object. Now we'll move our selection close to this edge on the top of the cube here. Did you notice what happens? Because the sphere is the active object in this selection. This is what snaps to the target. In this case, the center of this edge. the cone comes along for the ride kept at a relative distance from the sphere. One of the really helpful options when face snapping is this tick box next to align rotation to target. What I'll do to demonstrate this is create the top of a bolt. I'll add a sphere. Toggle into front view with my numpad one. I'll tab into edit mode in wireframe view. I'm going to box select all of these vertices at the bottom and delete them. You'll note that the object origin is in line with this edge loop that was at the center. Because the default size of the sphere was pretty big, this is going to be a little bit too big for our purposes. So, we need to scale this down a little. I'm going to tab into object mode, snap our cursor to the sphere. That'll snap it to the point of origin here. Make sure that our pivot is set to 3D cursor. Tab back into edit mode, and then hit S to scale. Everything should scale towards the cursor. Once I'm happy with the size, I'll toggle back into object mode, back into shaded mode, and rotate our view so we can see the cube. Here, under our snap menu, let's select face, our base to closest, and enable a line rotation to target. We'll move the bolt toward the cube and place it on the top here. You'll notice that it kind of slides along this face. I'm going to use Alt D to create duplicates. Bolts all have to look similar. So, it makes sense that these instances should share mesh data. If I duplicate it another time with Alt D and move it to an adjacent face, it should automatically rotate along the cube surface. We can now cover this cube in bolts and quickly create something really cool. As an additional point to recall an earlier lesson and to really nail down why I chose Alt D for this duplication, we can select any of our bolts, tab into edit mode, and make a slight change to the mesh, and all the bolts will be affected. Now, up until now, we've had this magnet icon on, but the more common way to work is to hold down control whenever you need to go into snap mode. Next, let's look at proportional editing. Like snapping, there's an icon to toggle it on and off and a menu to select what type of proportional fall-off you would like to use. I'm going to delete everything here. Snap our cursor back to the world origin, our pivot to median, and add a grid by going shift a mesh grid. A grid is a pre-subdivided plane. If you take a look at the last operation window, you'll see that it has 10 subdivisions in both X and Y. If we toggle into edit mode, you should be able to see all the vertices that make this grid up. I'm going to toggle proportional editing on. The hotkey is O, and I'll select a single vertex. I'll hit G to grab. And you should notice that there's this gray ring around the cursor. Now, in case you don't, you can use your middle mouse scroll to shrink or expand until you do see it in your viewport. Now, as we move this vertex around, the vertices closest to it also move, but the further away they are, the less they move. In fact, the movement is sort of like a fairly smooth bell. I'm going to rightclick to quit this operation and reset the grid so that we can look at the options in the drop down. You'll notice that that first icon, the one that was selected, kind of looks like the smooth bell that we just saw. There are other options. And all these icons make it fairly obvious what the profile for that fall-off could be like. I'm just going to select another one. I'm going to go with random and do the same thing as before. I'm going to select a vertex, grab it, and move. Now the other vertices inside that gray circle will move according to a random noise pattern instead of a smooth curve. This is a really good way to generate some rough terrain very quickly. There's a couple of other options that exist to make this tool even easier to use. I'm just going to switch off proportional editing for the moment. I'm going to select everything and duplicate this grid. While I'm still in edit mode and just move it over to the side here, I'll reenable proportional fall-off. And I'll use the smooth fall-off here. I want to select a vertex on the edge of one of the grids here and move it. You'll notice that if the other mesh is inside that ring of influence, the fall-off will also affect those vertices. I'm going to right click to undo this. And in my proportional fall-off dropdown, I'm going to tick connected only and do the same thing. Now, only the vertices that are connected to this grid over here will be affected. Now, it might be really obvious to say this, but proportional fall-off is not limited to movement alone. You can scale and rotate proportionally as well. It's also not limited to edit mode. Let's say we have a grid of cube objects. They're all separate, and we wish to affect their position, rotation, and scale proportionally. In object mode, I can select any one of these cubes, enable proportional fall-off, pick a fall-off type, then grab, rotate, and scale this cube. And even if I'm in mid transform, I can scroll with my middle mouse wheel to include or emit surrounding objects from the fall-off effect. Now, these concepts and more are covered in greater depth in our core fundamentals of mesh modeling course, but you already have at your disposal tools to make some really cool stuff. Get familiar with changing pivot points, snapping, and using proportional fall-off. And then let's move on to the next lesson.",
      "duration": 764,
      "method": "yt-dlp-subtitles",
      "language": "en"
    },
    {
      "videoId": "fPXT6-6Z7pU",
      "title": "Visibility and Collections in Blender - BLENDER 4.5 BASICS (part 9)",
      "transcript": "In this lesson, we're going to take a look at how a scene is organized and all the different ways we can select and isolate objects to work on in Blender. What you can see in the 3D viewport directly impacts how they can be selected. The default general layout should be very familiar by now. Currently, all the objects in the scene are visible, so selecting them shouldn't be an issue. But if I rotate my view so that the cube blocks out the camera, for example, I'm not going to be able to select the camera, at least not easily. What is closest to us in our viewport is what Blender will deem immediately selectable. Our default viewport shading is set to solid. So any objects with faces or surfaces are going to obscure other objects depending on the depth in relation to our view. There are a couple of ways you can get to objects that are obscured by other objects even before resorting to the outliner or rotating your view which would be the obvious choice. Let's take an example with a row of cubes angled so that we only see one. I'm going to split my view here so we can see all the cubes on the left, but we'll focus selecting on the right. I can leftclick and select my first cube. If I click a second time, this second cube along is selected a third, fourth, fifth time. Each cube depending on the depth away from our view is selected. Now if we hold down alt and leftclick on this first visible cube, you should get a list popup of all the objects which fall under your cursor and you can select them from here. Let's toggle into edit mode while we're still in solid shading mode for the moment. We see the vertices and edges overlaid on our cube. And we can select what we see, but we're not able to select what we don't. Even our alt leftclick trick won't work because we can't see where the back vertices are, and they don't line up with where our cursor is here. If you needed to select all the components of this cube, and it was the only object in edit mode, you could hit A and this would select all of the vertices. Or you could select one vertex, hover your mouse over the cube, and hit L, and anything linked to that vertex will get selected. We've currently been working in solid shading mode, but we have some other options on how objects look in our viewport. These four icons up here will switch between wireframe, solid, material, and rendered shading. Currently, the icon that is highlighted in blue indicates solid viewport shading is on. Let's click on the icon to the left of the solid. It's a wireframe sphere. You might notice that the icon to the left of this automatically activates when in this mode. This icon is X-ray mode. And if we toggle it off while we're in wireframe, we lose this ability to see through objects. A hint of what we're about to discover. I'll switch back into solid view shading. This time I'll use the hotkey Z and choose solid from the radial menu. If we activate the X-ray button now, it will lower the opacity of your objects, allowing you to see through faces and surfaces. The hotkey to toggle X-ray mode on and off is Alt Z. This is an excellent tool for working in edit mode when you need to select vertices or edges or faces obscured by geometry. You can hide specific objects by selecting them. Then going to your object menu, go down to show hide and choose hide selected. The hotkey is H. And there are modified versions to assist hiding and showing. You can use alt h to show any hidden objects. You can also use shift h to hide anything that is not selected. Solowing an object or local view is a feature that is similar to hiding but works in a slightly different way. In this scene, there's some liquid inside the bottle. I'm going to toggle into material preview so I can see through the bottle at the liquid. And I'll use my alt leftclick trick to select the liquid inside. I'll go to my view menu and go down to local view. The hotkey for this is your backslash on the numpad. The bottle liquid object is zoomed in and everything else is made invisible. Our text info overlay, one of the options under our viewport overlays, will have the word local in brackets here. If we zoom out, you won't notice anything else in the scene until you toggle out of solo view. This also works for multiple selections. I'll select the table and tablecloth, hit numpad backslash, and now only these are visible. Blender also gives you options to clean up your viewport of overlays that you might not need or toggle the visibility of entire categories of objects. This is handy when you're working in more complex scenes. These three drop downs left of the X-ray mode offer a range of options. The first one is our selectability and visibility overlay. Here you can toggle off the visibility or selectability of any category of objects all at once. This is great if you have multiple cameras, lights, or objects like armatures or lises, and you want to focus, say, on this character's mesh. In this case, we will make the armatures invisible. But you can also just toggle off their selectability. You can still see them, but they won't get selected when you're trying to click on something underneath. The next dropdown allows you to show or hide gizmos. The blue indicates this is active. And if we disable it, all the gizmos we looked at in the first lessons are now hidden. Just clicking on navigate hides the same tools. You'll notice that the boxes under object gizmos are not enabled. Ticking the boxes next to each makes the move, rotate, and scale gizmos all appear over our cube. This means that we can select them without having to toggle into our move, rotate, or scale tools. There's even a drop down above this section which allows us to orient these to a number of views. Empties, lights, and cameras also have gizmos which are enabled by default and each have specific use cases. Some light objects have got direction and size gizmos. These are enabled by default and you can disable them if you prefer to set your size or direction another way. Next are the viewport overlays. Disabling the button makes the 3D viewport look very plain because you're hiding the floor grid, axis lines, the camera, even the orange outlines which tell you if an object is selected or if it's an active object. Now, all of these can be toggled on or off individually, and most are selfexplanatory. There's one more option which only becomes active when in edit mode. So, let's select the cube and toggle into edit mode to see the mesh edit mode overlays. The most obvious overlays here that we can enable are currently disabled. These are overlays such as measurement and normals. Measurement will show you the length, angle, and area information for selected vertices, edges, and faces. Normals will show you the direction that the face or vertex is pointed and it also has a split normals mode and that's a more advanced option for specific workflows. You can increase or decrease the length of this normal line should you need. Another handy feature is to have the normal set at a specific pixel dimension. So if you zoom in or out, the normal will stay the same size relative to the size of your screen. Other options deal with types of edge marks. You're able to see edges that are marked as seams for UV unwrapping, creases for when your surface requires sharp edges as well as smooth ones, and you can even see indices or analysis overlays for more specific cases where this information might be necessary to view. Now, you may have noticed that as we've worked in the 3D viewport, several of these operations get reflected in the outliner. The obvious one is when we hide or show something. Let's select the cube here in our viewport. Hit H to hide it, and take note of what occurs in the outliner. This icon that looks a bit like an eye is now closed, and the cube object is grayed out. If we click on the closed eye to open it, the cube reappears in our viewport. This visibility is one of several restriction toggles that you can enable for objects and collections in the outliner. Three are active by default. And you can see many more options if we click on this filter icon here, but most of these deal with subjects for later, such as rendering and compositing. So, we won't focus on these for now. If you've come to Blender from software such as Mayer, you might be familiar with groups. Now, we can think of collections as a version of grouping objects. But in the Outliner, these are more akin to layer groups that you'd find in Photoshop. We can see that there is a scene collection here, inside of which is nested another collection simply named collection. And nested inside of this are our three default objects listed in alphabetical order. camera, cube, and light. I'm going to rename our collection to scene objects. I can double click on the name and just type something in. I'll now select the scene collection, right click on it, and create a new collection. Let's rename this to meshes. It is now nested under scene collection. We can click on the cube and drag this into the meshes collection. Now the cube is nested inside of that. If we click on the eye next to scene objects, the camera and light are now hidden in our viewport, but we can still see the cube. Dragging and dropping objects between collections in the outliner is the obvious way to organize them. However, you're able to select an object in the viewport and use the hotkey M to bring up your collection menu and select where you would like this object to be nested. Note that any new collection will be created inside the active collection. So, for example, if we accidentally move our cube to a new collection inside the scene objects collection, we can just drag that collection out of there. any objects inside that will also be moved. Collections don't really affect how objects can be selected or manipulated in the 3D viewport. However, there are many uses for collections beyond merely organizing. When it comes to using modifiers, geometry nodes, and instancing, collections can play a big role, but these are topics for more advanced courses. So, now that you know a little bit about showing and hiding and collections, practice organizing the objects in your scene. Also, practice switching between wireframe and solid shading and using the X-ray mode. Once you've got your head around these concepts, let's move on to the next lesson.  Hey.",
      "duration": 809,
      "method": "yt-dlp-subtitles",
      "language": "en"
    }
  ]
}